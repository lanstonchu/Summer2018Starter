(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1572579,      28321]
NotebookOptionsPosition[   1563755,      28197]
NotebookOutlinePosition[   1564127,      28213]
CellTagsIndexPosition[   1564084,      28210]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.73387389946136*^9, 3.7338739111641216`*^9}, {
  3.734196952123267*^9, 3.7341969608322134`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"8b009a75-4f42-4b58-9fd1-29151d27f6d6"],

Cell[CellGroupData[{

Cell["Import Data", "Section",
 CellChangeTimes->{{3.7397327376069655`*^9, 
  3.7397327414767556`*^9}},ExpressionUUID->"63e62628-8f7a-49f9-8ecd-\
2c5c9084c5a4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"task", "=", "2"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"1", " ", "for", " ", "protest"}], ";", " ", 
    RowBox[{"2", " ", "for", " ", "mass", " ", "shooting"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"task", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"data0", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<2a - analysis - Count Love.xlsx\>\""}], "]"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"data0", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<2b - analysis - MST 2013 - 2018.xlsx\>\""}], "]"}], "]"}]}]}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"first", " ", "column", " ", "is", " ", 
    RowBox[{"data", ":", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"1900", "/", "1"}], "/", "1"}], " ", "is", " ", "1"}]}]}], " ",
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7338741180690145`*^9, 3.7338741182235603`*^9}, 
   3.7338741813040857`*^9, 3.7341915156171255`*^9, 3.7343636492138247`*^9, {
   3.7343640458700905`*^9, 3.7343640459991975`*^9}, {3.737734784425741*^9, 
   3.737734789024468*^9}, {3.7377351278696127`*^9, 3.737735128577811*^9}, {
   3.737736891395771*^9, 3.7377369048426*^9}, {3.7384408476683807`*^9, 
   3.738440848043355*^9}, 3.7384410134417677`*^9, {3.739649659518052*^9, 
   3.7396496754382405`*^9}, {3.739649965689413*^9, 3.7396500093393493`*^9}, 
   3.7396500915974493`*^9, {3.739650141230077*^9, 3.739650147996664*^9}, {
   3.739650495338579*^9, 3.7396505044162135`*^9}, {3.739650543661957*^9, 
   3.7396505468140526`*^9}, {3.7396507643033905`*^9, 3.739650768598814*^9}, {
   3.7396513561364584`*^9, 3.739651356292711*^9}, 3.739651388124394*^9, {
   3.7396558218615465`*^9, 3.739655822814601*^9}, {3.7396559607585096`*^9, 
   3.7396559665242214`*^9}, {3.7397326392365603`*^9, 
   3.7397326442516975`*^9}, {3.739735543130896*^9, 3.739735553934658*^9}, 
   3.7397930745418777`*^9, {3.739793161124334*^9, 3.739793168220655*^9}, {
   3.7397931986905303`*^9, 3.739793206259352*^9}, {3.7397934745866785`*^9, 
   3.7397934923327985`*^9}, {3.739808168478877*^9, 3.7398081711449285`*^9}, {
   3.739809061545288*^9, 3.7398091253124824`*^9}, {3.7398092000602694`*^9, 
   3.739809222197152*^9}, 3.7398306289525595`*^9, {3.73983110225587*^9, 
   3.7398311263304853`*^9}, 3.7398311951989717`*^9, {3.7398312915322857`*^9, 
   3.7398313125951157`*^9}, 3.7398313749274545`*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"7dae066c-eba1-4014-94d5-cfec5b336276"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "43281.`", ",", "\<\"Jersey City\"\>", ",", "0.`", ",", "5.`", 
              ",", "\<\"\"\>", ",", "\<\"HudsonCounty\"\>", 
              ",", "\<\"NewJersey\"\>", ",", "40.7114174`", ",", 
              RowBox[{"-", "74.0647599`"}], ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "43280.`", ",", "\<\"Ashburn\"\>", ",", "0.`", ",", "8.`", 
              ",", "\<\"\"\>", ",", "\<\"TurnerCounty\"\>", 
              ",", "\<\"Georgia\"\>", ",", "31.7091907`", ",", 
              RowBox[{"-", "83.652424`"}], ",", "1.`"}], "}"}], ",", 
            TemplateBox[{"2132"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"{", 
             RowBox[{
             "41275.`", ",", "\<\"McKeesport\"\>", ",", "0.`", ",", "4.`", 
              ",", "\<\"\"\>", ",", "\<\"AlleghenyCounty\"\>", 
              ",", "\<\"Pennsylvania\"\>", ",", "40.3418771`", ",", 
              RowBox[{"-", "79.845007`"}], ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "41275.`", ",", "\<\"Sacramento\"\>", ",", "2.`", ",", "3.`", 
              ",", "\<\"\"\>", ",", "\<\"SacramentoCounty\"\>", 
              ",", "\<\"California\"\>", ",", "38.5665924`", ",", 
              RowBox[{"-", "121.4686318`"}], ",", "1.`"}], "}"}]}], "}"}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{72., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{59., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 24792530583513135689, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 24792530583513135689, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 24792530583513135689, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[24792530583513135689 === $SessionID, 
   Out[83], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.739831240707822*^9, 3.739831317408633*^9}, 
   3.739831377795393*^9, 3.7398314327341084`*^9, 3.739832709284514*^9, 
   3.739835979906637*^9, 3.7398360631312337`*^9, 3.739836188642939*^9, 
   3.7398367320429497`*^9, 3.739836791532117*^9, 3.7398368262514515`*^9, 
   3.7398393131565685`*^9, 3.7398393620836415`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"54a344a1-a7e3-4fc6-ab1f-f3f0a5e7769b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Selection and Cleaning", "Section",
 CellChangeTimes->{{3.739732758502056*^9, 
  3.739732765280167*^9}},ExpressionUUID->"ff7e7ea5-d703-4420-bcf0-\
aa9cd69fa2c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"select", " ", "some", " ", "data", " ", "only"}], ";", " ", 
    RowBox[{"remove", " ", "selection", " ", "column"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xMin", ",", "xMax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"yMin", ",", "yMax"}], "}"}]}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "130"}], ",", 
         RowBox[{"-", "65"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"25", ",", "50"}], "}"}]}], "}"}]}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "170"}], ",", 
         RowBox[{"-", "65"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"25", ",", "70"}], "}"}]}], "}"}], "*)"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data1", "=", 
     RowBox[{"First", "@", "data0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data1", "=", 
     RowBox[{"Select", "[", 
      RowBox[{"data1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", "1"}], "&"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"data1", "=", 
    RowBox[{"Drop", "[", 
     RowBox[{"data1", ",", "None", ",", 
      RowBox[{"{", 
       RowBox[{"-", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data1", "=", 
     RowBox[{"Select", "[", 
      RowBox[{"data1", ",", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{"yMin", "<=", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}], "\[LessEqual]", "yMax"}], ",", 
          RowBox[{"xMin", "<=", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "\[LessEqual]", "xMax"}]}], 
         "]"}], "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"remove", " ", "cases", " ", "with", " ", "location", " ", 
     RowBox[{"N", "/", "A"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data1", "=", 
     RowBox[{"Select", "[", 
      RowBox[{"data1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "\[NotEqual]", 
         "\"\<Failure\>\""}], "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"filter", " ", "out", " ", "old", " ", "dates"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"msAdj", "=", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Microsoft", " ", "Excel", " ", "mistaken", " ", "let", " ", 
      RowBox[{
       RowBox[{"1900", "/", "2"}], "/", "29"}], " ", "exist"}], ",", 
     RowBox[{"which", " ", 
      RowBox[{"shouldn", "'"}], "t"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dateFilter", "=", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"DateDifference", "[", 
        RowBox[{
         RowBox[{"DateObject", "[", 
          RowBox[{"{", 
           RowBox[{"1900", ",", " ", "1", ",", " ", "1"}], "}"}], "]"}], ",", 
         RowBox[{"DateObject", "[", 
          RowBox[{"{", 
           RowBox[{"2017", ",", " ", "3", ",", " ", "3"}], "}"}], "]"}]}], 
        "]"}]}], "+", "1", "+", "msAdj"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data1", "=", 
     RowBox[{"Select", "[", 
      RowBox[{"data1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ">=", "dateFilter"}], "&"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"firstdate", "=", 
     RowBox[{"Min", "@", 
      RowBox[{"data1", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"firstdateD", "=", 
    RowBox[{
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"1900", ",", " ", "1", ",", " ", "1"}], "}"}], "]"}], "+", 
     RowBox[{"Quantity", "[", 
      RowBox[{
       RowBox[{"firstdate", "-", "1", "-", "msAdj"}], ",", "\"\<Days\>\""}], 
      "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"scale", " ", "filtering"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaleFilter", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"task", "==", "1"}], ",", "Nothing", ",", 
      RowBox[{"data1", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"data1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", 
           "scaleFilter"}], "&"}]}], "]"}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7384409532427225`*^9, 3.7384409907116437`*^9}, {
   3.7384410232737155`*^9, 3.7384411292378407`*^9}, {3.7384412565999265`*^9, 
   3.738441282085704*^9}, {3.7384413156463766`*^9, 3.7384413157869897`*^9}, {
   3.7384413648031015`*^9, 3.738441405179571*^9}, {3.7384416637401876`*^9, 
   3.7384416657557974`*^9}, {3.738441706143403*^9, 3.7384417726467323`*^9}, {
   3.7384418133313684`*^9, 3.7384418513589354`*^9}, {3.738444806195873*^9, 
   3.7384448154809127`*^9}, {3.738444864894745*^9, 3.738444869878338*^9}, {
   3.7384449279590282`*^9, 3.7384449357875423`*^9}, {3.7384450371411343`*^9, 
   3.738445049724728*^9}, {3.7384452781678987`*^9, 3.7384452799590497`*^9}, {
   3.7384453299439106`*^9, 3.7384453312515373`*^9}, {3.7384453897404013`*^9, 
   3.7384454054241095`*^9}, {3.7386059304893246`*^9, 3.738605931583002*^9}, {
   3.738606050528142*^9, 3.7386060520124865`*^9}, {3.7393873711280217`*^9, 
   3.7393873722554464`*^9}, {3.7393875544635887`*^9, 3.73938755840632*^9}, {
   3.739387640346334*^9, 3.7393876412679043`*^9}, {3.7395735614502273`*^9, 
   3.7395735629802437`*^9}, {3.7395795226177373`*^9, 
   3.7395795248398733`*^9}, {3.739649678413797*^9, 3.7396496794387674`*^9}, {
   3.7396497409364033`*^9, 3.739649742151012*^9}, {3.73964982461806*^9, 
   3.739649825428297*^9}, {3.7396498904415064`*^9, 3.7396498964641147`*^9}, {
   3.7396499924398656`*^9, 3.7396500049839816`*^9}, {3.7396505087240424`*^9, 
   3.739650512861297*^9}, {3.7396505507985854`*^9, 3.739650553417316*^9}, {
   3.7396507739648595`*^9, 3.7396508068603935`*^9}, 3.7396510303864326`*^9, {
   3.7396510929331245`*^9, 3.7396510945888443`*^9}, {3.739651135308364*^9, 
   3.7396511383713503`*^9}, {3.739651216979772*^9, 3.7396512700425916`*^9}, {
   3.7396513682813387`*^9, 3.7396513994874096`*^9}, {3.7396519766506987`*^9, 
   3.73965204601163*^9}, {3.739652107891143*^9, 3.7396521359332356`*^9}, {
   3.7396521976033*^9, 3.739652203814683*^9}, {3.739652524399537*^9, 
   3.739652550847924*^9}, 3.7396562159497046`*^9, {3.7396566568440084`*^9, 
   3.739656658627009*^9}, {3.7396567304909983`*^9, 3.7396567389461756`*^9}, {
   3.7396569490421295`*^9, 3.7396569805869265`*^9}, 3.7396570286624165`*^9, {
   3.739657092964253*^9, 3.7396570957826576`*^9}, {3.7396571696738076`*^9, 
   3.739657183830146*^9}, 3.739657272014001*^9, {3.7396573755012493`*^9, 
   3.7396574427871265`*^9}, {3.7396574744613485`*^9, 3.739657480261757*^9}, 
   3.7396575210116*^9, {3.7396575905045023`*^9, 3.7396575921568947`*^9}, {
   3.7396596859476204`*^9, 3.7396596911160955`*^9}, {3.7396597282917347`*^9, 
   3.7396597331636195`*^9}, {3.739659779117073*^9, 3.739659779766246*^9}, {
   3.739659844049977*^9, 3.7396598638074923`*^9}, {3.7396599381784506`*^9, 
   3.7396599523536153`*^9}, {3.7397325311892347`*^9, 3.739732546483524*^9}, {
   3.7398088686922054`*^9, 3.739808879422391*^9}, {3.7398089403888845`*^9, 
   3.7398090536537294`*^9}, 3.7398091671666393`*^9, 3.7398314206690297`*^9, {
   3.739836465271898*^9, 3.7398365768799143`*^9}, {3.739836764056257*^9, 
   3.739836772732518*^9}, {3.739836822798092*^9, 3.739836822905695*^9}, 
   3.7398393586304617`*^9},
 CellLabel->"In[84]:=",ExpressionUUID->"48acc9db-3436-4fba-858e-064f80b40bba"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "43281.`", ",", "\<\"Jersey City\"\>", ",", "0.`", ",", "5.`", 
             ",", "\<\"\"\>", ",", "\<\"HudsonCounty\"\>", 
             ",", "\<\"NewJersey\"\>", ",", "40.7114174`", ",", 
             RowBox[{"-", "74.0647599`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "43280.`", ",", "\<\"Ashburn\"\>", ",", "0.`", ",", "8.`", 
             ",", "\<\"\"\>", ",", "\<\"TurnerCounty\"\>", 
             ",", "\<\"Georgia\"\>", ",", "31.7091907`", ",", 
             RowBox[{"-", "83.652424`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "43279.`", ",", "\<\"Annapolis\"\>", ",", "5.`", ",", "0.`", 
             ",", "\<\"\"\>", ",", "\<\"AnneArundelCounty\"\>", 
             ",", "\<\"Maryland\"\>", ",", "38.9722814`", ",", 
             RowBox[{"-", "76.5063962`"}]}], "}"}], ",", 
           TemplateBox[{"2128"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
            "41275.`", ",", "\<\"McKeesport\"\>", ",", "0.`", ",", "4.`", 
             ",", "\<\"\"\>", ",", "\<\"AlleghenyCounty\"\>", 
             ",", "\<\"Pennsylvania\"\>", ",", "40.3418771`", ",", 
             RowBox[{"-", "79.845007`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "41275.`", ",", "\<\"Sacramento\"\>", ",", "2.`", ",", "3.`", 
             ",", "\<\"\"\>", ",", "\<\"SacramentoCounty\"\>", 
             ",", "\<\"California\"\>", ",", "38.5665924`", ",", 
             RowBox[{"-", "121.4686318`"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{72., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{59., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 24792530583513135689, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 24792530583513135689, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 24792530583513135689, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[24792530583513135689 === $SessionID, 
   Out[87], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.738445050092284*^9, 3.7384452865229626`*^9, 3.7384453377581787`*^9, 
   3.738445369361451*^9, 3.738445415584281*^9, 3.738452345865669*^9, 
   3.738601707357554*^9, 3.738601822636692*^9, 3.738605935348376*^9, {
   3.7386060601525164`*^9, 3.7386060858539143`*^9}, 3.738607108079877*^9, 
   3.7386101457309184`*^9, 3.738610701943491*^9, 3.739387321558209*^9, 
   3.7393875220523167`*^9, 3.739387563221781*^9, 3.739387645022251*^9, 
   3.739573431753801*^9, 3.739573531862211*^9, 3.7395735797245913`*^9, 
   3.73957504565969*^9, 3.7395794763845215`*^9, 3.739579532034507*^9, 
   3.7395804714694204`*^9, 3.73958059562924*^9, 3.7395807204110403`*^9, 
   3.739628956597756*^9, 3.739629136047118*^9, 3.7396291747737203`*^9, 
   3.739631931743595*^9, 3.739633663579356*^9, {3.73964971847935*^9, 
   3.739649747016777*^9}, 3.7396497845400877`*^9, 3.739649829750696*^9, 
   3.7396499022525024`*^9, 3.739650012516512*^9, 3.7396501004175043`*^9, 
   3.739650520089611*^9, 3.7396505573865504`*^9, {3.739650798933199*^9, 
   3.739650808151943*^9}, {3.7396509368443327`*^9, 3.7396509592094054`*^9}, 
   3.7396510606895638`*^9, 3.739651105448228*^9, 3.739651143110775*^9, {
   3.7396512245895*^9, 3.7396512480108747`*^9}, 3.7396512785851*^9, {
   3.7396514054930277`*^9, 3.739651428996014*^9}, 3.7396514709167995`*^9, 
   3.739651794370576*^9, 3.7396518587399235`*^9, {3.739652173813758*^9, 
   3.739652209533209*^9}, 3.73965255650193*^9, 3.739652613724688*^9, 
   3.739654758043068*^9, 3.7396559744407053`*^9, 3.7396560252487245`*^9, 
   3.73965605560243*^9, 3.739657252602502*^9, 3.739657489783348*^9, 
   3.739657557619874*^9, 3.739657596118968*^9, 3.7396577914951253`*^9, 
   3.7396583679457526`*^9, 3.7396591539307365`*^9, 3.7396593912569995`*^9, 
   3.739659651471192*^9, 3.7396596988176785`*^9, 3.7396598125010586`*^9, 
   3.739659908629784*^9, 3.7396599388646655`*^9, 3.739659979376549*^9, 
   3.7396607223537264`*^9, {3.739661450479046*^9, 3.739661504348319*^9}, 
   3.7396615505529823`*^9, 3.7396615870241604`*^9, 3.739662668625568*^9, 
   3.73973132242107*^9, 3.739732585450262*^9, 3.739732648088507*^9, 
   3.739733789205143*^9, 3.7397340217011833`*^9, 3.7397341896605606`*^9, 
   3.7397343290310545`*^9, 3.7397355591025877`*^9, 3.7397588936092396`*^9, 
   3.739787202749998*^9, 3.7397891565930877`*^9, {3.739793089446825*^9, 
   3.7397931214149528`*^9}, 3.7397931753875675`*^9, 3.7397932131109037`*^9, 
   3.7397934357468266`*^9, 3.7397934963270597`*^9, 3.739808176781562*^9, {
   3.7398091759304547`*^9, 3.739809227274036*^9}, 3.7398093257965574`*^9, 
   3.739825997977331*^9, 3.7398269755908966`*^9, 3.739827529735464*^9, 
   3.7398304543793535`*^9, 3.739830918551186*^9, 3.739830981957196*^9, 
   3.7398310222201405`*^9, 3.7398311051408343`*^9, {3.739831244171917*^9, 
   3.7398313176941032`*^9}, 3.739831377945613*^9, 3.7398314328868256`*^9, 
   3.739832709451689*^9, 3.7398359800892816`*^9, 3.7398360816519365`*^9, 
   3.7398361974108973`*^9, {3.739836511596123*^9, 3.7398365776297393`*^9}, 
   3.7398367320689025`*^9, 3.7398367917132826`*^9, 3.7398368264321117`*^9, 
   3.739839313329232*^9, 3.739839362266782*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"ed4633a2-c509-49af-a73d-22dffe9ba003"],

Cell[BoxData[
 TemplateBox[{RowBox[{
     StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
     "\"Fri 3 Mar 2017\""}],RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2017", ",", "3", ",", "3"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{
  3.738445050092284*^9, 3.7384452865229626`*^9, 3.7384453377581787`*^9, 
   3.738445369361451*^9, 3.738445415584281*^9, 3.738452345865669*^9, 
   3.738601707357554*^9, 3.738601822636692*^9, 3.738605935348376*^9, {
   3.7386060601525164`*^9, 3.7386060858539143`*^9}, 3.738607108079877*^9, 
   3.7386101457309184`*^9, 3.738610701943491*^9, 3.739387321558209*^9, 
   3.7393875220523167`*^9, 3.739387563221781*^9, 3.739387645022251*^9, 
   3.739573431753801*^9, 3.739573531862211*^9, 3.7395735797245913`*^9, 
   3.73957504565969*^9, 3.7395794763845215`*^9, 3.739579532034507*^9, 
   3.7395804714694204`*^9, 3.73958059562924*^9, 3.7395807204110403`*^9, 
   3.739628956597756*^9, 3.739629136047118*^9, 3.7396291747737203`*^9, 
   3.739631931743595*^9, 3.739633663579356*^9, {3.73964971847935*^9, 
   3.739649747016777*^9}, 3.7396497845400877`*^9, 3.739649829750696*^9, 
   3.7396499022525024`*^9, 3.739650012516512*^9, 3.7396501004175043`*^9, 
   3.739650520089611*^9, 3.7396505573865504`*^9, {3.739650798933199*^9, 
   3.739650808151943*^9}, {3.7396509368443327`*^9, 3.7396509592094054`*^9}, 
   3.7396510606895638`*^9, 3.739651105448228*^9, 3.739651143110775*^9, {
   3.7396512245895*^9, 3.7396512480108747`*^9}, 3.7396512785851*^9, {
   3.7396514054930277`*^9, 3.739651428996014*^9}, 3.7396514709167995`*^9, 
   3.739651794370576*^9, 3.7396518587399235`*^9, {3.739652173813758*^9, 
   3.739652209533209*^9}, 3.73965255650193*^9, 3.739652613724688*^9, 
   3.739654758043068*^9, 3.7396559744407053`*^9, 3.7396560252487245`*^9, 
   3.73965605560243*^9, 3.739657252602502*^9, 3.739657489783348*^9, 
   3.739657557619874*^9, 3.739657596118968*^9, 3.7396577914951253`*^9, 
   3.7396583679457526`*^9, 3.7396591539307365`*^9, 3.7396593912569995`*^9, 
   3.739659651471192*^9, 3.7396596988176785`*^9, 3.7396598125010586`*^9, 
   3.739659908629784*^9, 3.7396599388646655`*^9, 3.739659979376549*^9, 
   3.7396607223537264`*^9, {3.739661450479046*^9, 3.739661504348319*^9}, 
   3.7396615505529823`*^9, 3.7396615870241604`*^9, 3.739662668625568*^9, 
   3.73973132242107*^9, 3.739732585450262*^9, 3.739732648088507*^9, 
   3.739733789205143*^9, 3.7397340217011833`*^9, 3.7397341896605606`*^9, 
   3.7397343290310545`*^9, 3.7397355591025877`*^9, 3.7397588936092396`*^9, 
   3.739787202749998*^9, 3.7397891565930877`*^9, {3.739793089446825*^9, 
   3.7397931214149528`*^9}, 3.7397931753875675`*^9, 3.7397932131109037`*^9, 
   3.7397934357468266`*^9, 3.7397934963270597`*^9, 3.739808176781562*^9, {
   3.7398091759304547`*^9, 3.739809227274036*^9}, 3.7398093257965574`*^9, 
   3.739825997977331*^9, 3.7398269755908966`*^9, 3.739827529735464*^9, 
   3.7398304543793535`*^9, 3.739830918551186*^9, 3.739830981957196*^9, 
   3.7398310222201405`*^9, 3.7398311051408343`*^9, {3.739831244171917*^9, 
   3.7398313176941032`*^9}, 3.739831377945613*^9, 3.7398314328868256`*^9, 
   3.739832709451689*^9, 3.7398359800892816`*^9, 3.7398360816519365`*^9, 
   3.7398361974108973`*^9, {3.739836511596123*^9, 3.7398365776297393`*^9}, 
   3.7398367320689025`*^9, 3.7398367917132826`*^9, 3.7398368264321117`*^9, 
   3.739839313329232*^9, 3.739839362278764*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"ad2cc768-d55d-48c7-9c7a-4f5284668f44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"update", " ", "50", "k", " ", "to", " ", "50"}], ",", "000"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"times1000", "[", "s_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"NumericQ", "[", "s", "]"}], ",", "s", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"s", ",", 
            RowBox[{"-", "1"}]}], "]"}], "\[Equal]", "\"\<k\>\""}], ",", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"StringDrop", "[", 
            RowBox[{"s", ",", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], "*", "1000"}], ",", "s"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"logtimes1000", "[", "s_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"NumericQ", "[", "s", "]"}], ",", 
       RowBox[{"Log", "[", "s", "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"s", ",", 
            RowBox[{"-", "1"}]}], "]"}], "\[Equal]", "\"\<k\>\""}], ",", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"StringDrop", "[", 
             RowBox[{"s", ",", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "*", "1000"}], "]"}], ",", 
         "s"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pplSize", "=", 
     RowBox[{"times1000", "/@", 
      RowBox[{"data1", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}], "=", "pplSize"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Take", "[", 
    RowBox[{"data1", ",", "10"}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Delete", " ", "Duplicate"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data1", "=", 
     RowBox[{"SortBy", "[", 
      RowBox[{"data1", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data1", "=", 
     RowBox[{"DeleteDuplicatesBy", "[", 
      RowBox[{"data1", ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}], "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.734363691854168*^9, 3.7343642019181967`*^9}, {
   3.7343642512553177`*^9, 3.7343642634630284`*^9}, {3.734364309670908*^9, 
   3.7343643175765557`*^9}, {3.734364351158638*^9, 3.7343643987140455`*^9}, {
   3.7343644753643427`*^9, 3.7343645692996955`*^9}, {3.734364687708817*^9, 
   3.7343648331547527`*^9}, {3.7377348349996667`*^9, 3.737734894286398*^9}, {
   3.737734935204651*^9, 3.7377350723613987`*^9}, {3.7377351331540165`*^9, 
   3.7377351369147224`*^9}, {3.7377360301415186`*^9, 3.737736069666204*^9}, {
   3.73808289217482*^9, 3.7380829213324566`*^9}, {3.7380840065459104`*^9, 
   3.7380840335800133`*^9}, {3.7380846713710732`*^9, 
   3.7380846730776587`*^9}, {3.7380923861076746`*^9, 3.7380924346069727`*^9}, 
   3.738092497065928*^9, {3.7380925665134697`*^9, 3.7380925924937925`*^9}, {
   3.7384415016013126`*^9, 3.73844156234766*^9}, {3.738441648506256*^9, 
   3.7384416512997274`*^9}, {3.7396566534049673`*^9, 3.739656654131553*^9}, 
   3.739657970690601*^9, {3.7398088539317827`*^9, 3.7398088645576134`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"afecccb9-6f19-4e37-a52f-4965d4984e7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "43279.`", ",", "\<\"Annapolis\"\>", ",", "5.`", ",", "0.`", 
     ",", "\<\"\"\>", ",", "\<\"AnneArundelCounty\"\>", 
     ",", "\<\"Maryland\"\>", ",", "38.9722814`", ",", 
     RowBox[{"-", "76.5063962`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "43262.`", ",", "\<\"Orlando \"\>", ",", "5.`", ",", "1.`", 
     ",", "\<\"\"\>", ",", "\<\"OrangeCounty\"\>", ",", "\<\"Florida\"\>", 
     ",", "28.533513`", ",", 
     RowBox[{"-", "81.375789`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "43238.`", ",", "\<\"Sante Fe\"\>", ",", "10.`", ",", "13.`", 
     ",", "\<\"\"\>", ",", "\<\"UnknownEntity\"\>", ",", "\<\"Texas\"\>", ",",
      "31.481788183144`", ",", 
     RowBox[{"-", "99.3700532665052`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "43236.`", ",", "\<\"Ponder\"\>", ",", "5.`", ",", "1.`", ",", "\<\"\"\>",
      ",", "\<\"DentonCounty\"\>", ",", "\<\"Texas\"\>", ",", "33.1717156`", 
     ",", 
     RowBox[{"-", "97.2964669`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "43157.`", ",", "\<\"Detroit\"\>", ",", "5.`", ",", "0.`", 
     ",", "\<\"\"\>", ",", "\<\"WayneCounty\"\>", ",", "\<\"Michigan\"\>", 
     ",", "42.3830375`", ",", 
     RowBox[{"-", "83.1022365`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "43145.`", ",", "\<\"Parkland\"\>", ",", "17.`", ",", "17.`", 
     ",", "\<\"\"\>", ",", "\<\"BrowardCounty\"\>", ",", "\<\"Florida\"\>", 
     ",", "26.3150829`", ",", 
     RowBox[{"-", "80.2472396`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "43141.`", ",", "\<\"Paintsville\"\>", ",", "5.`", ",", "0.`", 
     ",", "\<\"\"\>", ",", "\<\"JohnsonCounty\"\>", ",", "\<\"Kentucky\"\>", 
     ",", "37.8120478`", ",", 
     RowBox[{"-", "82.8041995`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "43128.`", ",", "\<\"Melcroft\"\>", ",", "5.`", ",", "0.`", 
     ",", "\<\"\"\>", ",", "\<\"UnknownEntity\"\>", 
     ",", "\<\"Pennsylvania\"\>", ",", "40.8757813645164`", ",", 
     RowBox[{"-", "77.802346917939`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "43053.`", ",", "\<\"Corning\"\>", ",", "6.`", ",", "12.`", 
     ",", "\<\"\"\>", ",", "\<\"TehamaCounty\"\>", ",", "\<\"California\"\>", 
     ",", "39.9281988`", ",", 
     RowBox[{"-", "122.1819931`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "43044.`", ",", "\<\"Sutherland Springs\"\>", ",", "27.`", ",", "20.`", 
     ",", "\<\"\"\>", ",", "\<\"UnknownEntity\"\>", ",", "\<\"Texas\"\>", ",",
      "31.481788183144`", ",", 
     RowBox[{"-", "99.3700532665052`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.734364505571767*^9, 3.734364570187187*^9}, {
   3.7343647404173656`*^9, 3.7343648339867144`*^9}, {3.7377348508408394`*^9, 
   3.737734894672365*^9}, {3.7377349531484346`*^9, 3.7377350230005293`*^9}, {
   3.7377351531299887`*^9, 3.7377351640523987`*^9}, 3.7377353410895295`*^9, 
   3.7377355777135105`*^9, 3.737735833321368*^9, 3.737736072728384*^9, 
   3.7377369179230547`*^9, 3.737737466923363*^9, 3.737738525300763*^9, 
   3.7377467932518272`*^9, 3.7377558013024225`*^9, 3.73775592171885*^9, 
   3.7377945440673604`*^9, 3.737799994363657*^9, 3.7378029332312517`*^9, 
   3.7378424360378995`*^9, 3.7378431276782293`*^9, 3.737883929826369*^9, 
   3.737888765557856*^9, 3.7378912380899067`*^9, 3.7379361184753494`*^9, 
   3.737936665132365*^9, 3.7379701202403092`*^9, 3.737975226489745*^9, 
   3.737978030355382*^9, 3.7380012049559135`*^9, 3.738005142137213*^9, 
   3.7380591942440357`*^9, 3.738062373539236*^9, 3.738066204293501*^9, 
   3.7380695538138924`*^9, 3.738069875575565*^9, 3.738069936711812*^9, 
   3.7380761321768613`*^9, 3.7380768515613384`*^9, 3.738078923723648*^9, 
   3.738082837237444*^9, 3.738082968999033*^9, 3.738083272707301*^9, 
   3.7380925097187214`*^9, {3.738092567341628*^9, 3.7380926146017323`*^9}, 
   3.7381649319439025`*^9, 3.7382319136474495`*^9, 3.738236541957167*^9, 
   3.738236779506711*^9, 3.7382374095825977`*^9, 3.738237750509468*^9, 
   3.73823828320932*^9, 3.7382388078774395`*^9, 3.7382390715470896`*^9, 
   3.738242835537001*^9, 3.7382480038851953`*^9, 3.738248764667383*^9, 
   3.7382688952613354`*^9, 3.738271409834038*^9, 3.7382744026324005`*^9, 
   3.738277322968085*^9, 3.738282323144761*^9, 3.7382832209710484`*^9, 
   3.738283361320047*^9, 3.7383192662527246`*^9, 3.7383196406357994`*^9, 
   3.738321490214886*^9, 3.7383225088107977`*^9, 3.738323712064065*^9, 
   3.738325446565507*^9, 3.7383261685263166`*^9, 3.7383383953785763`*^9, 
   3.7383389768883266`*^9, 3.73833903554747*^9, 3.738339226580129*^9, 
   3.738339551316327*^9, 3.7383396250077333`*^9, 3.7383398413315353`*^9, 
   3.73833996370365*^9, {3.738441481647009*^9, 3.738441563693113*^9}, 
   3.7384450627869644`*^9, 3.738445286741716*^9, 3.7384453377894297`*^9, 
   3.7384454156780405`*^9, 3.738452345943781*^9, 3.738601707451293*^9, 
   3.738601822725092*^9, 3.7386059521909947`*^9, {3.738606062714821*^9, 
   3.738606085932012*^9}, 3.738607123948848*^9, 3.73861014577781*^9, 
   3.738610702068485*^9, 3.73938732166055*^9, 3.7393875221466455`*^9, 
   3.739387563321845*^9, 3.739387645109728*^9, 3.7395734318631883`*^9, 
   3.7395735319142957`*^9, 3.739575045753438*^9, 3.739579476478264*^9, 
   3.7395795320970025`*^9, 3.7395804715006495`*^9, 3.739580595722995*^9, 
   3.7395807205047655`*^9, 3.7396289566909776`*^9, 3.739629136125241*^9, 
   3.739629174867466*^9, 3.7396319318142214`*^9, 3.739633663670569*^9, {
   3.7396497185304537`*^9, 3.7396497470728073`*^9}, 3.7396497845869617`*^9, 
   3.7396498297663155`*^9, 3.739649902283737*^9, 3.739650012724144*^9, 
   3.739650100495633*^9, 3.7396505201208367`*^9, 3.739650557480297*^9, {
   3.7396509368999863`*^9, 3.7396509592406535`*^9}, 3.7396510607415996`*^9, 
   3.7396511058137503`*^9, 3.739651143135518*^9, 3.7396512482442846`*^9, 
   3.739651278797558*^9, {3.739651405539917*^9, 3.739651429042886*^9}, 
   3.7396514709491835`*^9, 3.7396517944018254`*^9, 3.7396518587711573`*^9, 
   3.7396521739199657`*^9, 3.7396522095644364`*^9, 3.7396525565266857`*^9, 
   3.7396526137715425`*^9, 3.7396547582549467`*^9, 3.739655974482684*^9, 
   3.7396560252966986`*^9, 3.739656055641389*^9, 3.7396575576751456`*^9, 
   3.739657596152341*^9, 3.7396577917056775`*^9, 3.739658368833721*^9, 
   3.7396591539776077`*^9, 3.7396593912913675`*^9, 3.739659812532307*^9, 
   3.7396599794390464`*^9, 3.739660722402286*^9, {3.7396614505380135`*^9, 
   3.7396615044182777`*^9}, 3.739661550602935*^9, 3.739661587074132*^9, 
   3.7396626686897917`*^9, 3.73973132248451*^9, 3.7397325855222225`*^9, 
   3.7397326481334815`*^9, 3.7397337892288666`*^9, 3.7397340217324295`*^9, 
   3.7397341897074475`*^9, 3.7397343290676775`*^9, 3.7397355591506286`*^9, 
   3.739758893749854*^9, 3.7397872028281193`*^9, 3.7397891566622467`*^9, 
   3.739793089732772*^9, 3.73979312146182*^9, 3.739793175424344*^9, 
   3.7397932131663394`*^9, 3.7397934357937036`*^9, 3.739793496368816*^9, 
   3.739808176875304*^9, {3.7398091759773226`*^9, 3.7398092273209095`*^9}, 
   3.7398093258434258`*^9, 3.739825999039857*^9, 3.7398269756882176`*^9, 
   3.7398275297843757`*^9, 3.739830455771767*^9, 3.7398309185846233`*^9, 
   3.739830981994127*^9, 3.739831022256572*^9, 3.739831105580044*^9, {
   3.73983125064117*^9, 3.7398313177904243`*^9}, 3.739831377982045*^9, 
   3.739831432933736*^9, 3.739832709516067*^9, 3.7398359801496677`*^9, 
   3.7398360842142305`*^9, 3.7398367322675333`*^9, 3.739836791764186*^9, 
   3.7398368265079727`*^9, 3.739839314329914*^9, 3.7398393622982435`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"c2f4c1c9-16dd-42a1-ae04-c8a5a753a602"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clustering", "Section",
 CellChangeTimes->{{3.73973277869551*^9, 
  3.7397327832219257`*^9}},ExpressionUUID->"ba1846d0-d353-4ab1-9798-\
31ba3459dd24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "rescaling", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Do", " ", "Clustering"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nStart", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nEnd", "=", 
     RowBox[{"Length", "[", "data1", "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"or", " ", "smaller"}], ";", " ", 
     RowBox[{"all", " ", "=", " ", "6077"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaleTime1", "=", "175"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "justified", " ", "in", " ", "\"\<0.2 - counties distance.nb\>\""}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nCts", "=", "Automatic"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"created", " ", "data2"}], " ", "=", " ", 
     RowBox[{"rescaled", 
      RowBox[{"(", "data1", ")"}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data2", "=", 
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "firstdate"}], ")"}], "/", "365"}], "*", 
         "scaleTime1"}], "&"}], ",", "data1", ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"data2", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"data2", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "*", "scaleTime1"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "cts"}], "}"}], "=", 
     RowBox[{"Timing", "@", 
      RowBox[{"FindClusters", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"data2", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"nStart", ";;", "nEnd"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "2"}], ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "\[Rule]", 
         RowBox[{"data2", "[", 
          RowBox[{"[", 
           RowBox[{"nStart", ";;", "nEnd"}], "]"}], "]"}]}], ",", "nCts", ",", 
        RowBox[{"DistanceFunction", "\[Rule]", "EuclideanDistance"}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", " ", "t", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "cts"}], "}"}], "=", 
     RowBox[{"Timing", "@", 
      RowBox[{"FindClusters", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"data2", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"nStart", ";;", "nEnd"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "2"}], ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "\[Rule]", 
         RowBox[{"data2", "[", 
          RowBox[{"[", 
           RowBox[{"nStart", ";;", "nEnd"}], "]"}], "]"}]}], ",", 
        RowBox[{"DistanceFunction", "\[Rule]", "EuclideanDistance"}], ",", 
        RowBox[{"Method", "\[Rule]", "\"\<Agglomerate\>\""}]}], "]"}]}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "cts"}], "}"}], "=", 
     RowBox[{"Timing", "@", 
      RowBox[{"FindClusters", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"data2", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"nStart", ";;", "nEnd"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "2"}], ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "\[Rule]", 
         RowBox[{"data2", "[", 
          RowBox[{"[", 
           RowBox[{"nStart", ";;", "nEnd"}], "]"}], "]"}]}], ",", "nCts", ",", 
        RowBox[{
        "CriterionFunction", "\[Rule]", "\"\<CalinskiHarabasz\>\""}]}], 
       "]"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"data2", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"data2", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "/", "scaleTime1"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"n", "=", 
    RowBox[{"Length", "[", "cts", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.737735111812961*^9, 3.7377351154497747`*^9}, {
   3.7377351769926915`*^9, 3.7377351829437103`*^9}, {3.7377352309937916`*^9, 
   3.737735288207987*^9}, 3.737735490728204*^9, {3.7377356370017214`*^9, 
   3.737735655986165*^9}, {3.7377357090839996`*^9, 3.7377357275909452`*^9}, {
   3.7377357910200186`*^9, 3.7377357948672915`*^9}, {3.73773620335997*^9, 
   3.737736209105775*^9}, {3.7377364703176165`*^9, 3.737736471093687*^9}, 
   3.737736954367092*^9, {3.737737155495092*^9, 3.7377372137504735`*^9}, {
   3.737737253125199*^9, 3.737737321068389*^9}, {3.7377374218283978`*^9, 
   3.7377374449547186`*^9}, 3.7377375084490137`*^9, {3.737737571136574*^9, 
   3.7377375712303014`*^9}, 3.737737725805261*^9, {3.737737810053633*^9, 
   3.737737810562784*^9}, {3.737738658102003*^9, 3.737738669631362*^9}, {
   3.7377387047978954`*^9, 3.7377387444939113`*^9}, {3.7377400803258085`*^9, 
   3.737740080448265*^9}, {3.7377401542991486`*^9, 3.737740172645638*^9}, {
   3.737755725704204*^9, 3.7377557286814375`*^9}, {3.737755768743991*^9, 
   3.7377557746877832`*^9}, {3.7377558191958966`*^9, 3.737755858065211*^9}, {
   3.7377559707040367`*^9, 3.737756074160197*^9}, {3.7377561227893934`*^9, 
   3.737756147429802*^9}, {3.737756197703491*^9, 3.737756243352512*^9}, {
   3.7377566551306887`*^9, 3.7377566846417475`*^9}, {3.737757742162705*^9, 
   3.737757770003875*^9}, {3.7377578454479947`*^9, 3.737757882509144*^9}, {
   3.737759232019498*^9, 3.7377592340669565`*^9}, {3.737759919940029*^9, 
   3.7377599374630756`*^9}, {3.737794555886597*^9, 3.7377945638060927`*^9}, {
   3.7377950951011286`*^9, 3.7377951051787868`*^9}, {3.737795253705369*^9, 
   3.737795281418116*^9}, {3.737797270583499*^9, 3.737797288504716*^9}, {
   3.7377985914970503`*^9, 3.7377986035391226`*^9}, {3.7377986592238045`*^9, 
   3.7377986652763987`*^9}, {3.737798843228657*^9, 3.737798849142584*^9}, 
   3.7377991550989537`*^9, {3.7378027889035125`*^9, 3.7378028421104646`*^9}, {
   3.7378029080782347`*^9, 3.737802908633587*^9}, {3.7378030238193293`*^9, 
   3.737803041525147*^9}, {3.737842386987755*^9, 3.737842423162701*^9}, {
   3.737842546738594*^9, 3.7378426067121053`*^9}, {3.7378427504819975`*^9, 
   3.737842752887191*^9}, {3.737842786902129*^9, 3.7378428003640904`*^9}, {
   3.737842980396965*^9, 3.7378430066215253`*^9}, {3.7378430828317595`*^9, 
   3.737843105550946*^9}, {3.737843219731261*^9, 3.737843238094022*^9}, 
   3.7378433570125*^9, {3.73784339961994*^9, 3.7378434478575125`*^9}, {
   3.7378434825505223`*^9, 3.7378435377075357`*^9}, {3.737883995517562*^9, 
   3.7378840289157457`*^9}, {3.7378841268331337`*^9, 3.7378841732231216`*^9}, 
   3.737884213166663*^9, {3.7378842477372775`*^9, 3.7378843215326443`*^9}, {
   3.7378887697316437`*^9, 3.7378887699035807`*^9}, {3.737891607676339*^9, 
   3.7378916126236243`*^9}, {3.737891750807087*^9, 3.7378917539951954`*^9}, {
   3.7379363795826397`*^9, 3.737936473554063*^9}, 3.7379365249261026`*^9, {
   3.7379365591924143`*^9, 3.7379365841611795`*^9}, {3.7380634561470375`*^9, 
   3.7380634817883883`*^9}, {3.738082952917535*^9, 3.7380829533393154`*^9}, {
   3.738235764140644*^9, 3.7382357735206237`*^9}, {3.738237863987214*^9, 
   3.738237911781077*^9}, {3.7382379612230387`*^9, 3.7382379932550097`*^9}, 
   3.7382380295823746`*^9, 3.7382382748131127`*^9, 3.7383382573756332`*^9, 
   3.7383383769000893`*^9, {3.7383388998724055`*^9, 3.7383389592717876`*^9}, 
   3.7383390304633207`*^9, {3.738339827877928*^9, 3.738339829360174*^9}, {
   3.738339902580532*^9, 3.7383399111268215`*^9}, {3.7386012164514675`*^9, 
   3.738601216974434*^9}, 3.7386012496386976`*^9, 3.7386016345640135`*^9, {
   3.7386017032170863`*^9, 3.7386017033108315`*^9}, {3.7386017620213256`*^9, 
   3.7386017917271843`*^9}, 3.7386018616637015`*^9, 3.738601893772112*^9, 
   3.7386071622182994`*^9, 3.739387386360623*^9, 3.7393876187464514`*^9, {
   3.7396319160584927`*^9, 3.739631916347335*^9}, {3.739649778948554*^9, 
   3.7396497794075117`*^9}, {3.739651424334345*^9, 3.739651424396859*^9}, {
   3.7396514668287*^9, 3.7396514669071245`*^9}, {3.7396518518610506`*^9, 
   3.73965185305711*^9}, {3.7396526097191453`*^9, 3.739652610043025*^9}, {
   3.7396560203815017`*^9, 3.739656020435488*^9}, {3.739656051092984*^9, 
   3.7396560514188166`*^9}, 3.7396567176932983`*^9, 3.7396570647831583`*^9, {
   3.739659767692318*^9, 3.7396597744239283`*^9}, {3.7396614449282312`*^9, 
   3.7396614994860935`*^9}, {3.73966154616047*^9, 3.7396615463403683`*^9}, {
   3.7396615824067965`*^9, 3.7396615828055687`*^9}, {3.73982695665334*^9, 
   3.739826959883116*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"827d1768-512a-49aa-8378-65609b83bcca"],

Cell[BoxData["0.171875`"], "Output",
 CellChangeTimes->{
  3.7382383003779716`*^9, 3.738238819332588*^9, 3.738239084790607*^9, 
   3.7382428493118296`*^9, 3.738248015474804*^9, 3.738248776600134*^9, 
   3.738268907467375*^9, 3.738271423879586*^9, 3.7382744142419395`*^9, 
   3.73827733627007*^9, 3.738282335167968*^9, 3.738283234039792*^9, 
   3.738283373481014*^9, 3.7383192796855354`*^9, 3.7383196531418715`*^9, 
   3.7383215018977823`*^9, 3.738322520486394*^9, 3.738323725269603*^9, 
   3.7383254583485556`*^9, 3.738326180753614*^9, {3.7383383850986404`*^9, 
   3.738338407222456*^9}, 3.7383389883912935`*^9, 3.7383390472755423`*^9, 
   3.738339238712481*^9, 3.7383395668911104`*^9, 3.7383396363221636`*^9, 
   3.7383398521463413`*^9, 3.7383399751490173`*^9, {3.738445091896348*^9, 
   3.7384451155995817`*^9}, 3.7384452873284583`*^9, 3.7384453429587755`*^9, 
   3.738445422481089*^9, 3.7384523546681685`*^9, 3.7386017129120803`*^9, {
   3.738601770341654*^9, 3.738601798450983*^9}, 3.738601829433972*^9, 
   3.738601868169918*^9, 3.7386019048806324`*^9, 3.73860597045539*^9, {
   3.7386060743077927`*^9, 3.738606092540944*^9}, 3.7386101540673923`*^9, 
   3.738610708774295*^9, 3.739387330538474*^9, 3.7393875267764316`*^9, 
   3.7393875691734304`*^9, 3.739387651497043*^9, 3.73957343696144*^9, 
   3.739573536991398*^9, 3.739575052563047*^9, 3.7395794833192625`*^9, 
   3.739579537551176*^9, 3.7395804764142647`*^9, 3.739580600619788*^9, 
   3.7395807253955708`*^9, 3.739628961362669*^9, 3.7396291406110487`*^9, 
   3.7396291793205895`*^9, 3.7396319354405413`*^9, 3.739633667153121*^9, 
   3.7396497225026393`*^9, 3.7396497531351137`*^9, 3.739649790394456*^9, 
   3.739649834319229*^9, 3.7396499070781326`*^9, 3.7396500134338174`*^9, 
   3.739650105750684*^9, 3.739650524797869*^9, 3.739650562661523*^9, {
   3.739650941688345*^9, 3.739650963915594*^9}, 3.7396510653071966`*^9, 
   3.739651110708809*^9, 3.739651148474852*^9, 3.7396512529858346`*^9, 
   3.739651283754908*^9, {3.7396514101820793`*^9, 3.7396514331787257`*^9}, 
   3.739651472980215*^9, 3.7396517996553607`*^9, 3.7396518626334095`*^9, 
   3.7396521744281125`*^9, 3.7396522136305356`*^9, 3.739652560426345*^9, 
   3.7396526188647685`*^9, 3.739654766440835*^9, 3.739655981808503*^9, 
   3.7396560298091235`*^9, 3.7396560608893957`*^9, 3.7396575627370796`*^9, 
   3.7396576013059063`*^9, 3.7396577968803997`*^9, 3.7396583747366705`*^9, 
   3.739659158945592*^9, 3.7396593962743654`*^9, 3.739659813765975*^9, 
   3.7396599852596874`*^9, 3.7396607274470696`*^9, {3.739661454612686*^9, 
   3.7396615101020365`*^9}, 3.739661555773985*^9, 3.739661592645954*^9, 
   3.7396626746096573`*^9, 3.739731329102982*^9, 3.739732591330906*^9, 
   3.7397326501893077`*^9, 3.7397337912911143`*^9, 3.7397340237176476`*^9, 
   3.739734191670641*^9, 3.7397343310122128`*^9, 3.739735564428395*^9, 
   3.7397589000463533`*^9, 3.7397872095000863`*^9, 3.739789162444912*^9, 
   3.7397930952601204`*^9, 3.739793126808378*^9, 3.7397931774280434`*^9, 
   3.7397932187431345`*^9, 3.7397934416373386`*^9, 3.7397934984151053`*^9, 
   3.7398081834399014`*^9, {3.739809181419383*^9, 3.739809232649192*^9}, 
   3.739809331243712*^9, 3.7398260062028894`*^9, 3.7398269834076843`*^9, 
   3.739827535372883*^9, 3.7398304630567293`*^9, 3.7398309204945736`*^9, 
   3.7398309839190493`*^9, 3.739831024120109*^9, 3.7398311057427416`*^9, {
   3.739831260052884*^9, 3.739831323004045*^9}, 3.739831379923937*^9, 
   3.7398314331076126`*^9, 3.7398327096857495`*^9, 3.7398359803531237`*^9, 
   3.73983608809089*^9, 3.7398367324781423`*^9, 3.7398367919653144`*^9, 
   3.7398368266795864`*^9, 3.73983931552555*^9, 3.739839362525671*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"785b5f97-676f-4337-bf1b-35a1bf07b306"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.7382383003779716`*^9, 3.738238819332588*^9, 3.738239084790607*^9, 
   3.7382428493118296`*^9, 3.738248015474804*^9, 3.738248776600134*^9, 
   3.738268907467375*^9, 3.738271423879586*^9, 3.7382744142419395`*^9, 
   3.73827733627007*^9, 3.738282335167968*^9, 3.738283234039792*^9, 
   3.738283373481014*^9, 3.7383192796855354`*^9, 3.7383196531418715`*^9, 
   3.7383215018977823`*^9, 3.738322520486394*^9, 3.738323725269603*^9, 
   3.7383254583485556`*^9, 3.738326180753614*^9, {3.7383383850986404`*^9, 
   3.738338407222456*^9}, 3.7383389883912935`*^9, 3.7383390472755423`*^9, 
   3.738339238712481*^9, 3.7383395668911104`*^9, 3.7383396363221636`*^9, 
   3.7383398521463413`*^9, 3.7383399751490173`*^9, {3.738445091896348*^9, 
   3.7384451155995817`*^9}, 3.7384452873284583`*^9, 3.7384453429587755`*^9, 
   3.738445422481089*^9, 3.7384523546681685`*^9, 3.7386017129120803`*^9, {
   3.738601770341654*^9, 3.738601798450983*^9}, 3.738601829433972*^9, 
   3.738601868169918*^9, 3.7386019048806324`*^9, 3.73860597045539*^9, {
   3.7386060743077927`*^9, 3.738606092540944*^9}, 3.7386101540673923`*^9, 
   3.738610708774295*^9, 3.739387330538474*^9, 3.7393875267764316`*^9, 
   3.7393875691734304`*^9, 3.739387651497043*^9, 3.73957343696144*^9, 
   3.739573536991398*^9, 3.739575052563047*^9, 3.7395794833192625`*^9, 
   3.739579537551176*^9, 3.7395804764142647`*^9, 3.739580600619788*^9, 
   3.7395807253955708`*^9, 3.739628961362669*^9, 3.7396291406110487`*^9, 
   3.7396291793205895`*^9, 3.7396319354405413`*^9, 3.739633667153121*^9, 
   3.7396497225026393`*^9, 3.7396497531351137`*^9, 3.739649790394456*^9, 
   3.739649834319229*^9, 3.7396499070781326`*^9, 3.7396500134338174`*^9, 
   3.739650105750684*^9, 3.739650524797869*^9, 3.739650562661523*^9, {
   3.739650941688345*^9, 3.739650963915594*^9}, 3.7396510653071966`*^9, 
   3.739651110708809*^9, 3.739651148474852*^9, 3.7396512529858346`*^9, 
   3.739651283754908*^9, {3.7396514101820793`*^9, 3.7396514331787257`*^9}, 
   3.739651472980215*^9, 3.7396517996553607`*^9, 3.7396518626334095`*^9, 
   3.7396521744281125`*^9, 3.7396522136305356`*^9, 3.739652560426345*^9, 
   3.7396526188647685`*^9, 3.739654766440835*^9, 3.739655981808503*^9, 
   3.7396560298091235`*^9, 3.7396560608893957`*^9, 3.7396575627370796`*^9, 
   3.7396576013059063`*^9, 3.7396577968803997`*^9, 3.7396583747366705`*^9, 
   3.739659158945592*^9, 3.7396593962743654`*^9, 3.739659813765975*^9, 
   3.7396599852596874`*^9, 3.7396607274470696`*^9, {3.739661454612686*^9, 
   3.7396615101020365`*^9}, 3.739661555773985*^9, 3.739661592645954*^9, 
   3.7396626746096573`*^9, 3.739731329102982*^9, 3.739732591330906*^9, 
   3.7397326501893077`*^9, 3.7397337912911143`*^9, 3.7397340237176476`*^9, 
   3.739734191670641*^9, 3.7397343310122128`*^9, 3.739735564428395*^9, 
   3.7397589000463533`*^9, 3.7397872095000863`*^9, 3.739789162444912*^9, 
   3.7397930952601204`*^9, 3.739793126808378*^9, 3.7397931774280434`*^9, 
   3.7397932187431345`*^9, 3.7397934416373386`*^9, 3.7397934984151053`*^9, 
   3.7398081834399014`*^9, {3.739809181419383*^9, 3.739809232649192*^9}, 
   3.739809331243712*^9, 3.7398260062028894`*^9, 3.7398269834076843`*^9, 
   3.739827535372883*^9, 3.7398304630567293`*^9, 3.7398309204945736`*^9, 
   3.7398309839190493`*^9, 3.739831024120109*^9, 3.7398311057427416`*^9, {
   3.739831260052884*^9, 3.739831323004045*^9}, 3.739831379923937*^9, 
   3.7398314331076126`*^9, 3.7398327096857495`*^9, 3.7398359803531237`*^9, 
   3.73983608809089*^9, 3.7398367324781423`*^9, 3.7398367919653144`*^9, 
   3.7398368266795864`*^9, 3.73983931552555*^9, 3.739839362529664*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"16b0366a-3054-4fa0-8cef-fac87aa47cec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", "Section",
 CellChangeTimes->{{3.7397328010857477`*^9, 
  3.7397328031255655`*^9}},ExpressionUUID->"3a68c625-782c-4e94-814c-\
50c88329a671"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "create", " ", "the", " ", "image", " ", "of", " ", "Geo", " ", "Map"}], 
   " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"yManualAdj", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g1", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"yMin", "+", "yManualAdj"}], ",", "#"}], "}"}], "]"}], 
        "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"xMin", ",", "xMax", ",", "5"}], "]"}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g2", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"GeoPosition", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"yMax", "+", "yManualAdj"}], ",", "#"}], "}"}], "]"}], 
        "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"xMax", ",", "xMin", ",", 
         RowBox[{"-", "5"}]}], "]"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"Lighter", "@", 
      RowBox[{"GeoGraphics", "[", 
       RowBox[{
        RowBox[{"Polygon", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"g1", ",", "g2"}], "]"}]}], ",", 
        RowBox[{"GeoProjection", "\[Rule]", "\"\<CylindricalEqualArea\>\""}], 
        ",", 
        RowBox[{"GeoRangePadding", "\[Rule]", "None"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.737753988005126*^9, 3.737754060608986*^9}, {
   3.7377540984177327`*^9, 3.7377542280674963`*^9}, {3.737754312634899*^9, 
   3.7377543938543425`*^9}, {3.7377544391294484`*^9, 
   3.7377544881761136`*^9}, {3.7377545222088966`*^9, 3.737754526401404*^9}, {
   3.737754556428186*^9, 3.7377545775934496`*^9}, {3.737754614004006*^9, 
   3.7377548387964435`*^9}, {3.737754941676566*^9, 3.737754951400529*^9}, {
   3.7377550326045446`*^9, 3.7377550333532457`*^9}, {3.73775711916116*^9, 
   3.73775715409932*^9}, {3.7377573596260076`*^9, 3.7377573729447875`*^9}, {
   3.7380695040113463`*^9, 3.738069536460952*^9}, {3.738069606830271*^9, 
   3.7380696226780477`*^9}, {3.7386101225202627`*^9, 3.7386101316154947`*^9}, 
   3.7386106978350463`*^9, {3.739651969289479*^9, 3.7396519706179504`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"22d4a9e0-1e9d-43b0-bc91-c2ee1b8e9da0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"year", " ", "adj"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MaxTimeD", "=", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2018", ",", "6", ",", "30"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MaxTime", "=", 
     RowBox[{
      RowBox[{"N", "@", 
       RowBox[{"(", 
        RowBox[{"First", "@", 
         RowBox[{"DateDifference", "[", 
          RowBox[{"firstdateD", ",", "MaxTimeD"}], "]"}]}], ")"}]}], "*", 
      RowBox[{"scaleTime1", "/", "365"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ctsSel", "=", 
     RowBox[{"cts", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotRange1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xMin", ",", "xMax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"yMin", ",", "yMax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "MaxTime"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"boxRatios1", "=", 
     RowBox[{"{", 
      RowBox[{"1.2", ",", "0.7", ",", "2"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slices", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0.721", ",", "0.778", ",", "0.798", ",", "0.855", ",", 
        "1"}], "}"}], "*", "MaxTime"}]}], ";"}], " ", "\[IndentingNewLine]", 
   " ", 
   RowBox[{
    RowBox[{"slicesB", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "MaxTime"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colCts", "=", 
     RowBox[{
      RowBox[{"ColorData", "[", "97", "]"}], "/@", 
      RowBox[{"Range", "[", "n", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timetick1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"DateString", "[", 
          RowBox[{
           RowBox[{"firstdateD", "+", 
            RowBox[{"Quantity", "[", 
             RowBox[{
              RowBox[{"n", "/", "scaleTime1"}], ",", "\"\<Years\>\""}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Month\>\"", ",", "\"\</\>\"", ",", "\"\<Day\>\"", ",", 
             "\"\</\>\"", ",", "\"\<YearShort\>\""}], "}"}]}], "]"}]}], "}"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "slices"}], "}"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"100", " ", "unit"}], " ", "=", " ", 
     RowBox[{"1", " ", "year"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot1", "=", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"slices", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "yMin", ",", "yMax"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "plotRange1"}], ",", 
       RowBox[{"Ticks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic", ",", "timetick1"}], "}"}]}], 
       ",", 
       RowBox[{"BoxRatios", "\[Rule]", "boxRatios1"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Texture", "[", "img", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot1B", "=", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"slicesB", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "yMin", ",", "yMax"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "plotRange1"}], ",", 
       RowBox[{"Ticks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic", ",", "timetick1"}], "}"}]}], 
       ",", 
       RowBox[{"BoxRatios", "\[Rule]", "boxRatios1"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Texture", "[", "img", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot2", "=", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"ctsSel", ",", 
       RowBox[{"PlotRange", "\[Rule]", "plotRange1"}], ",", 
       RowBox[{"Ticks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic", ",", "timetick1"}], "}"}]}], 
       ",", 
       RowBox[{"BoxRatios", "\[Rule]", "boxRatios1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"HighlightMesh", "[", 
         RowBox[{
          RowBox[{"ConvexHullMesh", "[", 
           RowBox[{"ctsSel", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"2", ",", 
            RowBox[{"colCts", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}], "]"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plot1B", ",", "plot2"}], "}"}], ",", 
     RowBox[{"ViewPoint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", 
        RowBox[{"-", "1.1"}], ",", "2.3"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"plot1", ",", "plot2"}], "}"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"plot1B", ",", "plot2", ",", "plot3"}], "}"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.737755238331937*^9, 3.7377552404864063`*^9}, {
   3.7377553543540463`*^9, 3.737755495578535*^9}, {3.7377555831757913`*^9, 
   3.737755592275545*^9}, {3.737756399888276*^9, 3.7377564318735833`*^9}, {
   3.7377564634696145`*^9, 3.7377565020521293`*^9}, 3.7377565380056095`*^9, {
   3.737756569857942*^9, 3.737756612587635*^9}, {3.737756944114696*^9, 
   3.737756973478417*^9}, {3.737757277808843*^9, 3.7377572789063663`*^9}, {
   3.73775737940989*^9, 3.7377574109968047`*^9}, {3.737758520975366*^9, 
   3.7377585230054226`*^9}, {3.7377585725737295`*^9, 3.737758615812463*^9}, {
   3.737758646556613*^9, 3.737758648460018*^9}, 3.737758683005501*^9, {
   3.7377587738118906`*^9, 3.73775877393637*^9}, {3.737758813287237*^9, 
   3.7377589592709837`*^9}, {3.737759006874739*^9, 3.7377591805578437`*^9}, 
   3.7377592850208683`*^9, {3.7377600962138124`*^9, 3.7377601077518716`*^9}, {
   3.737794618169712*^9, 3.7377946296160483`*^9}, {3.7377946909269233`*^9, 
   3.737794728659542*^9}, {3.737794780749914*^9, 3.7377947974452066`*^9}, {
   3.7377949656924524`*^9, 3.7377950153035035`*^9}, 3.73779507786602*^9, {
   3.7377951850169077`*^9, 3.737795185992134*^9}, {3.7377953126301126`*^9, 
   3.7377953264731045`*^9}, {3.7377953883747773`*^9, 3.7377953952295294`*^9}, 
   3.7377954591544566`*^9, {3.737795816984807*^9, 3.737795881385675*^9}, {
   3.7377959163176856`*^9, 3.7377959234731593`*^9}, {3.737796006210108*^9, 
   3.737796027642078*^9}, {3.7377961203916454`*^9, 3.7377961448523097`*^9}, {
   3.7377961958173532`*^9, 3.7377962750360327`*^9}, {3.7377963108219533`*^9, 
   3.737796320630062*^9}, {3.7377963534048634`*^9, 3.7377964165715995`*^9}, {
   3.73779645186104*^9, 3.7377965529270887`*^9}, {3.7377966786582394`*^9, 
   3.7377967315155344`*^9}, {3.737796810511995*^9, 3.7377968254243193`*^9}, {
   3.7377968679076667`*^9, 3.7377968844571056`*^9}, {3.73779843156*^9, 
   3.737798443623316*^9}, {3.7377986894524684`*^9, 3.7377987093867793`*^9}, 
   3.7377988329564104`*^9, {3.73779888396087*^9, 3.737798909716628*^9}, {
   3.7377989620188055`*^9, 3.737799003434802*^9}, {3.7377990369519215`*^9, 
   3.737799046273938*^9}, {3.737799311129195*^9, 3.737799317550115*^9}, {
   3.7377993619195375`*^9, 3.737799507410469*^9}, {3.7377995459411573`*^9, 
   3.7377995543355026`*^9}, {3.737799601331093*^9, 3.73779963722904*^9}, {
   3.7377997539897985`*^9, 3.737799789850379*^9}, {3.7377999682700987`*^9, 
   3.73779998087084*^9}, 3.7378000274837*^9, {3.7378030764011593`*^9, 
   3.73780310802229*^9}, {3.7378426636971164`*^9, 3.737842684739378*^9}, {
   3.737843029258607*^9, 3.7378430414599547`*^9}, 3.7378430948941526`*^9, {
   3.7378431569570065`*^9, 3.7378431706169124`*^9}, {3.737888725868125*^9, 
   3.7378887410425873`*^9}, {3.737888792121911*^9, 3.7378888025637736`*^9}, {
   3.737888890847829*^9, 3.737888893641082*^9}, {3.737888934651291*^9, 
   3.737888936077045*^9}, {3.7378890926291285`*^9, 3.737889232636527*^9}, {
   3.7378918918555465`*^9, 3.737891941374157*^9}, 3.7378919942940044`*^9, {
   3.7378927753683577`*^9, 3.73789278215735*^9}, {3.7378928123392572`*^9, 
   3.737892817996127*^9}, {3.73789288836631*^9, 3.7378929192769156`*^9}, 
   3.7379366064623203`*^9, 3.7379366966304703`*^9, {3.7379705174094543`*^9, 
   3.7379705481624002`*^9}, {3.7379705821527944`*^9, 
   3.7379705856198263`*^9}, {3.7379706282254233`*^9, 3.7379706528778577`*^9}, 
   3.737978160740145*^9, 3.737978191534813*^9, {3.737978234819269*^9, 
   3.737978237958753*^9}, {3.73797827903727*^9, 3.7379783032872543`*^9}, {
   3.737978483855756*^9, 3.7379785164615545`*^9}, {3.737978553755643*^9, 
   3.737978562804205*^9}, {3.737978609083704*^9, 3.73797867618045*^9}, {
   3.7379787512743616`*^9, 3.737978827858781*^9}, {3.7379789912114625`*^9, 
   3.737979104628336*^9}, {3.73798052120135*^9, 3.737980586401122*^9}, {
   3.737980675506222*^9, 3.737980778849169*^9}, {3.737980811097747*^9, 
   3.737980934067501*^9}, {3.7379810613717813`*^9, 3.737981102243431*^9}, {
   3.7380619052427497`*^9, 3.7380619056105394`*^9}, {3.7380695398217616`*^9, 
   3.7380695422512417`*^9}, {3.7380698359798765`*^9, 3.738069858455971*^9}, {
   3.738069928445583*^9, 3.7380699301345043`*^9}, 3.7380699789331007`*^9, {
   3.7382383800050397`*^9, 3.7382383931013937`*^9}, {3.738238435883715*^9, 
   3.7382384488563404`*^9}, {3.738238498089784*^9, 3.7382384984375057`*^9}, {
   3.7382833181308203`*^9, 3.7382833405932465`*^9}, {3.7383214160741367`*^9, 
   3.738321426040797*^9}, {3.7383214610601034`*^9, 3.738321463402211*^9}, {
   3.7383393533937197`*^9, 3.738339378564666*^9}, {3.7386101198121634`*^9, 
   3.7386101199894114`*^9}, {3.7396577773687253`*^9, 
   3.7396578533531733`*^9}, {3.7396579122573175`*^9, 
   3.7396579284950056`*^9}, {3.739660471209016*^9, 3.739660487569685*^9}, {
   3.7396606611304207`*^9, 3.7396606629559937`*^9}, {3.7396607527507915`*^9, 
   3.7396607600847178`*^9}, {3.7396608759060154`*^9, 3.739660889355158*^9}, {
   3.739661056442226*^9, 3.7396610652512035`*^9}, {3.7397313034992905`*^9, 
   3.739731310084548*^9}, {3.7397313405775185`*^9, 3.7397314055645323`*^9}, {
   3.7397314577947073`*^9, 3.7397315005283847`*^9}, {3.7398276716236115`*^9, 
   3.7398277054137955`*^9}, {3.73982778887253*^9, 3.7398278448979483`*^9}, {
   3.7398278907232556`*^9, 3.7398278932886443`*^9}, {3.739830499423608*^9, 
   3.7398305911699677`*^9}, {3.739830834416686*^9, 3.7398309125190268`*^9}, {
   3.7398309573562346`*^9, 3.739830970505207*^9}, {3.739831013720994*^9, 
   3.7398310331649666`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"4785fc69-edc9-494b-8d94-00d6fa0a3061"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx13HvYlHP+wPGRwmKdclaUJrtxJVqkkg6khkQqpEgOa8NITkkOpfgVqm3W
YTcrqRxWzjTSOiTJhbX5OTPPJumX8zlJ5Plte33f93Nd78/e/nH1uu5rnu+8
n3m+M/O5Z+6Wp4047sxGhUKhcZNCYeN///9Ppx22pr7rqQtvv+n75oVCx26F
9N+UV5qcXDt+aPA1b054pdr2lOCnLNv40Erjk4MvWXX1A+Xa4OD7frXRHqVH
Tgp+8w9jpxYnDQr+S/2//xt6YvDfb3bV+bWDTgj+z21+WV799fHBD9rlin6V
lQOCz2j587Plv/cPvsneY9qXKscFP6/9ulnF4f2C1zqNblrodmxwOk/c7oe5
xRc7hc52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc52OtvpPHLq2o6lyiGh
s53Odjrb6Wyns53Odjrb6Wyns53Odjrb6Wyns53OdjqftOW6F8qDDw2d7XS2
09lOZzud7XS209lOZzud7XS209lOZzud7XS203nW4vV7l7brFjrb6Wyns53O
djrb6Wyns53Odjrb6Wyns53Odjrb6Wyn807jfxlZWxM72+lsp7OdznY62+ls
p7OdznY62+lsp7OdznY62+lsp/MN3evnl2vdQ2c7ne10ttPZTmc7ne10ttPZ
Tmc7ne10ttPZTmc7ne103mjDPxb2CJ3tdLbT2U5nO53tdLbT2U5nO53tdLbT
2U5nO53tdLbT+ZKnC70qcw7LnM52OtvpbKeznc52OtvpbKeznc52OtvpbKez
nc52Otvp/NnlG00pTjo8dLbT2U5nO53tdLbT2U5nO53tdLbT2U5nO53tdLbT
2U7nUzs3erNa7hk62+lsp7OdznY62+lsp7OdznY62+lsp7OdznY62+lsp/Ob
PzZqVjruiNDZTmc7ne10ttPZTmc7ne10ttPZTmc7ne10ttPZTmc7nY+cv/Hp
tYN6hc52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc52Otvp/Mwlje8t79Y7
dLbT2U5nO53tdLbT2U5nO53tdLbT2U5nO53tdLbT2U7n/Q9s8k19fexsp7Od
znY62+lsp7OdznY62+lsp7OdznY62+lsp7P9pNKSOeXPhi7cfsCaMyor4xzP
PqfacXDljWODc/t2bn/tht/P5Pj7tXP7eZ63fs8hOd7O8Xl9/HNnHtb/jNqu
py58b/XF3UsXNNzOwksHdShdd2xwjr+xSc+htSW9w/F2OuTdvtfP7eet37fP
8XnzW/9c1pO3fv/ccZ9//2X9mDjXrWt65jf1o+L8HPfxHTq/8V39hXGujvv4
yoZ1jhgSjsd9/BeTHllbf06cz+M+vvfDLX+qPyvO7XEfP/udP66vPz3O83Ef
P+g3IxoVhsR5Pu7jH+u7rHHhxDjnx3381pccvWlhwMBwPO7jz77tyV8Vjo3n
C3Af//zifbYs9InnEXAf3+Lz6VsVesfzC7iPH9N0820Lh8fzDriP53Ho+S2P
NzuPKzuPHzuPEzuPBzu/dzu/Xzu/Rzu/Lzu/Fzv97XS209NOT89p6Wmnp52e
dnra6Wmnp52ednra6Wmnp52ednra6Wmnp+ex9LTT005POz3t9LTT005POz3t
9LTT005POz3t9LTT03NXetrpaaennZ52etrpaaennZ52etrpaaennZ52etrp
6fkqPe30tNPTTk87Pe30tNPTTk87Pe30tNPTTk87Pe309ByVnnZ62ulpp6ed
nnZ62ulpp6ednnZ62ulpp6ednnZ6el5KTzs97fS009NOTzs97fS009NOTzs9
7fS009NOTzs9PRelp52ednra6Wmnp52ednra6Wmnp52ednra6Wmnp52enn/S
005POz3t9LTT005POz3t9LTT005POz3t9LTT005PzznpaaennZ52etrpaaen
nZ52etrpaaennZ52etrpaaen55n0tNPTTk87Pe30tNPTTk87Pe30tNPTTk87
Pe30tNPTc0t62ulpp6ednnZ62ulpp6ednnZ62ulpp6ednnZ62unp+RI97fS0
09NOTzs97fS009NOTzs97fS009NOz7z522crDtq18Mc4f+v76CUTa8fHOdvD
46trqs3jPM3z2+x1UfGg18tz4xzsXc0P6XbI8/MeLHaMcy2vk25eJ928Trp5
ndnrIq2Tbl4n3d4YevA9xUFxXtRhv0t3LLSI86LphfkTaqs6h24/v/rDt9X7
G5xuQ+/oMKxyUYPTbdHIUUvLnRucbq17PN6l1KjB6eZ10s3rpJvXSTevk25e
J928Tv5+99I66flUXceDSnvGeVGL+0fPKX7SJfQcf8UT2xUeanB6rjr6x7G1
Sxqcnr137/hVtUuD03Pul5eeXGnc4PTc6pn5L5dfjvM3r5OeXic9vU56ep30
9Drp6XXSc2utk553D+q8uPxZ19Bz8w3nfx5pcHqeu27BzOLoBqfn0pfWbVXo
1uD0bH9rpytqmzQ4PW8857LPqq/E+dsPnRcMqtwY529eJz29Tnp6nfT0Ounp
ddLT66TnWq2Tnr3P2b1N6b04L7qs/6HLq0/FedHczqfcUrwjzovqWl3ZtzIh
zou22nJGk8If4ryo6+qnniwfFedFI+v+dWFt3zgv8jrp6XXS0+ukp9dJT6+T
nl5nNh/WOrO/9zZ7nF97Os6Lvtq2629Ks+K8qMW6U5ZVr4nzouNWXHlTcXic
F41/aUafSp84L3rskac3LuwX50Wrpi9bUG4a50VeJz29Tnp6nfT0OunpddLT
66Sn10nP9h/v8Xh5do/Q84xXu55Xu7bB6XnT/KGtS2c3OD2XzLyqrnp0g9Nz
7cTb/1Tcv8Hp2WbkM0dWtm9weg4e9P5GhbWxp9dJT6+Tnl4nPb1Oenqd9PQ6
6el1ZvvnXS1+qf+fOC96d0q3eeVz4rxo81GnnlvrG+dFhwwd26rUPs6Lyr1m
vlfdIc6LZrRbOK34Y+z56k7Le1fqGjzbP7VOenqd9PQ66el10tPrpKfXSU+v
k57NzmzZs3JunBf1Pbr7z/XHxHnRVQcOe7T8uzgveqj5uLNrO8Z50Yomd7Qs
rYs9m3658J3qv+L8redby6cWn43zN68ze52pddLT66Sn10lPr5OeXic9vU56
Tmu15w3FfnFe9NwWPQ6rHBDnRau/G7aufqc4L9qrbtzD5Z9izxMW3/GH2rI4
f5t437N7lBbF+duCGz94q3pnnL95nfT0OunpddLT66Sn15mdF9Y66el10nOT
FXu+Xj0wzosOfqnHdcVd4rxo+COnda/8HHtOn3712vr34/ztH1fPerD8XJy/
rT970e9rd8X5W7v+K5qXrovzN6+Tnl4nPb1Oenqd9PQ66el10tPrpOeYma12
Le0a50X3Tzzsf6vrY89l558+sfhBnL9tM2h818riOH/r3n32mvq74/ztgjbP
3V++Ps7f5mz74Rm18+L8zeukp9dJT6+Tnl4nPb1Oenqd9PQ66fn1KcVhtV9i
zz17Hb5zaUWcv/Vvd8bS6vNx/jZhpwnXFv8W52/V+tldKjfE+dtHHz23un5E
nL/t8uqHc8v94/zN66Sn10lPr5OeXic9vU56ep309DrpeXrz1veUP4zzIn9+
iZ5Lvjhjx9K9cV7kz33Rc++n50wojozzoiF3Le5cGRDnRZOnrPy2vkOcF3md
9PQ66el10tPrpKfXSU+vk26ez9C5S45/qrkNt+P7y/FTcvw0dcDz5lp539f2
HCn73oQ8+36EPPt+hDz7foQ8+36EPPt+hDz7foQ8+36EPPt+hDz7foQ8+36E
PPt+hDz7foScnp4j0dNOTzs97fS009NOTzs97fS009NOTzs97fS009PO5yrt
dPYcic52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc52Otvp7DkSne10ttPZ
Tmc7ne10ttPZTmc7ne10ttPZTmc7ne10ttPZcyQ62+lsp7OdznY62+lsp7Od
znY62+lsp7OdznY62+lsp7PnSHS209lOZzud7XS209lOZzud7XS209lOZzud
7XS209meXc9BcyT8P//4L9+H9fG4j8+uC6HjcR+fXS9Cx+M+PruOhI7HfXx2
fQkdj/v47LoTOh738dn1KHQ87uOz61ToeNzHZ9ev0PG4j8+ua6HjcR+fXe9C
x+M+PrsOho7HfXx2fQwdj/v47LoZOh738Txu79JckcenncehncebnceVnceP
nceJnceDnd+7nd+vnd+jnd+Xnd+Lnf52Otvp3EdzRTrb6Wyns53Odjrb6Wyn
s53Odjrb6Wyns53Odjrb6Wyn87eaK9LZTmc7ne10ttPZTmc7ne10ttPZTmc7
ne10ttPZTmc7nf+suSKd7XS209lOZzud7XS209lOZzud7XS209lOZzud7XS2
0/lQzRXpbKeznc52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc4rNVeks53O
djrb6Wyns53Odjrb6Wyns53Odjrb6Wyns53Odjpfp7kfPe30tNPTTk87Pe30
tNPTTk87Pe30tNPTTk87Pe2frL5oaO24OLfst/67pdU2cW75RJMLu1UKQ4K3
3Orbh8pvx7nlpB1Htiw9EOeW3+z+9bTiNXFu+Wy7Ly+otY/zyTYHlz+s/mpg
8GndPu9fWR7nkz/2Pmdx+fE4nxzW79MDSlPifPKVQcPvLJ55bPDDm60cVusb
5433FU9/rdp6SPDt267oUfk5zhsv33De9/U4b1zZZXmr0r1x3tjshJMvru07
MPiEoXX/V20S54qfnzX4+EpdnB8OOP+9JeVH4/yQ71nbb9/wPe4jh4R516Z9
Xnuj2jLO/UYM6NezsjbO994e8uq88tI43xt15T9G1faO87r3rz3q4+pGcV7X
a+pLJ1beiXO5R24pvVh+MM7l1m0473hEnJuddmH3t6vN49zspTELe1VWx/nY
a3d2vqy2V5xrdXpgwafV9XF+xXUA7AMr+w+v9YhzpKemP/RudZc4R2r7yr2X
1/aM85xb3mzzRfXHOLd5+ImZ59QOjXOSSat3uaq2e5xLTM2ZM/yQMx8YmjMH
eCHn/X67nPf1t+S8f6/PeZ9+Vs778aU577s75Ly/vj3nffSmOe+XR+S8L67L
ef/7Wdo//X6tf9o/7X9P+6e9Vdo/7den/dP+Xdo/7c+l/dO+T9o/w/v0tH/a
f0r7p/30tH/al6b9035E2j/9PuuBtH/ad0z7p/3KtH/aV6X907572j/t16b9
0/5l2j/tx6f9074o7Z/2WWn/9PudzdP+ab8g7Z/299L+ab8s7Z/2FWn/tB+Z
9k/7vLR/2ten/dPvI85M+2d4v5P2T/ubaf+0d0n7p/2etH/aT0z7p19vP5v2
T/t+af+035r2T/u8tH/6debktH/ad+1/1P3ltvH8b3b9N3mzdLxfd/G+wP5i
+juyX7TFqrHFO+L50z5HDL2xOC6elzxr77e2Ky2J5wGXth84vnhbPN/X9cxj
9irdFc+73V3+583FK+J5N65v4+e7Rf167lBaFM9z7X3S4muKf4nnudpP6Dq/
/HI8DzX9hqd/W5oVz0M1uqnLX4qjBwbf64DBu5U2i+eD5p1/4N3lj+L5oOaj
H9up9HQ8HzRh3O8mFm8aErz17HZHVr6O53Emz31gQfmFeB7n+0fb7lOaMTD4
kCfvu7V4cTy/w/Vz/Hx9z9TWHStbxvMy2/x5zt/KH8bzLKM3fD5pwZDgy++Z
dV1xWjz/svOiPeqqO8TzKWM3fM7483je5OPXmj9Vfm5g8H61v7YtTY/nU+Z/
uNuM4sh4PoW/I8+Z//rADi9X94/nRxo/fmPnymbxvMa5zzS9r/z+kOBvvFBp
VqrG8xSHvLrt5OLkeD5iDtf9kG/5wdbn1TrF8wsXfTJlWXXbeB6h7ptfH1P5
eGDww9fd8Ez5mXhe4L5GW+5XujnO/7ff4vqZxXKc81/OdT/kV6fPsfj596T0
uSD7JWk/8fPX++lzTfa+aZ+xP54+X2QfnvYfP7+8lvYfe6f0uSl797Qv2e9N
+5J9u/S5JvvJab/y88vzab+yt037lf2m9Dku+4FpH7PflvYxe5O0j9nL6fNX
9t+m/c3PX0+k/c3eMu1v9klpf7N/kz6HZm+T9j37tLTv2X9M+559WNr37C+m
z5XZZ6X90M+/96X90L592g/tl6f90L4y7Yf2Pulzd/ZmaZ+0T0j7pP3ztE/a
B6R90v5k2iftxfT5OvvtaZ/064RN0z5pH5H2SfvbaZ+0d0v7pP3utE/at077
pH1U2ift76d90t4r7ZP2B9M+ad857ZN29km/Hrsi7ZM+fmw63p5dp0K3k12n
Qp5dp0KeXadCnl2nQp5dpyLne6z27HoU8ux6FPLsehTy7HoU8jE5Peng1590
sNPBTgc7HfK+f2rn/tq5v3bur537m3e//Ho4+x6ZnPtl537lfd/Tnn3/S876
7aw/b51+/cw67awz7/uSdtZjZz15P9evh7Pv1eZ8f9DO7efdTt734+x8Hvg/
//gv11Oy8/i38zix099OBzvrt/N5bzv7g52/FzuPNzu/Xzv97fS0082vP+lm
p5udbna62elmp4+dPnb62Oljp4+dPnkd/PqZDnY62Olgp4Od+2vn/tq5v3bu
r537m3e//Pqc+2Xnftm5X3bWb2f9dtZvZ/156/Trc9ZpZ53hfUdaj5312FlP
3s/162d+rp3bt3P7ebfj158cb2f/9PMm+5Wd4/08xb5h53bs/F3buX0/73D7
dv4e7fxcOz/Xzt+XnfX4eYr12FmPnb8jO+u0s04767Tzd2Rn/X7eZP121m9n
/Xb+vuzcLzv3y879snO/7Pw95r0eCHMerk8rz65PK8+uTyvPrk8rz65PK5+d
M6fKrk8rz65PK8+uTyvPrk8rz65PK8+uTysfkzOnGpczpxqUM6fieD+P1OXM
qbgd+2M5cypu3/s8t2/vkDOn4ufa+bn2rXPmVKzH+zzrsbMeeyVnTsU67azT
zjrtZ+fMqVi/n0dYv53121m//YucORX3y879snO/7Nwv+/M5cyrur58Hub92
7q+d+2vn/tp758yp6GCng50OdjrY6WBvkTOnGpczb6GPnT52+tjpY6ePfXbO
/IpudrqFeVfqZqebnW52utnH5Myj/h+xoozo
    "], {{
      {Texture[
        FormBox[
         GraphicsBox[
          TagBox[
           RasterBox[CompressedData["
1:eJzsvV1rI13XJvbm4yCH+Qv5FznNYU4n5AfMkMmQkzcwEwj5CzlJIISZYWYI
w/MO79N0N3033U276TbdxjaWsYUkJCEJSUiiJKqKqqKqKAlJSGJlXWvXVpU+
LcmS7b4f9826JUul+tx7XXt9Xeu/+Wf/6z/5n//zv/u7v/tX/xX/75/80//9
v/uX//Kf/h//w3/Nf/yPf/+v/pd/8ff//H/67//+f/vn/+Kf/8v/9p/9F/zh
/8nyD//Z3/3df8mvRSJKSyH1vsRSjmVEm/91WBosLZYmi71l27/dfwHLJPV3
77lO5PXfgf+qLIMdt8X8aZN66tv+TahLr2Ph9d/rP/VvGY/WCTAK2FShh+fX
8f/tqgGe89/vcI6v/47xT6/RHnriwK7hTnt0H3lGr/9e//15/u2CR2nBfIQ9
NJX/wkcde/yoXy//6x91b/v9g/WY1isOqTUvxHuWM3r999L/jXnURDxqHzeH
nvKfQZj3r/9e/x32D1pyxmKRWq/VWWrx+0r8ui8eFePfNmKB5j10heeTGuOd
A3//+u/13+/7b8CI5LMN9XvYR1bqtfmcJ/L677f6BwyCjodPoZR63YQt5+4j
xGbhAfqTXy/47+6W84J/w6PJip8DPvZLBqZMpMY6BFGWdX5BWECwqeAHiWLB
6jK9Znvc+k3ved0/2Dmzpc9GpL0y2365+7/n8vsd11J9Wf+Wn9mu/zCyTokV
Ic/THLVneb77LxuTEA/GHM321es1T876q6H0+m/LP3iGMFZ+efthyl+L4SMl
UJKz6W3BpfdFjz4UXWp4bfJGBnWiKpW8LBVDg8p9nyp9j6qDiIyRQpQZSy+K
6KLl04eyT2c1j76wfKoGlDECsvshY0xAFSegouNRMLHIm7TJGjao6hcp7+XJ
6APVfNmfz/udztFqF3FiAQKGsSxvg++81DZpNFR/h5MO1YJbaoZV6vUNRiqD
r80kpdMeOoeQxv0WdepXNOo39zj3Y0hIo+ipj/l0MpaxYe+wLZ6vv/bZnuq+
43hjniNNo0pVy6F2EFGLpelFZPUjisZ8/i/gHlo8P0t2RJ+rId12I/rZiqgb
bf/NfnPw5clshNX1LnP3YQn5OYajLcdKyWjGz3ym3uN1cuLrHE3VMWbxM9t1
vG17vriGdxoX9pbH4tESLuU9wab3RZvxhXGl1KNfrTbddx0ewwH5Y5OGM6Bn
sPAs9N/6+VW9kM6bIeNSSB8rIb0v4W+PnGHA20NvePF4AZbg70R/jNmSGsm+
gGUemcMK40SGvHE13j6Mf6P3oV/t1L6W77NF3X6enFFl6fMw9ap+O5p5jE8W
Leq3ZQlpVf+5NGRssIwsmyy9PcaVG1/bIfrzcXg045XQYLbu96fU5bvLZNCJ
n/nydx4Nph4/q23P6DGix2NA6bG9LL5fo3I9S/lmlf748ZmuS0WqeQqXLF63
2QOFS899H//W5Jh49OCxtnyusem578e6c4MdkTFC+lLVejoQ+VBexZk3LJ/Z
xrjm7QtWSEWWshOx3RJRnaXqRlTkNc8bxpLjCx+/4NGbPMSlN9kufSwZdGf0
6N7wqOZ6fC0eNX2H9cFmvYVngev9WlOY9LFg0E2zQ7meRUao17OJzBhPhvzq
TfvUHvB6s9+hetikolenrHVN99YZ49wl21ZFagYZylnfKWt/JyPKUn/ajO2Z
NLYleDWjLmMMtrFS36clirfXeKf1UJj6XL+6G/bhy3duv0s1p8N2YEjhrE/R
LKJFnab3Gc2PO5q11ny/bM+tE/5+3N1wPsu/3XzOSvTxgvheekv72LbvNec1
0+uDx8wdO3Uei8fEs4zkuSfro4evd4vMLCVL9wX3YirebP1MkmMZbpcuynW6
apr09tcV/by7pm4YkLdlPf20YvHarrNy72AfQR9pO+7Yx30O+yp9zKfEo99J
Ah6XwJGMoezld6VY38fyNsadTFfhTsVVY2VXTD2efbTJZuLXgs+4ZNO7AgQ+
PZc+lR0qOT2KJl0KJm22aZZ1gprjwKSGb9Nl26WvZZPeZ5v0nvcDfCrZIU1m
ybWwZUVNvl/VwYClL37BCs+XEt+PYmhT1s3QnfWVMehMXm+tL5R1vsW2xbI+
CtmOa/G51fjcDOoN81T1L6m/1hbQYtNsrV3jxDp/l2fik8/3oxi0qDYcKOFr
6Y4e0uEvwx45powi+Nq8Ex/neH656bAT25p6LHms44zUOmfb8X3qOVUqFM6p
Xr0k163E2JZsizlt8njuBE/5HBbvT84MZS2blzVuRFkzorN6KIK1IzAKtl3d
C2Xd240xa9/jPrVNYISRXA98TdEkItfn5zY7HI8eOv9tNtFgqs7j0GP3J4/7
/Topi782oD/Y/nlfUrjzJrZ9PvBnd10em3vgziY5LR6t8edBGJ/Ep5fv0h95
g6VDZ+UWXbcMHr+eYFByjg7ZQ4M6bA99L7XovNqly5Yv4x/+vJaf3tajcGqw
TeGw/rapyrqhGFQZjywq+CWxhe4Zi+7tr9SKbskeFQVjWlGGf2vO9wMdEjIO
eaMKGf0staM7agS8buX3ai294X7yen4weCweqetwxw0+zwzl2barCLYyJsk6
dLPv588m41Rc8HeQCeNR5Ndo2XaFjYFxg9rXwazD0hKbA+JPqjK+RjNdPauz
erTdz/ayVaTLi79S5uYDVSsXZJklsuw65SsZurh4R+ff/0LNxtXCcaexJP7w
w8QZRuI/hF8F8+17Q2EPdJIWvTZGzAC+mvcpwd/QV9+b+2P+KTBp1/sxZp0z
m57OPkqfA7AD9jBwEFgCTAc+DqeH7Rvrgct2RL9aoWDEsp9kn/uKeDz8cXjO
Wn8jto8xsbyfYzyvp8OjNfjEmPTXgvLpXbdtynUtKpo23Rkej32fMh2fSqZJ
OaNL36psW+UtHvOujHsVT1LzJD33zUGeyt4FFb1Ltn3OWa4o71co57FtJHbR
mWBS2ftF0bTO+FUXO2jVr4RnqGNMWh7QjbPN9tFsLzwK2Q5rUcH9xed/w+de
oUJQE3zdbp/9ueR3w6PpyKC+Bzxa1mN6POlx5MhzdHm9Y49K1OT1UCO85XUR
48ygxbi1HO/yY1vJjvftz/c34mNavTwV8mf069c/0o+Lf6DL2/dUKv+ibq9I
ev0ynfHcYFzrGfcUeMsx0PUCuwa654+SS1dNS80/zNciYsQO/ZXnLebvLnFq
4FUnfP5ntPPYYzyiR9hH+wjyCeDz1DYN/tZriVP5LYF/wDzEJ9O4pzGlz+eC
/BqsP7CuuO6EYgvDNj7OOmG932MdVrw5ap7DFsGYhi+PJW912S7yqNdn7LCv
GDcYU9wsNYMKVb0G34s2VR3GK9uj+15AN4ayj26MxVyfaNagCuNR1v5BWfeS
7h0W+1xwCP65W37NmIgb/aSSxJLAPrFL/tUOgnjHJMGjcD7G9rWPsFbyJUev
FWUpY/3ka/ghknN/UD285v12nmSuPKcoPFoct5ifmK+4rzoX6STH5v26Q6Un
dtcJLttI7SU/27acTWUDwSdw13N5LHs834MDfC3Yj03RsElN745K1jWVe5d0
nnlLn7/8ezr/9Z/ox89/oB+Zv9Jl+Qt9O/+PdH6Bz/5CP87/Qr8u2fa6fkfN
+iWZ3Sx1rRrdGy59rjDeZE16X2yzTdTk+VZlW8de8HHg+79mLYVND2ASYt3m
A3l5j5Vj2VR95MiOH8ajdc/qJeYf7COID2Edguf1oxls8bf6SudNLSUr66iA
1+EmDYYmdWyDqrAteh5dtjy2uTy6aZhk+B5N2A4djj1qe84z2kehWlvlHXn9
WLYZjx0azLqyZoQPo+CyfWN/Yz38nfGE8cU+F6l6Vd4W+RDKLl28XwE5/PuC
+5Ntiwu2iX7EOPRVsEi9fuX16B2FE1RqHTE+sYRH6ec243Wsii2sy/VaFPiP
sQ4ZS66HI/dDXcMXse2a4l/88/vt1uHRJoFfaXCgf+OYMpXn3KJ97Loh67TB
EbA1moaM1ci9QaWfS16/RWUzQyXzgjHqgtdzGZ4rFfKiOttVXRryubphj5pO
j7KdHp3XLfpUsulj0ab3JZ/eFaE3mvzeobf8/h3bSW+KfgpjfDWHgU14D0zK
WQqjBJ/S2yaY9KUWML6tym2vQ/5ov3t3Kpnw/dklfvS7Y8+ywF4CFmG9v/na
fMkDTnxGSf7XIKhTyPoZ+i7J7dL+AZXv3I1qZPLcvm1Z9EfFp6+MTec1h/I9
73nxaAGTsB5zKBipNWM4qVOR7RzYNcg9gEAXF9wrtpk6ZESh4BBsyN7Smgu+
+ArbPrdWkrcgdpLzUzCuFlzHfq8j5wAwHg2Hm+JLgdhI6jk+fNyFXB/qUt5V
uJpzv7OtXX72cfsUMpqP+Ye3hS7XfocxPWfdTiDn3V+II6VtpN3HnPbZPO58
dI6oyhP1R77UXWANDP+CztVFnOetxpcU3gCH3qzBFcg7xLVLAS3iU7wPjU14
zes5vn4/Ws7becrxGtKR8W098rof9wwHfZ0PuWV8blk//G44hfUccrAvWiFV
nPQYdchzSos2/4zthqCxYV86xrEptxdrJZV7O5yElO/ymBx68/v17HgkmOTL
eH3DmFT3gvl9QM5BzvnB8p3yLO0oS9agxzgUyv2DFKxoITcWuXDN8FbsKuWj
O6MMS867p6x3w/aSymWYnWS82zQebasb4ucY1iUPaz8s9CRHHecOfEXOuop/
P/84PqUoO+PU+XXHl9CtUqeeideI6e+SGrVNvwUGwc6DzWQcIV8pLahpneMP
2z9v5vih7ZyHY0Gwb1AnAl808ufuump/b1a29RO7SeMc/Hoao9Zg3Hu2zb7W
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
B4fbGAk3M3wSwCJlY3jyGfx09eCazGFe6nAxvsCHd2t8oevaR2q7t7SfPtJr
0VTPWvjw/sT9W7cJeuae0id/TO67wSzth1DPbcR4injD8a9BzV/41KKw9Yzj
wyXbzMd+HpcyXUM4hlDj9Imx6E3MlTzHkBQW6Zxy4BRqYGDHwFe2fAzoNORb
I2ake1u81TVTy/nicQ0TcvlQt/u15ov9tSkf/Z3UVqEvnC819ttz8C3hFzP6
BeEiq/l3POfX+RqW53u6P5ia1wMeE1Go48QeJfM9ySUV3qm+4qjEfUFsC3Vf
/YPzxG3GvCpZ3SzdXL+n8/P/ROc//iI1RUcZC4zDwLd3f/2/yEbd0obtcO7u
XK8HFAxdumm59KsJbqpn5q9bi0e2jLVvPJZGa+sB09ii/FmI3dSCK+EazTqX
jBsV6o2qFEz3yasLhOdb+d5uJa8NGGMOVN+jovdT9o/vtf8C+XyobUI+OTjF
sR1so7p5SdGgLjw/R9E9bB8t9tXZfx+qbgeS2HMi0x4l9uHDMpy0dth+sw9r
HxlFp4qlaR1zajvJU/66ma6/1td2jH0jPmGxjtk3RrW/THncqFxz6Me0DzqQ
a7PYpr9uWYwBrsRu7ruB+DfmHA0xJgGr4JsDPqAXAnADNVLo5b0rhyxiQNed
SH67UMcktbXWCscEOJCypi92G2p3N9X74nx0Ttpq/WqYuhfIJURdvRnX7e45
l9O5tCvz2RXevBHbUF2rTtVmiTyvRp7fINNtkeMxjond1KYhr9UGiFf1m/y+
KX+PBm3GujaFIb5vy9/4zujcSr+SQvUbNa0M20QZsWuX7aL9rmP18+GwS/d3
X+nu9ov0QilagWCpNwqoarlUNh26YNwRG7bD0groez3miy8Gca32gbVsp5K8
6kGRMfw1umI53qveI78AMR3wu4FTJ+lLvsvcD8T31h1kxd5BrtyQ8Q29KIA9
8/2CQ4/33ZScV70uMqnHv0M+NrYDr3jTueExU9v4zA7Va9A5KhZxCCah1xtf
i3lORUPLD/Xa/kGWl1P7Ru4A6qcmphL+G58jh30Wv3f9Is+ZDl/nNY8xxmDr
ktygRONRW207MlYE/EgQ9f16oZTo3/lSv/Ob9+icWSl/6zHjgZGMcdTcnrae
OpR6imjakB4oy3MKOWjXTVviveA/Q43GWS32j82xSGET8Oi8afDcNsUn97mq
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
OSxLon+RP5D0GFr016GGcrWv5uMEuQa/ijU6LzWobHvCg1BxAuFEA4eenEvK
7zbPHYv1I+Jd2O68ZlG+61A7CKQXoNRVeVWJwQTggGQdgvmEng0O5m1Yldoe
PQcXdMOoo3L14/k3iefqbK4z4rm9lMePbUdxTEdzPqHmEf4DxMLdUU18Oena
fRUDTPpc4xlO5vvQfZZsiR2pWoNeXEeguc7UnOtFAf1RUfcENa7vS+jL7Tw+
lqQx6Xf23cXcDLCZz6tlyrS+s3ykTPsj3bQSybQ/UdZAjfI36vlZmrDd6oRF
qtmXVLZ+CS9u2VRSZckydt20PjG2faKrxh/8+pHxLEOmy+t0vy1zMfJZ3496
89if6ruQ9FmQv5fi4vjcC8tU4+N1vSyNRq3kt6mYO8aeExSp0P0u/Lwmb4vt
8TvDuWfsrCvbeylWj/wD31F8eOiDO+8Ty9/hXMOoR1G/p2r/pyr+DuwKGOvg
R8Z9yrS/UNOuyviNdsr1fXpdve37P4d9FMk1+KzjoOcOj12eIu4ZqPE1OdRv
rfneQ7pqWhKDgU4Dh+ZNx6OK5VLT3cT1rnVn6nPWq+Arn+dBznMjkxzLwG9S
lTHoS8UVP5u2f97lrXn96TyGFccBVC+JkJqe4r8Dnx3sqZ5r0HCoe7Kq+6Fz
poFBPZ6nDftK+qrkWY+gLwt0OuYj+AHB528FBfKisuq3ItzajF/DptL9cW7M
XI9MFufrPG9Gfzbndbbn9fir/htH6Yjl5zDTPESp+mjeP3KCUB8wHFpU77ZF
b+B79Go3Il/qUO96Pt11Vb+Nb3XN+7Oak3IwJv2OuDTP8wBGW3Tby1LW/i55
cogDIYcb9a/gYAKPHPw9Kv/OIWeEnIZr2T6pj13k2MjaP4SrsOpfUThRteqo
rwvwfFbypHabi4jRw/ek8is2rfPDmA/kZ8ynZwu3DX47W9tfMtn/pjxh9C+D
T2K51g/xMPDEIi4jXH7u95i7e9/8updRy/PnwSN1LZaRfUR8cTkefui5xL9n
/Ydzmg4OjW3p/GEVr7CshtQAdYJQ6nDAAb09N2LVpwRu8tCtxr6ARX+Bln7U
Iafvi2+uZIOXwaOPvKZ/E/MIvC04YvtouWiHwvGzzocMP6Xi9/NT16S+w5wG
V0s25n6BXkFer+KlUnXlsGF0vwB8p+KhCZfxjNIY88CcYjyZLthJQeqc0r+1
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
xT6Ql0Pb4fv+zkn1LgrEdhjsaBdPZ4/lK3qMqLXZbKq4IINxXepWK51zqjcv
yQt0TcQudQS7Hu/w3yM+NpxFkmuXMTw6q7nS3w1c0a/5dX9iiXHpY6VNGbap
B7N9fEK6h1Z67JnzOBJ8T85a2wbiSn1SLuW/g95V8SZlHyEXSGo7RA/7qWMq
vpP1PCqecGQDB81BYcOxAzkOeLRxjvCNrfaE2F8OxaOafzm3FcVeZDyHXvDG
5YU87dVYtZKEm3W9Djg2HqnYxrH01iF6Tq/DVR8shUeb6lyW84+PpWtduQ9G
83ZD7dEh9sXxZYL4I59fNGxIzWCp+oOGPK8SG1nFiPxJPe5Ddgyu/cfwRMHG
9ak/tRmP0AvWprLTYkzq0JeKS++Lr/0l/vQiuSuO1D7XXO+Razhf+ueVWNcn
tTSbdKHiEEVf9EpcM4o4CdZtwAjgGnx4qkZC+6NUjFd4w6bb5s4uXNGeHL/N
Nkg00Tbc4fpqPzxK7BjJm5d7cCECOxH3DTnh8OFJ3qL1lQ6tJVZxtePaR0kN
2ak5B1bHTDRt81peY7CVsqf1uWju+FOdgycxoXbthtb7t5GXYqypwT6+TFZ8
gAqjJ/x8hqMm2VGRir0fdJl/SyVDc04lYxD+YMQtZwsYv+vxN6x/Dr4elXse
TXrUCovUifLUCJrUDruUMx16X/LpbdFP+IKeW2++yskxCf2tCpYvPexXc1Ef
HqvwkyE/ADUu3Xk/1H1zlC3BpEZ4rThGvSsyrSw1jRsajBOur2G0rY/f7sfK
s87HccCRemjOAGQxn0HXwC7jgC12jsq1XX9Pxqm6EHUvM+JfPHTtenw86j6j
fRStOe7hPSfgE9q33gH4B65uy1iXB6PWQTMyDn5eu8l6/kJrUKOKdUnX+fd0
mX1DmeIf1AKnKq+7VHxY5cesq1uFP3i6po/r+vWprlk6Te3aeOpRN2Jc8k26
NTx6V1J66o304HvFo78JkTwHJ66ZtRkH0OtB9Xvo9O/jOM5DPgjNhxfnhQI3
5pyMu41FzAlgGXIcdF2FxFY6n6nWvpjn0fpu4whxDFtxxPL+YYt4o/X1I+uv
c/Gz0dw+Cub9C5G/kebbxufVlV4V6Tm+eD2Is9WED1DXxe9vj/y540eRjDHV
93T1u1X74bHiSr5hFGziPQ2XXo8tep3oU5LT4Srenn6Bsp2vVO1ekT0sCxei
ijkqnwLGEPwPiDOCXyvJ3U/nc6fXn5v9btMHfMSrsjtvgz2IGIN8yhhdOm/2
6F2cvwBu1Te6x8QrHv1tSPy8v1RdqjgBDafIVzIEG6C3VX7p8jjchUdtd14B
4N/dMg9pnIdXtn+SYd+LjpV+QzvVQuoen3pdqPW+LfYceEzR/w6i6lAf0t2u
1NQuY0raXwd/G/xuEKkdmlTFBkN++XpsDqV/GXxz64+/Kw/7Gt3xKDxa1Ucv
EY+epiZWrbMCt0rTkeaRXxat05d/99D9178Plt6n+XNd4Q3G++nMi2uEfOHC
KjrnlK1+lR5k8CH0J4rbR/nLGa9mJo2mBjn82YTHfM/MUq38k9rNa8n9V/n/
OXKtAvl2WeqWwEk+mfekWDd/l3XAvuPTp8Svnvh+q25In6r+HIf+GuPQ24IT
c9i9xo/+pkSvQdhWqthqjM3ivqVY30Ovaj/cJOacVz6mx+URK3HFptC52PO8
bNbTRbZf4AfUcaSR7kPz4D4tyV1AjAY5d9g//F/IFdA9bsENe2f9iHPPdX3J
+jkYjGuCM6pPXvLd+vojpU92sQ+xDfDq2H6ep7ePNOY/VWxpXzzSuLGP/lS9
+CK/ybq6EdfVJrWd41Gb+sOm+JY99FhBzSvFwt+bRnHp+Jq31InFlrpasfPi
Glq819Jneww1OqN+S/Io0t+hjhYCv2y/35XvUfswhp92agp2otYMHEbTmX4u
u8xRhYmzef5KQKs4GVDim173vDfzqUZs+4NzpBf7pPvCH+ZLv72ybdNZzU76
HKE+5RWD/nYlxqM7w1uIT8J2ASZpPZ62X1Anju8Vr8ChvGi+9O3Bvmr+lWAI
8A++BmCfytezSdWe1ynw6jvMLUv4SmH7jOM+YeGkPucxXbTDvlLG+i42jcLc
dXoriHPJF48z3KsedlV0Paxa0x7P33OS/LotuSSC+cKj2zrqdWyWZTxK68wj
HYP1cbX4c8N99GS8YE6U164nQuofmHuZltGB+/DtSpyLGsR1xPvuw1fPe6Iw
UmpkGRellxMLalpncv+Xn7Uf+wsXewEuzqeAHMbOkpOjBs/liuPRRSugP0qe
ih284tCrzPHIppsO1ivJGBvOXLIGTV7Hg9v72zyvW8T9LnYHBDkCKnai46fa
j7GvftI9KtetZQOZH+PBw7x1qDvV/jPkUcNPV/Eu43qfsxXfoMZa1KEib1z5
y9f5YlL3Zqu+0H2Y3I37Qc65ylvQ3x0HQ46NR4rXpjmvsU3kOPtf0IM77deO
9WFEuu4aayKPbZZuYJM3fGzedSj6WHGlrvvemfuTlT979feDlXiTvrbN57ac
p9b3DqxJYPvL6mSlVmoyPc5z0lx3GvMxJtQzWOUiWlwXaN+ly88noKLl01nV
oTc5a74GfpONuYGyXYVHz60LX+X5RcaGqod+V/Qk7/9d0eZXi8ePRecNi646
FSq7WQrHbcltHc3zwhRfHXpUalsKWIX87aS+aFk3H6ozHMUJNtmtp7n0/47X
seB9SPPtzX13yJ+wzuJaoG9SLws7CteifHne2nMerfB767kfzO3KguznW7yO
XtYNKldX/w0b8Rg5TMfGIyW28Mb0mrfUqV0Ljw6t1UePER2z37bPMOHYO+r1
Jc8RerxnsD7vr657BtJn2RVfckXyVNZxbYXCtZP+DOMBPmTFVbVaR+ePVu9F
4D3WbvbIdjSP3WPuyYZzmPbi3Ptt+4dusKnmWfS9HseDgDnAn1zq/StX3ass
i/Txs2J72Z+L5LkUVQ/7dzyeypaOGS1y9QxjTMrH+lz5zM5FF6u+59+FWwj6
Wfnh0jnmi5w/6+NSsV+GdVHoVrfMgWR7+Ot0jzz4x3B+K3x6qbpUT/dlYD2D
nA78DueOV0v6c/Tm56xqd9XaT+psY/45+BqBa7h+9NLUcSvvAS4M2EuIJ+F8
H4Mnp8GjRYEeAh8cYhxJfehyrP8Uxw4SjtSj79tTvHi4prXPKX1daZ7TZT9h
uBJbhP2mxtmZ+I4fOhf0P/H8h/qix/uebv8+CnaNux4iDvWRZzTR+R6r29wZ
foJDK/w/Pr3yAb3KigCDZLy49JYx6W3eYvvIERvpI9tIn4o9epdXvt23LF8q
FtvepvT6awW6r9KS3ljAFF/mpKqBvZf5gfoI7VNzUv2BpDY2zCxx+vjCCR6C
726679pYxduBJfdzX92afD7GEBULW/699rU4kiMuNav2N8o0P4n9c28n+8Ia
GP7GaFqbH7fLa2LkzwOvVB+ibbpa25CH64jR4Lj1R9slidWPwgZN+m3JAxDb
cbbcb31RZiLpe7H0/cyjycynxdjQCfGIz7fXyW/Yt1rbrPJM+fHY9Re2XcYj
cEzBF5y1rna/r7PegdxIi9KPjK1jAjVZ6D/0mGOM+blPB+l1kFpTGkFAX6ve
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
tXXTapzMjtILY7EX73jQpo55u2YNcyzxKLDKMQ9rcs1FK6CPlVSNx2tN6/MJ
bNLnPoffXWI8gt/uj0pADW8/HQG/9mTQmn82mxlUML7R+d0/0KdP/1rwqVFF
/ag//w3iP6izHe2c55DEEVT9zw+qBrqOXu1Xc7LM5vWsgeJJeZS+2TWG4Atn
BfyGwL0ZreNWTuR3xCPEjgap/K3Z0t/rxY79WMfozeSQ2b4js5Pdsk0onE7w
NcNeVn69xe9Pdu95/VWq/qBmkKHjcgYmouuO0aOi5Ud0VveEy/KVc/uFSPYV
j44mkvtg05dqQEa46xyxqB3cUbH7I5VTa0uOuNQAWZ/59bN6b3yii9Jb+nz+
7+j9p/+HPv38d5Rrn9H+vYVUn1ul8yPRLabEt7SeNAUXkO+Q9tdt02GLf6t6
dsx7m20+xeHfkrpO5BDivZLmXGw3T3eNT2TZeYlZpb/zvBYN5r/R0j6ZznqM
TDfwgkeTiKy+T/3Jtr4668SX612XP4DvrFGVbcsfMe/8Q/oePYtya57Xuue5
uV/d4bVH28Vo5RgnDDoO9q6XThDwPPLpYwmc2+arPfQqf15B3DOvcnLelwLK
WbvV4yPmD6zJtL5Q0b4WvgfUCW2s+TE/U8n+ScNBk3rGHf388Rfx89Wr6/i1
F3HCG2uuniDmddBx8TSmqV4DOfsb1XvL6+NI/IqIkYl8+ffxa/w+JV8+/RuJ
o11d/FViZA/p3VPlEv7+wjjWNyjqL8Y+YMd2B0Xh4MYzrYm9uy4+4kmv1GZV
5zAEEjuEHbT/uaTx6LjPyrWrJ33+4Be/7oS8XlScya820av86SXmH/pYCam5
k99O+Ueueuf0tVamD0WD50uDLo0r4fe56l7z+5s5Z7jK01vmCo+5PllPNGuX
dM74dJf5IFwzWm+AwwhYBOwDzoEvCJ9JTGG26PMDRiG/ADkJHeuWlmM6rcZV
zLGnY2XbxBE7KXf/lX43/9pLkvHYItNppT4zZSzMYg5Ab6Q4qlZjPgENgwZ1
mhnVc1A+c6QvZCvM7Hh8xfOheyqeyj6yEds5ca/Dku2reqJXLHqVvwXR9Uj8
/lszZJ3x8BwZsg657F7RH1WD7SqL3hdN+lDp0sdqmz/r0vtKj362eH082aUX
T9xXe2IKL9j93Sf6+OVf05fL/0j37a+CNXem4g1CXkMz0r3S0z0UNFd4l2rG
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
RAhcO8wv8DkOjf8HkUY89g==
            "], {{0, 138}, {420, 0}}, {0, 255}, ColorFunction -> RGBColor], 
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> False], Selectable -> 
           False], DefaultBaseStyle -> "ImageGraphics", 
          ImageSizeRaw -> {420, 138}, PlotRange -> {{0, 420}, {0, 138}}], 
         TraditionalForm]], EdgeForm[None], GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
D8tcwygGbMl/Yz02NnMcWMIzjMk85oofL2eOFYoBE+HD4R+Tx0Lfvyqfj435
PG7Pn29F/q5/5s+/Pmetq0GZ+5cn+OdxbCn8Md/fF14Gz4OnZo5dirVTMse0
pcoj8LHwT8o1mePVMuWFzDFK+/iDzPFZ+2xu5pi8knt+zmO48toM+Hj4Z3gZ
fGnB+WtO5ri3QnlHew5eDi/P84Ly9S3wHPgVrSu4XsG57BO4hsYD/gqupfeF
v868r5Wv52eOJ6vhTzPHHMXObzLHirVcX5g5PihffZ85nihvzsscl1ZpDWeO
P8qtSzLHXuWTxZljlPLyijx/KbeWSO6tVJ/smdxDqT75g3uuLji/74CvLbg2
257nGtVaWzP3Sqpb/s7zkXLuX3neVL7elOc75eg+yiXwJ8oLmXsr1Wa3JceN
8+ANeR5Ufu+Xr+H53L82zy+qVVbmOVq1xC957lYOPJr/31Nw3ZiSe0DVYEcl
97+qS/eFby64llPMv63gWm52Zk3gKa4Vk3tG1ZC/5Xlcdddq+PKCa4zdmXtJ
1Xu/5nlc9c+aPPepNluX53H1pudgPeBOvMvMfH61Jmdl1jH6c/+tyXH1HL6z
a3KcPBsembmeV167JTmWnsn1Lsmx6Cy4c3LcPkO1eXIfXQ5+NrO2oFq3SXKf
W5brneDP4JrwTckx/HT45uRcUAMekbkvUI6ujj1VcK1+anKPr/q/YXIvfwx8
cXKPXxq+JFlPKKP6PVkHOFo1O/wSfJRqfPi5gnuEKsl9ver5E5L7etX5pyT3
3eoXqsKPF9wLlE/WDdRTlMtzt3qQ85Nz7pHwC5n7HeX34Xm8Unxrn7xPlTev
1X6GTw7XVcqVqnvbwe8VXCe3Te5VT4TbJGsmJ8Ct4XfhqnDtzDVDV77/6mT9
pIqeh+u94W5cl/il35oEd878/S/Dz2XWiFTztErWWCrx2WbJGshx8JDMWpPq
n6GZe1XVUcPy2Kva6fnM+pLqpRuTc6tq/o7JuV69QIfkGkD1fEv4LbgC3DRZ
DykPX5Ws+VRW/5GsF1VUn5Gs+RwP103uB4+Az0nuE9WDnJ3cn6onejVzb65a
65U8DitfjMtjuPLI9MzaXT89S2YtTj3XtMw6Xl+t2cw9uGo51amqV1XLvZi5
p1btNzlzv6/+7s08zitHvA5XK7in25ZZVxmtNZi5N1ffNyGzbqAe4ePMmuFA
rYXMGuAA1QV57FXuWJBZD3xG+w++BH42j/OK+YO0FzNrd4PhSZn1B/Ua4zPr
A+r7Jua5Rv3IZ3msVsyfkeeLJ7j+b2ZdaAy8JbNuMxL+J7OmNAr+MY8zivOL
8nioHPFtZs3zOe5ZCl8FD83jmOL5MHhVHs8VP0dl1gRUV5+ZrOmp9/wuj3vP
c60x9ip8rNY8/ELBPWOd5L7jcPVbmTXbIVyLZL1rPH6PZC1oAn5jZt1pBLwz
cxweC6+Hb4KHw5sz60UvwL9nzk2Kpe9m1mmf5PquzBraOHi/5Bj7Cn6vZB1p
Il5inbS4F/Elsbu17/D7J9fMk/BZsp72ksY2XMsqJpRKrqVfw/8XrgUVGweE
tbaPuD4wrNd8DA8K61OfwM2T+6+vFcPCetmH8PVhbVrj2T6sZWstdQhrzZqj
G8L6r8awf1hTm6t9HdbENT7PhLWh+fCzYb3sU/i6sH6teT9D+4RnmIevrPvg
OfgG2ifwF/h+Ye3vPbh+ssa4AN8oWTP8Ev9kWKd7H66XrEl+jh8c1ub0/Q/n
fcgMuAX2Afd8g78p1wo01+cla5V6zqfCeuIHcM1kTUzjVitZt9R71UjWxzS2
pyfrXRrz6vna03ielKwTanyqJWtles5OuT6g/dIxfAagNX9zriFoXbUOnwFo
j7cM63eKRW3CZwmKA+3CZwOD8/WvmP8V/sqw5qh92iqsM2pNtg2fSSgOXB3W
EFVXXBXWK5XrrwlrlKrtT07W/TQOj4Q1uLfhR8O93Dsaj3BvqRqvdr4HP8Mf
m6zH6v5xYa1B9fDYcK+uenhMuIdXfT40rD9q3oeFNWLN7/Cwjqz3mhTuaVWL
PhSuXaZrHYV7YNXGE8N9rOrnl8L9sOrtIWFNU+vn+bBGqXUyPty7qmaeEO5p
VUv3DWvNs+GyyXqy3lc5XfXGTHyZZD1Z6+rlcC+tWrpSsiasdVsxWS+dpXvD
erTW+fXJ+smi5Hytmmch/pDkvDwlWVd5ivu3ao0ka91v4A9L1sCn4o9I1rff
wh+JPQZPwx+erJm/ib+Wz6uBUS4YEdbutfcfCOv+uufVsGak+v/4ZB1b714h
Wbd/F/94XjeISydr4xr/kWEdX8//WF5zaHxGhbUevePosNajfu2F8JmB9mDv
sLauZ34urDVr/fQJ6/sat25hDVMx8Iqwfq38e3tYU1UMvyOsbSqGvxbWxaRd
vB7WztSnrA33QqoldoZ7b9WW6ntXFtzf3RbWZhWT14VrI9U56tlXFdyX3hs+
O1Hs/T2sZahW6RE+I5E+82D4jEHz0j18nqH43yt8BqN5vD98XqJ57Bk+a5HO
c1dYj1UuuDOs0ypfPJ25X1fvLB1AvanWx61hjVq55pawxqhaomtYf1b+6hLW
cpWv14c1F9VOG8Kai2qnNeH6T/V5sYT7ItXwOjxS36va/q+w1qCaMyvhHli9
wOawnqL6M5Vwj6R+YXdYK1H9vyuslai2vyd83iMdqXNYR1XNECX8nuq57g6f
zSgPbgprQKppV4XP/1TP/xY+s1HvsDp8Rqja/s+wfqRa94+wHqS6cWNY31Ed
+0v47FA9wn3hcy/tu2XhczjVkL+GzyNVV6wMny+qX1gRPrNUv7A8fC6o2v7n
8Hmh6o3/AXG92IM=
           "]], Polygon3DBox[CompressedData["
1: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
G/P+j4B3L9GHm4AfBe9RoldXqdGvW5fom03dA+A9S/TnduBXwEPBv4O3B78K
PgT8h1wMfhk8BPwbeNUa/bpNib6Tk+Sm/5ToRTnpKvD2JVw1P/hk8Lrgk7p6
dRJ4HfCJXT09Grwq+FjwSjV6d6sSfTgX+Di5DnxCmz00apM16d7qy/wx9Fej
f5y1B3ysXAk+HrxcjV7askQv7gh+HXyY2gN8jL+L3E47mf4Aawb9wfR/ZH4X
8FvgYW5qNtpA8HN0DwD/1IazbgTvWsJPy9Toy81L9Od0NfV86RK/Y026ATyo
hP+2BD8N3q9E7/cHPwPev8RPbAF+Crxvid/YFvwS+GDwr3I5+E3wEdZ2uRb8
Bvhw8N9dfR0JPtDa3aYmWZv2LvEbJ3L9FPwZ7ST6y9b4iS1K9HI/8OPgvUr8
i39v7dmnhF9Xq/E325bo/xlquH858JFtNGh/a0WJ332/xH+MX+Jvd1dv8Dz3
YEyieq/EP49X4rflPLnulSZcuCNtc/o7Mfa9z5S2Of1xS/z121w3s7aV+NOP
S/TNxFzvkP9K9M0kXO8Ev8p1A/AYXG+w/nFdHzw61+vBB9AG8XkHeU/c32DX
RBNOGxe8B3gb8J7uYb1WzWuX4u+PaKMh1BI+A5/Fkm36jrWjxG9bm5fl9cOY
W8IaD94UfGqbfOIs8Cbg4eAFwcOtleBTwAuATwGvBz4ZvAL4IvBA8JngmWq0
8Argo8Ebgh8G71biH2esqd3Lg48Cz1yjjVYEH9OtV7WUoYl+Y13wfeCdS/zm
8uALwQPAZ1ibXSN8tx0Z+5qx7dtkF2YY34LXqvG3O5T4x7Vr/POOJX7V/XoB
uL+1Dbwk+BxwP/BpHd9cCd6uRButA74XvFOJn/sBvJ733+R5397xweAm/Ptb
zfpYE3xfmz2n1/Ye3IvuOb287+ledM/p9b1n96KccGWT30Cu2J32VS976LUa
/fQx/U9or9ZoquPcG71oLTn0+iYcLbeqifTWc5ZoJT2CXlgPq3fQU+ot9Rhm
I3povbQeZLFO7/lbz1GijfSoelXXjGvHPaz31SO4t+UkvfGIXrhKTtRL+5v7
2+sh9JJytFxtTbihSc2wVsg51zWpOXKRHvjObn3rjc1U7mjCkWYtctAtTThM
bjITub0Jx5qVyFm3NuFAucw9pVedu2Svybm3NeFEuVjPcFOnr/USw61DvXD4
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
           "]], Polygon3DBox[CompressedData["
1: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
9x0byv4Fd/Xc0Q==
           "]]},
         Annotation[#, "Charting`Private`Tag$7877#1"]& ]]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0skrRlEYwOFr/HxmWUmRnRRbKbZSrJQUO9mwoKxYW7Am/AFiLbE0zxvJ
PA9JMkVmSTy3LH73OXVut/d0bkFTe21bTBAE3XpXuH7WpQZigyCTw8znOEs4
xwpusIZnbOQjn9RqnRoXBF3MZS+LOMQyjrKKk6znIvd5zU9t6VX3mjLQNqe5
wxnucpZ74Szc5zwPuMBDLvKISzzmMk+4wlOu8oxrPGefuW/4pQu96UEd5tpk
MxdYxwlWcoSlHGQhe5jDTiYzqpbwHL7dwBNWc53l4VlYzDHmcdf7V/xQhl50
p2wzpjOLaeEeU5nGFKYwmVFGGWESExhhHBPDu2UCfxWvn3BP3zJC0O9x+/8f
/AEIP0i4
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{661, 981, 458, 660, 1087, 883, 662, 1088, 884, 663, 1089, 
        885, 664, 1090, 886, 665, 1091, 887, 666, 1092, 888, 667, 465, 668, 
        1093, 889, 669, 1094, 890, 670, 1095, 891, 671, 1096, 892, 672, 1097, 
        893, 673, 1084, 1098, 894, 982}], 
       Line3DBox[{675, 986, 1185, 674, 472, 676, 1099, 895, 677, 1100, 896, 
        678, 1101, 897, 679, 1102, 898, 680, 1103, 899, 681, 987, 1186, 682, 
        479, 683, 1104, 900, 684, 1105, 901, 685, 1106, 902, 686, 1107, 903, 
        687, 1108, 904, 688}], 
       Line3DBox[{690, 988, 1187, 689, 989, 1188, 691, 487, 692, 1109, 905, 
        693, 1110, 906, 694, 1111, 907, 695, 1112, 908, 696, 990, 1189, 697, 
        991, 1190, 698, 494, 699, 1113, 909, 700, 1114, 910, 701, 1115, 911, 
        702, 1116, 912, 703}], 
       Line3DBox[{705, 992, 1191, 704, 993, 1192, 706, 994, 1193, 707, 502, 
        708, 1117, 913, 709, 1118, 914, 710, 1119, 915, 711, 995, 1194, 712, 
        996, 1195, 713, 997, 1196, 714, 509, 715, 1120, 916, 716, 1121, 917, 
        717, 1122, 918, 718}], 
       Line3DBox[{720, 998, 1197, 719, 999, 1198, 721, 1000, 1199, 722, 1001, 
        1200, 723, 517, 724, 1123, 919, 725, 1124, 920, 726, 1002, 1201, 727, 
        1003, 1202, 728, 1004, 1203, 729, 1005, 1204, 730, 524, 731, 1125, 
        921, 732, 1126, 922, 733}], 
       Line3DBox[{735, 1006, 1205, 734, 1007, 1206, 736, 1008, 1207, 737, 
        1009, 1208, 738, 1010, 1209, 739, 532, 740, 1127, 923, 741, 1011, 
        1210, 742, 1012, 1211, 743, 1013, 1212, 744, 1014, 1213, 745, 1015, 
        1214, 746, 539, 747, 1128, 924, 748}], 
       Line3DBox[{752, 1129, 925, 750, 1130, 926, 754, 1131, 927, 756, 1132, 
        928, 758, 1133, 929, 760, 1134, 930, 762, 1135, 931, 764, 1136, 932, 
        766, 1137, 933, 768, 1138, 934, 770, 1139, 935, 772, 1140, 936, 774, 
        1141, 937, 776, 1142, 938, 778}], 
       Line3DBox[{777, 1228, 1029, 775, 1227, 1028, 773, 1226, 1027, 771, 
        1225, 1026, 769, 1224, 1025, 767, 1223, 1024, 765, 1222, 1023, 763, 
        1221, 1022, 761, 1220, 1021, 759, 1219, 1020, 757, 1218, 1019, 755, 
        1217, 1018, 753, 1216, 1017, 749, 1215, 1016, 751}], 
       Line3DBox[{780, 1030, 1229, 779, 1143, 939, 781, 1144, 940, 782, 1145, 
        941, 783, 1146, 942, 784, 1147, 943, 785, 1148, 944, 786, 1031, 1230, 
        787, 1149, 945, 788, 1150, 946, 789, 1151, 947, 790, 1152, 948, 791, 
        1153, 949, 792, 1154, 950, 793}], 
       Line3DBox[{795, 1032, 1231, 794, 1033, 1232, 796, 1155, 951, 797, 1156,
         952, 798, 1157, 953, 799, 1158, 954, 800, 1159, 955, 801, 1034, 1233,
         802, 1035, 1234, 803, 1160, 956, 804, 1161, 957, 805, 1162, 958, 806,
         1163, 959, 807, 1164, 960, 808}], 
       Line3DBox[{810, 1036, 1235, 809, 1037, 1236, 811, 1038, 1237, 812, 
        1165, 961, 813, 1166, 962, 814, 1167, 963, 815, 1168, 964, 816, 1039, 
        1238, 817, 1040, 1239, 818, 1041, 1240, 819, 1169, 965, 820, 1170, 
        966, 821, 1171, 967, 822, 1172, 968, 823}], 
       Line3DBox[{825, 1042, 1241, 824, 1043, 1242, 826, 1044, 1243, 827, 
        1045, 1244, 828, 1173, 969, 829, 1174, 970, 830, 1175, 971, 831, 1046,
         1245, 832, 1047, 1246, 833, 1048, 1247, 834, 1049, 1248, 835, 1176, 
        972, 836, 1177, 973, 837, 1178, 974, 838}], 
       Line3DBox[{840, 1050, 1249, 839, 1051, 1250, 841, 1052, 1251, 842, 
        1053, 1252, 843, 1054, 1253, 844, 1179, 975, 845, 1180, 976, 846, 
        1055, 1254, 847, 1056, 1255, 848, 1057, 1256, 849, 1058, 1257, 850, 
        1059, 1258, 851, 1181, 977, 852, 1182, 978, 853}], 
       Line3DBox[{855, 1060, 1259, 854, 1061, 1260, 856, 1062, 1261, 857, 
        1063, 1262, 858, 1064, 1263, 859, 1065, 1264, 860, 1183, 979, 861, 
        1066, 1265, 862, 1067, 1266, 863, 1068, 1267, 864, 1069, 1268, 865, 
        1070, 1269, 866, 1071, 1270, 867, 1184, 980, 868}], 
       Line3DBox[{882, 985, 1284, 1086, 881, 1283, 1083, 880, 1282, 1082, 879,
         1281, 1081, 878, 1280, 1080, 877, 1279, 1079, 876, 1278, 1078, 875, 
        1277, 1077, 874, 1276, 1076, 873, 1275, 1075, 872, 1274, 1074, 871, 
        1273, 1073, 870, 1272, 1072, 869, 1085, 1271, 983, 984}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{251, 459, 1087, 252, 472, 278, 1188, 486, 292, 1192, 500, 
        306, 1198, 514, 320, 1206, 528, 334, 1216, 542, 1130, 348, 556, 1143, 
        362, 1232, 570, 376, 1236, 584, 390, 1242, 598, 404, 1250, 612, 418, 
        1260, 626, 432, 1272, 640, 446}], 
       Line3DBox[{253, 460, 1088, 254, 473, 1099, 279, 487, 293, 1193, 501, 
        307, 1199, 515, 321, 1207, 529, 335, 1217, 543, 1131, 349, 557, 1144, 
        363, 571, 1155, 377, 1237, 585, 391, 1243, 599, 405, 1251, 613, 419, 
        1261, 627, 433, 1273, 641, 447}], 
       Line3DBox[{255, 461, 1089, 256, 474, 1100, 280, 488, 1109, 294, 502, 
        308, 1200, 516, 322, 1208, 530, 336, 1218, 544, 1132, 350, 558, 1145, 
        364, 572, 1156, 378, 586, 1165, 392, 1244, 600, 406, 1252, 614, 420, 
        1262, 628, 434, 1274, 642, 448}], 
       Line3DBox[{257, 462, 1090, 258, 475, 1101, 281, 489, 1110, 295, 503, 
        1117, 309, 517, 323, 1209, 531, 337, 1219, 545, 1133, 351, 559, 1146, 
        365, 573, 1157, 379, 587, 1166, 393, 601, 1173, 407, 1253, 615, 421, 
        1263, 629, 435, 1275, 643, 449}], 
       Line3DBox[{259, 463, 1091, 260, 476, 1102, 282, 490, 1111, 296, 504, 
        1118, 310, 518, 1123, 324, 532, 338, 1220, 546, 1134, 352, 560, 1147, 
        366, 574, 1158, 380, 588, 1167, 394, 602, 1174, 408, 616, 1179, 422, 
        1264, 630, 436, 1276, 644, 450}], 
       Line3DBox[{261, 464, 1092, 262, 477, 1103, 283, 491, 1112, 297, 505, 
        1119, 311, 519, 1124, 325, 533, 1127, 339, 1221, 547, 1135, 353, 561, 
        1148, 367, 575, 1159, 381, 589, 1168, 395, 603, 1175, 409, 617, 1180, 
        423, 631, 1183, 437, 1277, 645, 451}], 
       Line3DBox[{8, 667, 23, 681, 38, 696, 53, 711, 68, 726, 83, 741, 98, 
        763, 764, 113, 786, 128, 801, 143, 816, 158, 831, 173, 846, 188, 861, 
        203, 875, 218}], 
       Line3DBox[{263, 465, 264, 1186, 478, 284, 1189, 492, 298, 1194, 506, 
        312, 1201, 520, 326, 1210, 534, 340, 1222, 548, 1136, 354, 1230, 562, 
        368, 1233, 576, 382, 1238, 590, 396, 1245, 604, 410, 1254, 618, 424, 
        1265, 632, 438, 1278, 646, 452}], 
       Line3DBox[{265, 466, 1093, 266, 479, 285, 1190, 493, 299, 1195, 507, 
        313, 1202, 521, 327, 1211, 535, 341, 1223, 549, 1137, 355, 563, 1149, 
        369, 1234, 577, 383, 1239, 591, 397, 1246, 605, 411, 1255, 619, 425, 
        1266, 633, 439, 1279, 647, 453}], 
       Line3DBox[{267, 467, 1094, 268, 480, 1104, 286, 494, 300, 1196, 508, 
        314, 1203, 522, 328, 1212, 536, 342, 1224, 550, 1138, 356, 564, 1150, 
        370, 578, 1160, 384, 1240, 592, 398, 1247, 606, 412, 1256, 620, 426, 
        1267, 634, 440, 1280, 648, 454}], 
       Line3DBox[{269, 468, 1095, 270, 481, 1105, 287, 495, 1113, 301, 509, 
        315, 1204, 523, 329, 1213, 537, 343, 1225, 551, 1139, 357, 565, 1151, 
        371, 579, 1161, 385, 593, 1169, 399, 1248, 607, 413, 1257, 621, 427, 
        1268, 635, 441, 1281, 649, 455}], 
       Line3DBox[{271, 469, 1096, 272, 482, 1106, 288, 496, 1114, 302, 510, 
        1120, 316, 524, 330, 1214, 538, 344, 1226, 552, 1140, 358, 566, 1152, 
        372, 580, 1162, 386, 594, 1170, 400, 608, 1176, 414, 1258, 622, 428, 
        1269, 636, 442, 1282, 650, 456}], 
       Line3DBox[{273, 470, 1097, 274, 483, 1107, 289, 497, 1115, 303, 511, 
        1121, 317, 525, 1125, 331, 539, 345, 1227, 553, 1141, 359, 567, 1153, 
        373, 581, 1163, 387, 595, 1171, 401, 609, 1177, 415, 623, 1181, 429, 
        1270, 637, 443, 1283, 651, 457}], 
       Line3DBox[{275, 653, 654, 1098, 276, 484, 1108, 290, 498, 1116, 304, 
        512, 1122, 318, 526, 1126, 332, 540, 1128, 346, 1228, 554, 1142, 360, 
        568, 1154, 374, 582, 1164, 388, 596, 1172, 402, 610, 1178, 416, 624, 
        1182, 430, 638, 1184, 444, 1284, 656, 657, 658}], 
       Line3DBox[{445, 639, 655, 1271, 431, 625, 1259, 417, 611, 1249, 403, 
        597, 1241, 389, 583, 1235, 375, 569, 1231, 361, 555, 1229, 347, 1129, 
        541, 1215, 333, 527, 1205, 319, 513, 1197, 305, 499, 1191, 291, 485, 
        1187, 277, 471, 1185, 250, 458, 652, 659}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJztyLEJgDAARcGPmkGcxB0cQbDOCo7sCOkCCinS32se3H7V816SbCVZ03u+
fw/OOeecc84555xzzjnnnA/9F+ecc84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPO+bw3oH3qzg==
     "],
    VertexTextureCoordinates->CompressedData["
1:eJx9m83P3NQVh0dVilDVBX9AF5SmFUII9T+YLFgEVKEo6oJlVakSi0BRVVUs
o/4FUYSiKrCoukBILDqqqrdQAjVToIYCNcZpnOAkjt/xx2Q+Mssuqn7E9/6O
dR7UZsHoea99z3l8fTw+9vDtH//07E++NpvNTnx9Nrv/yX+/PvnUxZNP/W4u
/tXIS+Ph6Pkvj57/K8Zz4+T+8Jd/N16N239p/MD43xr7N8aP38eLK8zXGZ+9
P3xybdyN82+MX7q/+dHOOPw7gGezC9FTvmL5iuXrx3Nj+YrlK5av378xlq+f
rzOWr1i+YvlecOt2AMt3Cd8lfJfwXcJ3Cd8lfJfwXcJ3Cd8lfJfwXcJ3Cd8l
fKfztIwe8hXLVyxfP54by1csX7F8/f6NsXz9fJ2xfMXyFctXLF/PWt8c65tj
fXOsb471zbG+OdY3x/rmWN8c65tjfXOsb471zbG+OdZ3us68GfOUr1i+Yvn6
8dxYvmL5iuXr92+M5evn64zlK5avWL5i+XqezaqYl3zF8hXL14/nxvIVy1cs
X79/YyxfP19nLF+xfMXyFcvXs76bavMVy1csXz+eG8tXLF+xfP3+jbF8/Xyd
sXzF8hXLVyxfz7PZpRhXvmL5iuXrx3Nj+YrlK5av378xlq+frzOWr1i+YvmK
5et5Nns0xpGvWL5i+frx3Fi+YvmK5ev3b4zl6+frjOUrlq9YvmL5ep7NrsR5
5SuWr1i+fjw3lq9YvmL5+v0bY/n6+Tpj+YrlK5avWL6eZ7Nn4jzyFctXLF8/
nhvLVyxfsXz9/o2xfP18nbF8xfIVy1csX8+zWRP3k69YvmL5+vHcWL5i+Yrl
6/dvjOXr5+uM5SuWr1i+Yvl6ns1+HreTr1i+Yvn68dxYvmL5iuXr92+M5evn
64zlK5avWL5i+XrWv8Pc90cH8xX7/uhgvmLfHx3mvj86zH1/dDBfse+PDnPf
Hx3mZ3GedljHl+DJz+D3G/uUufjdMd4e41/d749xO+0v1v5kzqP93sU8jKtP
zZeM4xft89bof+8rf6/i3zUuVhzuz78zfoU4M/fv8JW/M762e2j8XFj/9mCI
avuJ/XiK8RTjGcYzjBcYLzBeYry08W8GGxsX+/53+t4X+/lXmH+F8Q7jHcYH
jA82/o2R79q42I9vMb7F+B7jexv367Wc+/VZzv16LOf++C/n/ngv5/74Luf+
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
+BxH/Hh87uFZ90Vl9N0b+//Pb/r/7sQ17ldfxv3pFdyP1rj/PBE/xby/fAz3
k+/i/vEM7hdXuD/8xf+9H6zje0jV3/TeT3zO1Z+ea0/3d2+6+mui323jS67+
pufG4iuu/qbnkuLG1V9jz5HEei+p+x29xxPrvZdY74nEeq8ivhTrT6znvn77
u8Z6rii+EetP/HCsP92fPBnrT3wu1p/4Qqw/8cux/sSPxvoTX4n1Jz4d60/8
cKw/3S+cjvUnfi7Wn/hSrD/xo7H+xEex/sQnY/3p+/nJWH/iS7H+xCdj/Ym/
FetP33cXY/2J9RwyrPcC5+9ifv6RMO6/X3Q/oO+fe9P4H+4LvGHXx/D9cgfX
19fs+nV+HH/HOJyPd4zD/sfG/vfz2fwwbv+2cZj/Q+Nw/twxDvMfG4f6bY1P
jfm/YtevH437v2UcfD8wzsZ4nxmH68f0/CTEPzYO148W8/XG/nf2et5wZByu
x+8bh/r71DjM/4VxqK/p+UbIb3q+EfJrjcPx6Y3D8Zmeb/jzZfrdhli/OxDr
Pb041FOO7a8ZPxg/xXrPKA4+Deabng8En95Y70nEwWeDeHvj8Kk6aOL3x9Q/
h9/JvGHXn/Cc/k+4Ht4xDu9hp/7zfDz/df04E89/8WH8/Iux3tOKX4j1IA7z
T/3dqVgf1g/F+hC/HutD/I/x82/GT8d6EVexXsQvxnoRh/iD8amjUD+6/jwc
60f8bKwf8euxfsQhny+Mj2I9iU/HehJXsZ7EL8R6Eof87hon3wn1Zde/WF/i
h2J9iZ+N9SUuYn2JQ77XjB+J9SY+ivUmPh3rTVzFehO/EOtNHPLfGh9Oh3rT
9TaN9SZ+KNabeBHrTZzFehP/c/yc+pULsd7EJ2O9iY9ivYmfjvUmrmK9iV+I
9Sb29baYn4mf/vtlj+0T297/Hmth7/s8F+DS2P8ecPq9nOcOPPUv/vc7C/y+
ZYH3b8w3Qb4J8k2Qb4J8E+SXIL8E+SXIL0F+zCdFPinySZFPivgp4qeInyI+
42WIlyFehvkzzJ9hfs5XYL4C+xfYn9uXGC/xfrXG+Vpj/Wsc7xr+NfKtEX/6
fY/ffgXuwIOxP341/Gv40aeBTwOfBj4NfBr4NMi/Qf4N8m+Qf4P8G+Q/5avv
X+XruQCXxsrXj3fgqX9Rfp634P3/yKdFPi3yaZFPi/gt4reI3yI+4/WI1yNe
j/l7zN9jfs63xnxr7L/G/tx+g/EN6i9BfSQYT3E+p9g+xfmYYv8M+2eohwzz
ZZgvw/mdYf4C8xeYv0C9FYhXIF6BeAXqqUD8EvFLxC8Rv7TzR+zzKZFPiXxK
5FOivnl9rZBfhfwq5Fchv8rOR7G/HlXIv0L+FfKvkH+F/Ctcnypcnyr4NYg/
/f7QXy8SY23vx6d+w+/fYv/Wjp/Yz9divtb8xX7+HvP3mL+39RH7eD3i9YjX
2/EW+/hrxF8j/hrxp/+/SezzWSOfNfJZI581ro9r5LdBfhvkt0F+G+Q3/f9J
Yp/vBvlukO8G+W6Q7wbX4w3y3yH/HfLfIf8d8t8h/x2u7zv47OCzg88OPjv4
7OCzw/fHbv4f+uDfxg==
     "]], {{
     {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-76.5063962, 38.9722814, 231.0958904109589}, {-81.375789, 
       28.533513, 222.94520547945206`}, {-99.3700532665052, 31.481788183144, 
       211.43835616438358`}, {-97.2964669, 33.1717156, 
       210.47945205479454`}}]}, 
     {RGBColor[0.7926498, 0.5499369, 0.1278459], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-83.1022365, 42.3830375, 172.6027397260274}, {-80.2472396, 
       26.3150829, 166.84931506849315`}, {-82.8041995, 37.8120478, 
       164.93150684931507`}, {-77.802346917939, 40.8757813645164, 
       158.6986301369863}}]}, 
     {RGBColor[0.5041629000000001, 0.6224121, 0.1753965], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-122.1819931, 39.9281988, 
       122.73972602739727`}, {-99.3700532665052, 31.481788183144, 
       118.42465753424658`}, {-115.2640448, 36.2277116, 
       101.64383561643837`}, {-96.747944, 33.0507687, 91.57534246575342}}]}, 
     {RGBColor[0.8302733999999999, 0.3470634, 0.18826110000000001`], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-106.103175196499, 34.4274140766016, 
       49.863013698630134`}, {-81.375789, 28.533513, 
       45.06849315068493}, {-88.920118, 32.829842, 40.75342465753425}}]}, 
     {RGBColor[0.47563919999999993`, 0.4235616, 0.6312158999999999], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-95.3863425, 29.7804724, 16.78082191780822}, {-89.6122696, 
       44.8741579, 9.10958904109589}}]}}, {}, {}, {}, {}}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1.2, 0.7, 2},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{334.78595129580367`, 560.3085789940145},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-130, -65}, {25, 50}, {0, 232.05479452054794`}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, {{0., 
      FormBox["\"03/03/17\"", TraditionalForm]}, {167.31150684931507`, 
      FormBox["\"02/14/18\"", TraditionalForm]}, {180.5386301369863, 
      FormBox["\"03/14/18\"", TraditionalForm]}, {185.17972602739727`, 
      FormBox["\"03/24/18\"", TraditionalForm]}, {198.40684931506848`, 
      FormBox["\"04/20/18\"", TraditionalForm]}, {232.05479452054794`, 
      FormBox["\"06/30/18\"", TraditionalForm]}}},
  ViewPoint->{-0.4, -1.1, 2.3},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.7397313161306295`*^9, 3.7397314143730574`*^9}, {
   3.7397314588218594`*^9, 3.739731504625194*^9}, 3.7397325920434985`*^9, 
   3.7397326508459344`*^9, 3.739733792053341*^9, 3.73973402429175*^9, 
   3.739734192260043*^9, 3.7397343315778027`*^9, 3.739735565119746*^9, 
   3.739758901148472*^9, 3.7397872134631033`*^9, 3.7397891631538634`*^9, {
   3.7397930978614416`*^9, 3.739793127459956*^9}, 3.7397931780303006`*^9, 
   3.7397932194932823`*^9, 3.7397934424753*^9, 3.739793498986597*^9, 
   3.7398081876237125`*^9, {3.7398091822942047`*^9, 3.7398092333248954`*^9}, 
   3.7398093318882484`*^9, 3.7398260087732944`*^9, 3.7398269849153814`*^9, 
   3.7398275361135073`*^9, 3.7398304673617907`*^9, {3.7398305095649366`*^9, 
   3.739830539381047*^9}, 3.739830598363945*^9, 3.739830920906808*^9, {
   3.739830960633234*^9, 3.7398309843417673`*^9}, 3.739831024699802*^9, 
   3.739831172160781*^9, {3.739831275093193*^9, 3.7398313236538563`*^9}, 
   3.739831380558277*^9, 3.7398314335612698`*^9, 3.739832710417898*^9, 
   3.739835980921579*^9, 3.7398360945001974`*^9, 3.7398367331264367`*^9, 
   3.739836792453904*^9, 3.739836827198123*^9, 3.739839321764964*^9, 
   3.739839363159378*^9},
 CellLabel->"Out[129]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvWd0nMeRLoyLwCjJlr1r717783q/9frs3uv1etcbbMmSJdsKzGIEGMQk
MVPMQZQYRYmixEyJJBiRSeRM5DwRA5AEkXNOA2aKOaBuVXX3Oz0DUOtzf90f
y3OGAwxm3um3u7rqqaqnqsfNW7d4wQfz1i15b95P31ozb9XiJe+t/embK9fg
Sz7/w8vrf6zy8vJe/FMvX/wZvLwG/Lfay+u/f/7vn//75//++b9//n/35638
v9936eWFCxcGTZw4kR70u9c18ZYt/P8wein9rbfe6n/z7Tcfjhoz6i4+q48c
mzZt2hX93cNfkxfs//zg5y3lfRWWsr7KK5NmTno0ZuyY1jFj3qa/eXnTZ718
vuul/evSLzNCXQYq+irp0X/ZWf70cm/53Yq+iq7iekvjmYgjPStXLvPm6/kk
jB492hh+p34ln0vTAvzVlbx8+f8h/eW95U8qnBXfVF0p77LUW699vPPj21P9
p8irqTvjC7SJq212ny9+XOiqhMtOvB5fdUT/ZXHVG1W9lc6DJ/c/ffPNNx6M
GTuK3tvy0ksv0SDp8y36FYcZd7on8DikXb4ERY0VYGuthEs9fHU/vvjI/nJn
OcycN/PxsbCj12udVY0Xaiy927Z/fOedieP1L/gVXbRR/4aRl1555RX+hnf8
A2BvUBicKyiEpNILkF19Gb+tEko68Jt6K6Ec78Wbv+552LRzE7zy6isQkxND
X/2o0ll5v7Kv/HZxg43mvnPrto13X3/993Rduv7nc+fO9arXvlZM5Quw50wY
BMydD6PGT4CJAdPhSHQ8xNtLIK3sIuTVlYO5Gb+/k++Ubg8mTp0IxS0Ob+Ou
K2hab1c5K25X9JbficmJriywpvYuWbKg5ze/+Y26c16tGvH1H4uV+pW+UpFF
djh8LhZHhePxGgFzliyDiTgbi9eth1ibAxIcJZCOc5+PI/KfPRO+Cg2k2XDN
fcVTFJk71X2V14vrrA9Px5/q27bzI8ARqFHYXn/99e0LFizwqtRH4WPM/edf
H0Ppw3HgnOBIeF52HjkOH3y0hedn3rLlsP3QYdh28DDEWsyQW3sZ56YCHB1C
EnA0QnifI+Gl0dw/Gv71050HP310Jv5MV3DUsY5161bVTpgwRi2J2g9lYkAf
8f++hgBv/ORTGtQwHtPzPKbNew/CS7/7Ha8VzdDXUXEQh2uVcvEiZFddBlNT
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
fFBR6IE9+ZmwJbAenn76SYqTfVJt0Y3BF6JFgFr6N9dS6josK+jqbNy4McwY
P8KZtI2Nm/PEoeJ7lLrie2JQKKpk5/rJI9J7wADKpcFoQKmgo8epYk8KzJw4
RLVgrDT7V53Hw7WOCEUhNL7RX3wJkRPNJaCRdOKoT8J4qdZwlX4A1FwE/7+M
ThNWg+FBGlsYwmTD9h0Y/eiHxIAPlq2OI08BetuQESOpe+j+uxE0IjTQSa9u
MFYR/Jio9dRVq7Wup56DwFlSmcFIpxBr0kLGiZIcSNq6GRJ8AUjK9sPOfO79
SFszj8knNzfFNzS1TOr6Smuw4FH90DN32krZbtPM3+rcmkx1/sTFEcKCcbZi
B+w7lEf9v9bmbIW1WzZDytYADB/9OTz66KOXq0nSuyqD1zk1G3sNPskrZKb4
8iZNmhQygk26g+HYIPBiXM8p7MGEHcuKdoD3YB4ks9ne//BfaWL/cM/uFXXB
hsJXBpvTN/R1fRWXbuoyyOvlPMrYZx/7dH6nCzS8jUe5PG150XXGbFyoqLfx
Oj2bCHM2BoVTylXDBjcTg8UJJYsOJk80eZjcuM0sb6k8gZCbpTuquClTbYci
gojElBGEfTP1yPU1e5euBK3fxZlwpCnKY11Jgm99PsYD/jG3RgXGNrw8Z+Kt
hh1VvLy5uqDTphoF2+2JQWdaG9+S6h/XMCcwriEE+M+J2eMa2izn1xqvtm2y
63ad7O6azrjggMMFg5gKFilh/4fjlAgI+O8vatDrKs0m5C7cGWw2XzshyXQu
/7j/wBwuUjfdF+zNX7rfbFs9zkYN+hd+n4MLiF152T2YYzZ/DjaHL1yPEUJI
ZMDPUd+Yhq/5xt36V8uo1xivdiGErV609kXqgzBMXeP0KwKh3NQ7lj44l4fV
DddWepsT2K4ZPGx521DLs/pcV+8F6trf1QpdMB1sufkZy7Wr+Y+X1ARsSskT
6lvXWz4J/RYFB/Mt9k1yXGsa7H0D1BfPqt+uqTR2SIg1Czb2RzUbW0syLwQb
8QP1xXOWAa7iP150Q95xk96Xyuyql3N4+u3q6gyq+bXGyh6W+56xDhsUDq0s
w75jeeJZy7Urq3iB65pOYXGB/M2avU9vnQ1Oujae6y3d1Bca8le5R9TEt0uw
cV6vYpxqQKJbsLF1IejnLY9dUbO3vBnsLTpz+nn1m4CtvqAh8Z76TaOILRLh
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\
\>"],ExpressionUUID->"7e7f115f-f20c-49d0-8254-2cceace93767"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx9vX+4ZXdVp1mBBHFsZ2wEFGyUYFLppBuF2CK/QopwCbeSS/WpqpuqWz+p
x77ChVSlknCRYiwf7RYQgwGTVOhRp22JgBifBgY0VESwAI3tKOIM+MBDVeDY
OLYM9mhPM3ADCcw+q2rV+ax3fXbvf8q8bs5Z+7377rvO57vO3hf/+NEdP/Go
TZs2PfXJmzY9evj3rh9/0Ve/dfWhU//+7v/vKZs2PWfLpnPbWz5x0YHTu17W
+Ff/8vWfuO/pBxs/+PlHv+DOCw80/sDf/Jv3HDm9r/Ef+vsLfmDr+/c2/rav
/exbL/mFPY1/81vD9rKVxl/+2J+5+fSzdjf+59/1zel937mr8Wc96ae33/nX
y43/2sUPf/TIh3Y2/pgrfurKrXfuaPymK79+zyWv3N746ee+7rs3bZk0np7f
9Liv/fYlf/Lc5pk8PZOnZ/L0TJ6eydMzeXomT8/k6Zk8PZOnZ/L0TJ6eydMz
eXq+5a0bz9l65/ObZ/L0TJ6eydMzeXomT8/k6Zk8PZOnZ/L0TJ6eydMzeXom
T8/k6XnvP/r6Hx/Z94LmmTw9k6dn8vRMnp7J0zN5eiZPz+TpmTw9k6dn8vRM
np7J0zN5er7nDx+5YuvjtjTP5OmZPD2Tp2fy9EyensnTM3l6Jk/P5OmZPD2T
p2fy9EyensnT8/f83DdvOf3V7pk8PZOnZ/L0TJ6eydMzeXomT8/k6Zk8PZOn
Z/L0TJ6eydMzeXr+xRd+6+SR0y9snsnTM3l6Jk/P5OmZPD2Tp2fy9EyensnT
M3l6Jk/P5OmZPD2Tp+cLZv9x6prmmTw9k6dn8vRMnp7J0zN5eiZPz+TpmTw9
k6dn8vRMnp7J0zN5ev7Jj2x6yZ3veNF5np7J0zN5eiZPz+TpmTw9k6dn8vRM
np7J0zN5eiZPz+TpmTw9k6fnLx+/4C2X/MJC80yensnTM3l6Jk/P5OmZPD2T
p2fy9EyensnTM3l6Jk/P5OmZPD0fet6j/vK+Iy9unsnTM3l6Jk/P5OmZPD2T
p2fy9EyensnTM3l6Jk/P5OmZPD2Tp+e/fOhR/2TrjmubZ/L0TJ6eydMzeXom
T8/k6Zk8PZOnZ/L0TJ6eydMzeXomT8/k6fm6k4/+V6ef9ZLmmTw9k6dn8vRM
np7J0zN5eiZPz+TpmTw9k6dn8vRMnp7J0zN5ev6Dn7zw3iPft9g8k6dn8vRM
np7J0zN5eiZPz+TpmTw9k6dn8vRMnp7J0zN5eiZPz8/80Yv+67e+1T2Tp2fy
9EyensnTM3l6Jk/P5OmZPD2Tp2fy9EyensnTM3l6Jt+79YF3HPnyy049fvmr
q3f+dc/xyN9x33P23fnpSeP5+uT5+huzn8/t/edLnq8/xsfqZw6Z+5Pn/mN+
+L6//qKdq6effOjU577ymhduvXX+OqeO7fmxrbdNGs/9T1z04pedfmCx7U+e
HsZen/Xn64/Vz9fP/cfyW75v1jNWP983ti2HTp39P56z5Tlbn/Xg1760uuWm
0/cdmf2ekp8Z8Oz3lPy6Oy/ZOvs9JR8+7N03+z0l37x1+B8Mv6fkJ4aXmf2e
ks/WAjYdWmn85tnLD7+n5J+f1Tn8npIvzeocfk/Jf29W5/B7Sv5PZ3UOv6fk
b5vVOfyekp/1ORnhh07NXm2WA9MzeXomT8/k6Zk8PZOnZ/L0TJ6eydMzeXom
T8/k6Zk8PZOnZ88PnbokXu/5zTN5eiZPz+TpmTw9k6dn8vRMnp7J0zN5eiZP
z+TpmTw9k6dnzw+dmpU1y4HpmTw9k6dn8vRMnp7J0zN5eiZPz+TpmTw9k6dn
8vRMnp7J07Pn587nx23x57Pwcj4LL+ez8HI+Cy/ns/ByPgsv57Pwcj4LL+ez
8HI+Cy/ns/ByPgsv57Pwcj43fuhU6Phq90yensnTM3l6Jk/P5OmZPD2Tp2fy
9EyensnTM3l6Jk/P5OnZ83PXjdMv9NcN4eW6IbxcN4SX64bwct0QXq4bwst1
Q3i5bggv1w3h5bohvFw3hJfrhvBy3RBerhuNHzo1+3jzrT+4pnkmT8/k6Zk8
PZOnZ/L0TJ6eydMzeXomT8/k6Zk8PZOnZ/L07PmhU4uzl3vHi5pn8vRMnp7J
0zN5eiZPz+TpmTw9k6dn8vRMnp7J0zN5eiZPz54fOnVHHN9C80yensnTM3l6
Jk/P5OmZPD2Tp2fy9EyensnTM3l6Jk/P5OnZ8+HzbFxQXtw8k6dn8vRMnp7J
0zN5eiZPz+TpmTw9k6dn8vRMnp7J0zN5evb80KkfnL3ejmubZ/L0TJ6eydMz
eXomT8/k6Zk8PZOnZ/L0TJ6eydMzeXomT8+eHzp1OOp9SfNMnp7J0zN5eiZP
z+TpmTw9k6dn8vRMnp7J0zN5eiZPz+Tp2fNDp3539j7ft9g8k6dn8vRMnp7J
0zN5eiZPz+TpmTw9k6dn8vRMnp7J0zN5evY887qtzTN5zeu2Ns/kNa/b2jyT
17xua/NMXvO6rc0zec3rtjbP5DWv29o8k6dn8g/OXv/LLzsVL/fXPccjv372
35+ejOzfeb5+/F24vf98yfP1x/hY/Wd5r5O87t/98H3jfHvyuVziVuS6t00a
z/3j9Hpgse1Pnh7GXp/15+uP1c/Xr/v3nxffN+sZq9+/7/z1/+oLC695/h0v
b7l6cubqyZmrJ2eunpy5enLm6smZqydnrp6cuXpy5urJmasnZ66enLl68vy5
eD7P1emZnLk6PZMzV6dncubq9EzOXJ2eyZmr0zM5c3V6Jk/Pns9zdXomZ65O
z+TM1emZnLk6PZMzV6dncubq9EzOXJ2eyct1pvF5rk7P5MzV6ZmcuTo9kzNX
p2dy5ur0TM5cnZ7JmavTM3l69nyeq9vzWThzdXs+C2eubs9n4czV7fksnLm6
PZ+FM1e357Nw5ur2fBZezufG57k6PZMzV6dncubq9EzOXJ2eyZmr0zM5c3V6
JmeuTs/k6dnzea5urxvCmavb64Zw5ur2uiGcubq9bghnrm6vG8KZq9vrhnDm
6va6IbxcNxqf5+r0TM5cnZ7JmavTMzlzdXomZ65Oz+TM1emZnLk6PZOnZ8/n
uTo9kzNXp2dy5ur0TM5cnZ7JmavTMzlzdXomZ65Oz+Tp2fN5rk7P5MzV6Zmc
uTo9kzNXp2dy5ur0TM5cnZ7JmavTM3l69nyeq9MzOXN1eiZnrk7P5MzV6Zmc
uTo9kzNXp2dy5ur0TJ6ePZ/n6vRMzlydnsmZq9MzOXN1eiZnrk7P5MzV6Zmc
uTo9k6dnz+e5Oj2TM1enZ3Lm6vRMzlydnsmZq9MzOXN1eiZnrk7P5OnZ83mu
Ts/kzNXpmZy5Oj2TM1enZ3Lm6vRMzlydnsmZq9MzeXr2fJ4f0jM5c3V6Jmeu
Ts/kzNXpmZy5Oj2TM1enZ3Lm6vRMnp7JmavTPzlzdb4+OXN1+/dXOHN18rH6
z/JeJzlzdfv363b8XkuuXs4TydW5f5xeDyy2/cnTw9jrs37m6qyfr89cnfvz
fbOesfr9+85f//Kr/mxy6tJXtFw9OXP15MzVkzNXT85cPTlz9eTM1ZMzV0/O
XD05c/XkzNWTM1dPzlw9ef5cPJ/n6vRMzlydnsmZq9MzOXN1eiZnrk7P5MzV
6ZmcuTo9k6dnz+e5Oj2TM1enZ3Lm6vRMzlydnsmZq9MzOXN1eiZnrk7P5OU6
0/g8V6dncubq9EzOXJ2eyZmr0zM5c3V6JmeuTs/kzNXpmTw9ez7P1e35LJy5
uj2fhTNXt+ezcObq9nwWzlzdns/Cmavb81k4c3V7Pgsv53Pj81ydnsmZq9Mz
OXN1eiZnrk7P5MzV6ZmcuTo9kzNXp2fy9Oz5PFe31w3hzNXtdUM4c3V73RDO
XN1eN4QzV7fXDeHM1e11QzhzdXvdEF6uG43Pc3V6JmeuTs/kzNXpmZy5Oj2T
M1enZ3Lm6vRMzlydnsnTs+fzXJ2eyZmr0zM5c3V6JmeuTs/kzNXpmZy5Oj2T
M1enZ/L07Pk8V6dncubq9EzOXJ2eyZmr0zM5c3V6JmeuTs/kzNXpmTw9ez7P
1emZnLk6PZMzV6dncubq9EzOXJ2eyZmr0zM5c3V6Jk/Pns9zdXomZ65Oz+TM
1emZnLk6PZMzV6dncubq9EzOXJ2eydOz5/NcnZ7JmavTMzlzdXomZ65Oz+TM
1emZnLk6PZMzV6dn8vTs+TxXp2dy5ur0TM5cnZ7JmavTMzlzdXomZ65Oz+TM
1emZPD17Ps8P6ZmcuTo9kzNXp2dy5ur0TM5cnZ7JmavTMzlzdXomT8/kzNXp
n5y5Ol+fnLm6/fsrnLk6+Vj9Z3mvk5y5uv37dTt+ryVXL+eJ5OrcP06vBxbb
/uTpYez1WT9zddbP12euzv35vlnPWP3+feev/xef+tzfXviJtZarJ2eunpy5
enLm6smZqydnrp6cuXpy5urJmasnZ66enLl6cubqyZmrJ8+fi+fzXJ2eyZmr
0zM5c3V6JmeuTs/kzNXpmZy5Oj2TM1enZ/L07Pk8V6dncubq9EzOXJ2eyZmr
0zM5c3V6JmeuTs/kzNXpmbxcZxqf5+r0TM5cnZ7JmavTMzlzdXomZ65Oz+TM
1emZnLk6PZOnZ8/nubo9n4UzV7fns3Dm6vZ8Fs5c3Z7Pwpmr2/NZOHN1ez4L
Z65uz2fh5XxufJ6r0zM5c3V6JmeuTs/kzNXpmZy5Oj2TM1enZ3Lm6vRMnp49
n+fq9rohnLm6vW4IZ65urxvCmavb64Zw5ur2uiGcubq9bghnrm6vG8LLdaPx
ea5Oz+TM1emZnLk6PZMzV6dncubq9EzOXJ2eyZmr0zN5evZ8nqvTMzlzdXom
Z65Oz+TM1emZnLk6PZMzV6dncubq9Eyenj2f5+r0TM5cnZ7JmavTMzlzdXom
Z65Oz+TM1emZnLk6PZOnZ8/nuTo9kzNXp2dy5ur0TM5cnZ7JmavTMzlzdXom
Z65Oz+Tp2fN5rk7P5MzV6ZmcuTo9kzNXp2dy5ur0TM5cnZ7JmavTM3l69nye
q9MzOXN1eiZnrk7P5MzV6ZmcuTo9kzNXp2dy5ur0TJ6ePZ/n6vRMzlydnsmZ
q9MzOXN1eiZnrk7P5MzV6ZmcuTo9k6dnz+f5IT2TM1enZ3Lm6vRMzlydnsmZ
q9MzOXN1eiZnrk7P5OmZnLk6/ZMzV+frkzNXt39/hTNXJx+r/yzvdZIzV7d/
v27H77Xk6uU8kVyd+8fp9cBi2588PYy9Putnrs76+frM1bk/3zfrGavfvu/x
/tzM2I7155Mmt/uv9+eWJrf737zf7z9wu//h/vzT5Hb/tf5c1OR2/9X+vNTY
DvXnpeb+9nUO9ed+xra/P181ud1/pT93Nbndf/kGv//A7f6T/vzW5Hb/pf5c
1+R2/8X+vNfkdv+F/hzY5Hb/4/05pLEd688hjW29P4c0tuF8s/xwfz5pbGv9
+aSxrfbnk8Z2qD+fNLb9/fmksa3055PGNvwcLZ/055bGttSfWxrbYn9uaWwL
/bmlsR3vzyGN7Vh/Dmls6/05pLENni0/3J9PGttafz5pbKv9+aSxHerPJ41t
f38+aWwr/fmksQ2eLZ/055bGttSfWxrbYn9uaWwL/bmlsR3vzyGN7Vh/Dmls
6/05pLENni0/3J9PGttafz5pbKv9+aSxHerPJ41tf38+aWwr/fmksQ2eLZ/0
55bGttSfWxrbYn9uaWwL/bmlsR3vzyGN7Vh/Dmls6/05pLENni0/3J9PGtta
fz5pbKv9+aSxHerPJ41tf38+aWwr/fmksQ2eLZ/055bGttSfWxrbYn9uaWwL
/bmlsR3vzyGN7Vh/Dmls6/05pLENni0/3J9PGttafz5pbKv9+aSxHerPJ41t
f38+aWwr/fmksQ2eLZ/055bGttSfWxrbYn9uaWwL/bmlsR3vzyGN7Vh/Dmls
6/05pLENni0/3J9PGttafz5pbKv9+aSxHerPJ41tf38+aWwr/fmksQ2eLZ/0
55bGttSfWxrbYn9uaWwL/bmlsR3vzyGN7Vh/Dmls6/05pLENni0/3J9PGtta
fz5pbKv9+aSxHerPJ41tf38+aWwr/fmksQ2eLZ/055bGttSfWxrbYn9uaWwL
/bmlsR3vzyGN7Vh/Dmls6/05pLENni0/3J9PGttafz5pbKv9+aSxHerPJ41t
f38+aWwr/fmksQ2eLZ/055bGttSfWxrbYn9uaWwL/bmlsR3vzyGN7Vh/Dmls
6/05pLENni0/3J9PGttafz5pbKv9+aSxHerPJ41tf38+aWwr/fmksQ2eLZ/0
55bGttSfWxrbYn9uaWwL/bmlsR3vzyGN7Vh/Dmls6/05pLENni0/3J9PGtta
fz5pbKv9+aSxHerPJ41tf38+aWwr/fmksQ2eLZ/055bGttSfWxrbYn9uaWwL
/bmlsR3vzyGN7Vh/Dmls6/05pLENni0/3J9PGttafz5pbKv9+aSxHerPJ41t
f38+aWwr/fmksQ2eLZ/055bGttSfWxrbYn9uaWwL/bmlsR3vzyGN7Vh/Dmls
6/05pLENni0/3J9PGttafz5pbKv9+aSxHerPJ41tf38+aWwr/fmksQ2eLZ/0
55bGttSfWxrbYn9uaWwL/bmlsR3vz5GM7Vh/Dmls6/05pLENni0/3J9PGtta
fz5pbKv9+aSxHerPJ41tf38+aWwr/fmksQ2eLZ/055bGttSfWxrbYn9uaWzH
z+XGv9RzzifOPr/s6nnm0x/zyBfve0rPLV/0C9+4QZ9DGtvgc8/sc/1v97zx
6CxXubXnh2+c5VrP6XnjG0byw1+d5WOsf/D5v33vV97a6h98/sdf/X8v+CDr
H3x+/vv/66tb/YPPr7z97/+vVv/g83+49P/Z3eoffH5p1lfs6flbzJ/8QM/f
wvPfPK/ywec/n3n+D+CDz2tmntfBB58rM8/PAx98hudHgQ8+bxrJ314/88z6
B5+/MvP81J6/hWfWP/j845ln1j/4fHDmmfUPPv/bzDPrH64D3zHzzPoHz//n
7O/d03r+9rcz/1+6qvL1c3NQ7wUfPD9h5v8nwQfP/2zm/yrwwfMLZ/4vBB88
h/8/7Tnn7pH87cjMP+sfPP/czD/rHzyH//eBD57fN/PP+gfPD8z8s/7B85mZ
f9Y/eI7znPUPnn9/dh3+8tWVD57D//vBB8/h/3Xgg+d4bvPV4IPn8P8Y8MFz
+P9EzznD/4mec/76SP4W/ln/4Dn8s/7Bc/hn/YPnX5753wI+eA7/rH/wHP5Z
/+A5zn/WP3j+1Mzn53r+dnDWP3+4529xnXl7z9/WZ58fX9/ztzj/X9Hzt9tm
+cn1PX+Ln8sP9fztCSP529tn/ln/4DmuY6x/8PzBlzz8v7b6B89xfWP9g+dP
/O9f/x83rfX8LX7vWP/g+YsvfehnW/2D58VZ//aRnr+F/3t6/hb+39Dzt/D/
yp6/hf+lnr+F/x/u+Vv4/+6ev902kr/F3wvWP3gO/6x/8Bz+Wf/gOfyz/sFz
+Gf9g+fw/4yev4V/1j94/vDsuvEb11Q+eA7/bwQfPIf/V4EPnsP/S8EHz+H/
meCD5/D/ePDVc/OrX+uecy608MHzm2f+Wf/gOfyz/sFz+Gf9g+fwz/oHz+Gf
9Q+ewz/rHzyH/43u+cpZX/fzPX8L/zf2/C38b+v5W/i/sudv4f8JPX8L/w+h
zsFz+D8DPnheH8nf4t839fwt/LP+wXP4Z/2D5/DP+gfP4Z/1D57DP+sfPId/
1j94/s3/dtGz7zzc87fw/y97/hb+f6Tnb+H/iT1/C/9f757D/4M95wz/H+05
55dG8rfXzPyz/pVzczuTnr+Ff9Y/eA7/rH/wHP5Z/+A5/LP+wXP4Z/2D53/y
/sf8zCXbe/4W/v9Fz9/C//f0/C38f6N7Dv+f7zln+P9YzznD/zt7znlwJH/7
v2f+Wf/gOfyz/sFz/Pu9PX8L/6x/8Bz+Wf/gOfyz/sFz+Gf9g+c7bv62B+77
0Z6/hf8n9fwt/D/cPYf/L/ScM/x/vOec4f9dPecM/7f1nPNTI/nby2b+Wf/g
Ofyz/sFz+Gf9k3PzadOec4Z/1j94Dv+sf/Ac/ln/4PkxP/zY79z65J6/hf9H
uufw/1c95wz/f9hzzvD/mz3nDP9v7jln+L+p55yLI/nbp2f+Wf/gOfyz/sFz
+Gf9g+fwz/qXzs0BvrvnnOGf9Q+ewz/rHzz/1H957PLpb3bP4f8/9Zwz/P9R
zznD/2/1nDP8/2LPOcP/0Z5zhv+dPef88Ej+tnXmn/UPnsM/6x88h3/WP3gO
/6x/8Bz+Wf/iuXnLm3vOGf5Z/+D5v/z2t//qkS/2/O11M/8P9Pztwpn/e3v+
9ksz/7f3/O37Zv5v6flb+F/u+Vv4/7Gev/3wSP72oZl/1j94vnbmn/UPnuNz
LusfPB+Y+Wf9g+f4+8v6B8/R/7D+wedl7/67P2l51+D/aSP8MbN/mXcNr/Po
2b/P7jnqphH+D+7nOPCxnNDOoR2ff/+9PEfv2Pw+A+R2//UDfv/1A37/4fyx
+w/c7n94n9//8D6//9pev//aXr//6h6//+oev7/cD6Hw/bs9l+/1c3/LV3b5
11nZ5ffPPoT7D9zuP1n2+0+W/f5LO/3+Szv9/os7/P6LO/z+C9v9/gvb/f7H
5/cT4Plp+foBz4fzzfLD+zxf2+v56h7P5T4D/LlbvrLL8+HnaPlk2fOlnZ4v
7vB8Ybvnx+f3E6Bny9cPeD54tvzwPs/X9nq+usdzuc8APVu+ssvzwbPlk2XP
l3Z6vrjD84Xtnh+f30/Ans/k6wc8z/OZ/PA+z9f2er66x3O5z4A9n8lXdnme
5zP5ZNnzpZ2eL+7wfGG758fn9xOgZ8vXD3g+eLb88D7P1/Z6vrrHc7nPAD1b
vrLL88Gz5ZNlz5d2er64w/OF7Z4fn99PwF43yNcPeJ7XDfLD+zxf2+v56h7P
5T4D9rpBvrLL87xukE+WPV/a6fniDs8Xtnt+fH4/AXq2fP2A54Nnyw/v83xt
r+erezyXnJaeLV/Z5fng2fLJsudLOz1f3OH5wnbPj8/vJ0DPlq8f8HyWHzp+
eJ/na3s9X93judxngJ4tX9nl+eDZ8smy50s7PV/c4fnCds+Pz+8nQM+Wrx/w
fPBs+eF9nq/t9Xx1j+dynwF6tnxll+eDZ8sny54v7fR8cYfnC9s9Pz6/nwA9
W75+wPPBs+WH93m+ttfz1T2ey30G6NnylV2eD54tnyx7vrTT88Udni9s9/z4
/H4C9Gz5+gHPB8+WH97n+dpez1f3eC73GaBny1d2eT54tnyy7PnSTs8Xd3i+
sN3z4/P7CdCz5esHPB88W354n+drez1f3eO53GeAni1f2eX54NnyybLnSzs9
X9zh+cJ2z4/P7ydAz5avH/B88Gz54X2er+31fHWP53KfAXq2fGWX54NnyyfL
ni/t9Hxxh+cL2z0/Pv8+OD1bvn7A8/M529bm2fK1vZ6v7vFc7jNAz5av7PL8
fH61tXm2fGmn54s7PJc5Sfo8e/+GnmfG/Rue0nPL68/dT4A+75/9HH+7542X
nfs+O33ePfu7/JyeE0YObHLFR7v6Z9+rdfUPPqeu/sHnNlf/4PP3Xf2Dzytc
/Zkb7+n5W/z71J6/hee/eV7z+eCszv/wvOYzPK8/r/kMz897XvMZnh/1vObz
7pHc9W5X/+Dz0a7+weetrv7B59TVP/jc5uoffP6+q3+4Dlzu6s9c6Gk9fwv/
X7rKXwfed1XzfHRW/09e1TyH/6uuap7D/4VXNc/h/097znnZSM55mat/8Hy3
q3/wfKGrf/B8q6t/8Dx19Q+et7n6B88fcvVnXvHlq5vn8P/+q5vn8P+6q5vn
+J7dlqub5/D/mKub5/D/iZ5zhv8TPee8fyTnvN/VP3i+zNU/eH6bq3/wfKGr
f/B8q6t/8Dx19Q+eX+rqz/P5cz1/m738bM7Qen57z9/idHt9z9/Oeu35W9xn
5fqev8V16Yd6/rZ5JOfc7OofPD/o6h88n3D1D56vd/UPnh/l6h883+/qHzzf
7OrPnPMjPX8L//f0/C38v6Hnb+H/lT1/C/9LPX+Lf5/R87fw/909fzs6knMe
dfUPnje7+gfPD7r6B88nXP2D5+td/YPnR7n6B8/3u/rzuvEbPX8L/2/s+Vv4
f1XP38L/S3v+Fv6f2fO38P/4nr/Fvxvd88mRnPOkq3/wfNTVP3je7OofPD/o
6h88n3D1D56vd/UPnh/l6s+c8+d7/hb+b+z5Wxzutp6/hf8re/4W/p/Q87fw
/1D3HP7P9Jwzv2dNz8Hf1PO3k67+wfNRV//gebOrf/a9DFf/4PmEq3/wfL2r
P3POwz1/C///sudv4f9Hev4W/p/Y87fw//XuOfw/2HPO8P/RnnNeN5JzXufq
z+/dT3r+dtLVP3g+6uofPG929Q+eH3T1D55PuPoz59ze87fw/y96/hb+v6fn
b+H/G91z+P98zznD/8d6zhn+39lzzrtGcs67XP2z73W6+vP+Bt/b87eTrv7B
81FX/+B5s6t/9r0MV3/mnD/a87fw/6Sev4X/h7vn8P+FnnOG/4/3nDP8v6vn
nOH/tp5znhnJOc+4+gfPd7n6Z9+fdfXnfSSmPec86eofPB919Q+eN7v6M+d8
cs/fwv8j3XP4/6uec4b/P+w5Z/j/zZ5zhrY395wz/N/Uc85LR3LOS139g+cz
rv7B812u/tn3lF39eb+Od/ec86Srf/B81NWfOec3u+fw/596zhn+/6jnnOH/
t3rOGf5/seec4f9ozznD/86ec940knPe5OofPF/q6h88n3H1D57vcvXPvg/u
6s/7otzcc86Trv7Bc/SrX+w5Z9T/QM854/f63p5zxnX19p5zxt+1W3rOGX3F
cs85499n95zzgyM550lXf/Z1rD/7OtaffR3rz76O9c++d+/qz7yIedfg/9+O
8G/Mzre39rmv+B7ij/Uc9QLnZ+C/4zwszO9Hytc/y0fyrj957pa/+sLCa55/
x8vPnw+5P7ndX+Ykye3+MidJbveXOUlyu7/MSZLb/WVOktzuL3OShcucJPe3
ryNzkoXLnCS53V/mJMnt/jInSW73lzlJcru/zEmS2/1lTpLc7i9zkjw/LZc5
SZ5vlsucJM8fy2VOkj93y2VOkj9fy2VOkj8vy2VOkv4tlzlJer7vXC5Hz5bL
nCQ9Wy5zkvRsucxJ0rPlMidJz5bLnCQ9Wy5zkvRsucxJ2vP5cVv8+Uwuc5L2
fCaXOUl7PpPLnKQ9n8llTtKez+QyJ2nPZ3KZk7TnM7nMSdLzkXO5HD1bLnOS
9Gy5zEnSs+UyJ0nPlsucJD1bLnOS9Gy5zEnSs+UyJ2mvG6df6K8b5DInaa8b
5DInaa8b5DInaa8b5DInaa8b5DInaa8b5DInaa8b5DInSc8510fPlsucJD1b
LnOS9Gy5zEnSs+UyJ0nPlsucJD1bLnOS9Gy5zEnSc8710bPlMidJz5bLnCQ9
Wy5zkvRsucxJ0rPlMidJz5bLnCQ9Wy5zkvScc330bLnMSdKz5TInSc+Wy5wk
PVsuc5L0bLnMSdKz5TInSc+Wy5wkPedcHz1bLnOS9Gy5zEnSs+UyJ0nPlsuc
JD1bLnOS9Gy5zEnSs+UyJ0nPOddHz5bLnCQ9Wy5zkvRsucxJ0rPlMidJz5bL
nCQ9Wy5zkvRsucxJ0nPO9dGz5TInSc+Wy5wkPVsuc5L0bLnMSdKz5TInSc+W
y5wkPVsuc5L0nHN99Gy5zEnSs+UyJ0nPlsucJD1bLnOS9Gy5zEnSs+UyJ0nP
lsucJD3Hv5u2Ns+Wy5wkPVsuc5L0bLnMSdKz5TInSc+Wy5wkPVsuc5L0bLnM
SdJnzknSZ85J0mfOSdJnzknSZ85J0mfOSdJnzknSZ85J0uctrn6Zk6TPba5+
mZOkzytc/TInac/Pp/b8Leck6TPnJOkz5yTpM+ck6TPnJOkz5yTp825Xv8xJ
0uetrn6Zk6TPba5+mZPkdeByV7/MSdJz+P/SVf468L6rmueck6TnnJOk55yT
pOeck6TnnJOk58tc/TInSc8XuvplTpKep65+mZOk5w+5+mVOkp7D//uvbp7D
/+uubp5zTpKec06SnnNOkp5zTpKec06Snu939cucJD2/zdUvc5L0fKurX+Yk
6fmlrn6Zk6TnWE/8cM/fwvPbe/4Wp9vre/521mvP33JOkp5zTpKec06Snje7
+mVOkp5PuPplTpKec06Snu939cucJD1HXPSRnr+F/3t6/hb+39Dzt/D/yp6/
hf+lnr/Fv8/o+VvOSdJzzknS81FXv8xJ0vODrn6Zk6Tn6139MidJz/e7+mVO
kp7D/xt7/hb+X9Xzt/D/0p6/hf9n9vwt/D++52/x70b3nHOS9HzS1S9zkvS8
2dUvc5L0fMLVL3OS9JxzkvScc5L0HP5v7PlbHO62nr+F/yt7/hb+n9Dzt/D/
UPcc/s/0nDPnJOk55yTp+aSrX+Yk6Xmzq1/mJOn5hKtf5iTpOeck6TnnJOk5
/P9Iz9/C/xN7/hb+v949h/8He84Z/j/ac86ck6Tn61z9MidJzydd/TInSc+b
Xf0yJ0nPJ1z9MidJzzknSc85J0nP4f8b3XP4/3zPOcP/x3rOGf7f2XPOnJOk
57tc/TInSc85J0nPJ139MidJz5td/TInSc85J0nPOSdJzzknSc85J0nP4f/j
PecM/+/qOWf4v63nnDknSc9nXP0yJ0nP17n6ZU6Snk+6+mVOkp43u/plTpKe
c06SnnNOkp5zTpKec06SnkPbm3vOGf5v6jlnzknS86WufpmTpOe7XP0yJ0nP
OSdJzydd/TInSc85J0nPOSdJzzknSc85J0nPOSdJzzknSc/hf2fPOXNOkp5v
cvXLnCQ9n3H1y5wkPV/n6pc5SXo+6eqXOUl6zjlJ29fd23POuK7e3nPO+Lt2
S885o69Y7jln/PvsnnPmnKTt61i/zEnavo71y5yk7etYv8xJ0uedLu+SOUny
nJPk6+ScJPfPOUny33EeZE6Sr3+Wj+Rdf/LcLZdf9WeTU5e+4vz5kPuT2/1l
TpLc7i9zkuR2f5mTJLf7y5wkud1f5iTJ7f4yJ1m4zElyf/s6MidZuMxJktv9
ZU6S3O4vc5Lkdn+ZkyS3+8ucJLndX+Ykye3+MifJ89NymZPk+Wa5zEny/LFc
5iT5c7dc5iT587Vc5iT587Jc5iTp33KZk6Tn+87lcvRsucxJ0rPlMidJz5bL
nCQ9Wy5zkvRsucxJ0rPlMidJz5bLnKQ9nx+3xZ/P5DInac9ncpmTtOczucxJ
2vOZXOYk7flMLnOS9nwmlzlJez6Ty5wkPR85l8vRs+UyJ0nPlsucJD1bLnOS
9Gy5zEnSs+UyJ0nPlsucJD1bLnOS9rpx+oX+ukEuc5L2ukEuc5L2ukEuc5L2
ukEuc5L2ukEuc5L2ukEuc5L2ukEuc5L0nHN99Gy5zEnSs+UyJ0nPlsucJD1b
LnOS9Gy5zEnSs+UyJ0nPlsucJD3nXB89Wy5zkvRsucxJ0rPlMidJz5bLnCQ9
Wy5zkvRsucxJ0rPlMidJzznXR8+Wy5wkPVsuc5L0bLnMSdKz5TInSc+Wy5wk
PVsuc5L0bLnMSdJzzvXRs+UyJ0nPlsucJD1bLnOS9Gy5zEnSs+UyJ0nPlsuc
JD1bLnOS9JxzffRsucxJ0rPlMidJz5bLnCQ9Wy5zkvRsucxJ0rPlMidJz5bL
nCQ951wfPVsuc5L0bLnMSdKz5TInSc+Wy5wkPVsuc5L0bLnMSdKz5TInSc85
10fPlsucJD1bLnOS9Gy5zEnSs+UyJ0nPlsucJD1bLnOS9Gy5zEnSc/y7aWvz
bLnMSdKz5TInSc+Wy5wkPVsuc5L0bLnMSdKz5TInSc+Wy5wkfeacJH3mnCR9
5pwkfeacJH3mnCR95pwkfeacJH3mnCR93uLqlzlJ+tzm6pc5Sfq8wtUvc5L2
/Hxqz99yTpI+c06SPnNOkj5zTpI+c06SPnNOkj7vdvXLnCR93urqlzlJ+tzm
6pc5SV4HLnf1y5wkPYf/L13lrwPvu6p5zjlJes45SXrOOUl6zjlJes45SXq+
zNUvc5L0fKGrX+Yk6Xnq6pc5SXr+kKtf5iTpOfy//+rmOfy/7urmOeck6Tnn
JOk55yTpOeck6TnnJOn5fle/zEnS89tc/TInSc+3uvplTpKeX+rqlzlJeo71
xA/3/C08v73nb3G6vb7nb2e99vwt5yTpOeck6TnnJOl5s6tf5iTp+YSrX+Yk
6TnnJOn5fle/zEnSc8RFH+n5W/i/p+dv4f8NPX8L/6/s+Vv4X+r5W/z7jJ6/
5ZwkPeecJD0fdfXLnCQ9P+jqlzlJer7e1S9zkvR8v6tf5iTpOfy/sedv4f9V
PX8L/y/t+Vv4f2bP38L/43v+Fv9udM85J0nPJ139MidJz5td/TInSc8nXP0y
J0nPOSdJzzknSc/h/8aev8Xhbuv5W/i/sudv4f8JPX8L/w91z+H/TM85c06S
nnNOkp5PuvplTpKeN7v6ZU6Snk+4+mVOkp5zTpKec06SnsP/j/T8Lfw/sedv
4f/r3XP4f7DnnOH/oz3nzDlJer7O1S9zkvR80tUvc5L0vNnVL3OS9HzC1S9z
kvScc5L0nHOS9Bz+v9E9h//P95wz/H+s55zh/50958w5SXq+y9Uvc5L0nHOS
9HzS1S9zkvS82dUvc5L0nHOS9JxzkvScc5L0nHOS9Bz+P95zzvD/rp5zhv/b
es6Zc5L0fMbVL3OS9Hydq1/mJOn5pKtf5iTpebOrX+Yk6TnnJOk55yTpOeck
6TnnJOk5tL2555zh/6aec+acJD1f6uqXOUl6vsvVL3OS9JxzkvR80tUvc5L0
nHOS9JxzkvScc5L0nHOS9JxzkvScc5L0HP539pwz5yTp+SZXv8xJ0vMZV7/M
SdLzda5+mZOk55OufpmTpOeck7R93b0954zr6u0954y/a7f0nDP6iuWec8a/
z+45Z85J2r6O9cucpO3rWL/MSdq+jvXLnCR93unyLpmTJM85Sb5Ozkly/5yT
JP8d50HmJPn6Z/lI3vUnz93yF5/63N9e+Im18+dD7k9u95c5SXK7v8xJktv9
ZU6S3O4vc5Lkdn+ZkyS3+8ucZOEyJ8n97evInGThMidJbveXOUlyu7/MSZLb
/WVOktzuL3OS5HZ/mZMkt/vLnCTPT8tlTpLnm+UyJ8nzx3KZk+TP3XKZk+TP
13KZk+TPy3KZk6R/y2VOkp7vO5fL0bPlMidJz5bLnCQ9Wy5zkvRsucxJ0rPl
MidJz5bLnCQ9Wy5zkvZ8ftwWfz6Ty5ykPZ/JZU7Sns/kMidpz2dymZO05zO5
zEna85lc5iTt+Uwuc5L0fORcLkfPlsucJD1bLnOS9Gy5zEnSs+UyJ0nPlsuc
JD1bLnOS9Gy5zEna68bpF/rrBrnMSdrrBrnMSdrrBrnMSdrrBrnMSdrrBrnM
SdrrBrnMSdrrBrnMSdJzzvXRs+UyJ0nPlsucJD1bLnOS9Gy5zEnSs+UyJ0nP
lsucJD1bLnOS9JxzffRsucxJ0rPlMidJz5bLnCQ9Wy5zkvRsucxJ0rPlMidJ
z5bLnCQ951wfPVsuc5L0bLnMSdKz5TInSc+Wy5wkPVsuc5L0bLnMSdKz5TIn
Sc8510fPlsucJD1bLnOS9Gy5zEnSs+UyJ0nPlsucJD1bLnOS9Gy5zEnSc871
0bPlMidJz5bLnCQ9Wy5zkvRsucxJ0rPlMidJz5bLnCQ9Wy5zkvScc330bLnM
SdKz5TInSc+Wy5wkPVsuc5L0bLnMSdKz5TInSc+Wy5wkPedcHz1bLnOS9Gy5
zEnSs+UyJ0nPlsucJD1bLnOS9Gy5zEnSs+UyJ0nP8e+mrc2z5TInSc+Wy5wk
PVsuc5L0bLnMSdKz5TInSc+Wy5wkPVsuc5L0mXOS9JlzkvSZc5L0mXOS9Jlz
kvSZc5L0mXOS9JlzkvR5i6tf5iTpc5urX+Yk6fMKV7/MSdrz86k9f8s5SfrM
OUn6zDlJ+sw5SfrMOUn6zDlJ+rzb1S9zkvR5q6tf5iTpc5urX+YkeR243NUv
c5L0HP6/dJW/DrzvquY55yTpOeck6TnnJOk55yTpOeck6fkyV7/MSdJzzknS
862ufpmTpOdtrn6Zk6TnaN++fHXzHP7ff3XzHP5fd3XznHOS9JxzkvScc5L0
nHOS9JxzkvR8v6tf5iTp+W2ufpmTpOdbXf0yJ0nPL3X1y5wkPcd64od7/hae
397ztzjdXt/zt7Nee/6Wc5L0nHOS9JxzkvS82dUvc5L0fMLVL3OS9JxzkvR8
v6tf5iTpOeKij/T8Lfzf0/O38P+Gnr+F/1f2/C38L/X8Lf59Rs/fck6SnnNO
kp6PuvplTpKeH3T1y5wkPV/v6pc5SXq+39Uvc5L0HP7f2PO38P+qnr+F/5f2
/C38P7Pnb+H/8T1/i383uueck6Tnk65+mZOk582ufpmTpOcTrn6Zk6TnnJOk
55yTpOfwf2PP3+Jwt/X8Lfxf2fO38P+Enr+F/4e65/B/puecOSdJzzknSc8n
Xf0yJ0nPm139MidJzydc/TInSc85J0nPOSdJz+H/R3r+Fv6f2PO38P/17jn8
P9hzzvD/0Z5z5pwkPV/n6pc5SXo+6eqXOUl63uzqlzlJej7h6pc5SXrOOUl6
zjlJeg7/3+iew//ne84Z/j/Wc87w/86ec+acJD3f5eqXOUl6zjlJej7p6pc5
SXre7OqXOUl6zjlJes45SXrOOUl6zjlJeg7/H+85Z/h/V885w/9tPefMOUl6
PuPqlzlJer7O1S9zkvR80tUvc5L0vNnVL3OS9JxzkvScc5L0nHOS9JxzkvQc
2t7cc87wf1PPOXNOkp4vdfXLnCQ93+XqlzlJes45SXo+6eqXOUl6zjlJes45
SXrOOUl6zjlJes45SXrOOUl6Dv87e86Zc5L0fJOrX+Yk6fmMq1/mJOn5Ole/
zEnS80lXv8xJ0nPOSdq+7t6ec8Z19faec8bftVt6zhl9xXLPOePfZ/ecM+ck
bV/H+mVO0vZ1rF/mJG1fx/plTpI+73R5l8xJkuecJF8n5yS5f85Jkv+O8yBz
knz9s3xez1s+cdGB07vm+eGmc9tdP/6ir37r6kONf/UvX/+J+55+sPGDn3/0
C+688EDjD/zNv3nPkdP7Gv+hv7/gB7a+f2/jb/vaz771kl/Y03h4edlK4y9/
7M/cfPpZuxv/8+/65vS+79zV+LOe9NPb7/zr5cZ/7eKHP3rkQzsbf8wVP3Xl
1jt3NH7TlV+/55JXbm+8+Hzq88/z4lN48Sm8+BRefAovPoUXn8KLT+HFp/Di
U3jxKbz4FF58Ci8+hZ9+7uu+e9OWSePF8/uuOs+LZ+HFs/DiWXjxLLx4Fl48
Cy+ehRfPwotn4cWz8OJZePEsvHgWXjwLL563XH2eF8/Ci2fhxbPw4ll48Sy8
eBZePAsvnoUXz8KLZ+HFs/DiWXjxLLx4Fl48r205z4tn4cWz8OJZePEsvHgW
XjwLL56FF8/Ci2fhxbPw4ll48Sy8eBZePAsvnp/xwvO8eBZePAsvnoUXz8KL
Z+HFs/DiWXjxLLx4Fl48Cy+ehRfPwotn4cWz8OJ5Y4SfuuY8L/43Rn4usn/5
uWyM/Lxk//Lz2hj5Ocr+5ee4MfLzlf3Lz3dj5Ocu+5ef+8bI+SD7l/NhY+Q8
kf3LebIxcv7I/uX82Rg5r2T/cl5tjJxvsn853zZGzkPZv5yHGyPnp+xfzs+N
kfNW9i/n7cbI+Sz7l/P2TS86z8v5Kbych8LL+Sa8nFfCy/kjvJwnwsv5ILz8
3IWXn6/w8nMUXn5ewsvPRXjxL7x4Fl48TxbO8+JZePEsvHgWXjwLL56FF8/C
i2fhxbPw4ll48Sy8eBZePAsvnoUXz8KL5+998XlePAsvnoUXz8KLZ+HFs/Di
WXjxLLx4Fl48Cy+ehRfPwotn4cWz8OJZePE8HfE8HfE8HfE8HfE8HfE8HfE8
HfE8HfE8HfE8HfE8HfE8HfE8HfE8HfE8HfH87mvP8+JZePEsvHgWXjwLL56F
F8/Ci2fhxbPw4ll48Sy8eBZePAsvnoUXz8KL55tfcp4Xz8KLZ+HFs/DiWXjx
LLx4Fl48Cy+ehRfPwotn4cWz8OJZePEsvHgWXjw/e/E8Lz6FF5/Ci0/hxafw
4lN48Sm8+BRefAovPoUXn8KLT+HFp/DiU/jarM4dPbf8i1mdl/fc8tmzOjft
b/zXZ3V+pueWj53V+Z6eW2550cbPnb6y55Dvvv61X7nv229o/LuWv7p657Tn
kMf2v+Yvj3yw55DT1a+8eOtbeg65dOTV913yE5PGY53jtT1vDD/bet4Yfi7d
33j4ebjnjeHnUz1vDA8/dEPj4eGinh+GhzM9JwwPH+g54RdnHm7rOWEc76t7
vveK2fFet7/xT86O9+Ke+/3Y7Hg3er539ey4rui53G/OjuuCnsv9T7Pj+mzP
3/7n2XG9t+dvZ9elztUpeVHUf23PzaL+p/TcLOrc3POrqPORnlM9blbnp3tO
FfXc2HOkqOeaniPF+z6t5za/NXvfh3o+E6//ip6TxPnz/T1/eOtInvC1kRzg
ZSOf9/945HP9D498fv+3I5/TvzXyefwVI5+7Pzny+frHRj5H//uRz8vfNvK5
+OjI598zI59zL/ujN/7dt36qf84Nzzv659nwfHn/PBue8/opPDx/pn+eDc/v
6Z9n47p0Zf98GtelvH4KD2/T/vk0vH2wfz4Nb2/pn0/XZ95+on8+DT+v7Z83
w8+2/nkz/OT1U3j4ebh/3gw/n+qfN8NDXj+Fh4eL+ufHuD6f6Z8T4/r8gf45
8TtmHm7rnxPjeF/dP9/F8eb1U3gc78X9c18c70b/fBfHdUX/XBbHdUH/XBbH
9dn++eue2XG9t3/+ivrz+jlF/df2z01R/1P656aoc3P//BJ1PtI/pzx3Vuen
++eUqOfG/jki6rmmf46I931a79v/j9n7PtT783j9V/Q++ZWz1/n+3n/u3frA
O448va/zPjy7jr2o9xWlvxK+X19H+q7yuUD4Vu1PtK+L73vM16Ofs/VZD37t
S6tn//9bDjUe8xOyHp081ullPTr52TnRfY3HfICsRyePOQBZj04ec5z5/SDh
Ma8s69HJPz+rU9ajky/F91WWG/+9WZ2yHp38n8YAxY7GY95d1qOTF59DX2R9
Ci8+hRefwotP4cWn8OJTePEpvPgUXnwKLz6FF5/Ci0/hxWfzNmm8eB76N+tZ
ePEsvHgWXjwLL56FF8/Ci2fhxbPw4ll48Sy8eBZePAsvnpu3SePF89CXWs/C
i2fhxbPw4ll48Sy8eBZePAsvnoUXz8KLZ+HFs/DiWXjx3LxNGi+eh/7cehZe
PAsvnoUXz8KLZ+HFs/DiWXjxLLx4Fl48Cy+ehRfPwovn5m3SePE8fK6xnoUX
z8KLZ+HFs/DiWXjxLLx4Fl48Cy+ehRfPwotn4cWz8OK5eZs0XjxvjHjeGPG8
MeJ5Y8TzxojnjRHPGyOeN0Y8b4x43hjxvDHieWPE88aI5+Zt0njxPHyutHz4
PGX9y/6Fy/7l5yL7Fy77l5+X7F+47F9+jrJ/4bJ/+fnK/oXL/uXnLvsXLvuX
80H2L1z2L+eJ7F+47F/OH9m/cNm/nFeyf+GyfznfZP/CZf9yHsr+hcv+5fyU
/Qtv59uk7V+47F/O2+FzsT0/hZfzUHg534SX80p4OX+El/NEeDkfhJefu/Dy
8xVefo7Cy89LePm5CC/+m7dJ48Xz8PndehZePAsvnoUXz8KLZ+HFs/DiWXjx
LLx4Fl48Cy+ehRfPwovn5m3SePE8HfE8HfE8HfE8HfE8HfE8HfE8HfE8HfE8
HfE8HfE8HfE8HfE8HfHcvE0aL57ffa33LLx4Fl48Cy+ehRfPwotn4cWz8OJZ
ePEsvHgWXjwLL56FF8/N26Tx4vnml3jPwotn4cWz8OJZePEsvHgWXjwLL56F
F8/Ci2fhxbPw4ll48dy8TRovnp+96H0KLz6FF5/Ci0/hxafw4lN48Sm8+BRe
fAovPoUXn8KLT+HFp/DwuaPnluHz8p5bhk9Zjy4+P9Nzy/D5np5bhs83jOSW
V/Z8MrzJOnXxNu35ZHj7YM8nw9tbej4Z33OTderiZ1vPG8OPrEcXPw/3vDH8
fKrnjWe/DzaSN8o6dfFwUc8Vw8OZnh+Ghw/0/DC+B3jbSH4o69HleC/uuV8c
70bP9+J4PzmS713R87o4rgt6XhfH9dmey8Xrv7fncvG9u2t7bnb2PlM9N4v6
vzKSj23uuVbU+UjPr+J1Pj2SX13Tc6So50k9R4r3fVrPc+L7gQ+N5DYv6DlJ
vM7391wi1oV/qn/+PaLXAeGn9TogfKteB4R/UK8Dwi/V64Dwu/Q6IPyoXgeE
P6jXAeHX63VA+P16HRB+mV4HhN+h1wHhZV5FPi8c0euD8NN6fRC+Va8Pwj+o
1wfhl+r1QfhRvT4If1CvD8Kv1+uD8Pv1+iD8Er0+CC9zLNLPH9HrhvDTet0Q
vlWvG8I/qNcN4Uf1uiH8Qb1uCL9erxt8/ff2zyNlvmWK47q2f444rdeTKY7r
K/3zwlG9nkxR/yO9n9+q15Mp6ryx99tH9Doj/LReZ4Qf1esM+/+Hen9b5mGk
Hzui1x/hR/X6Izz8yzqv7U+E36f7S98S94873vvAs6/T979bf6/Z/8g67199
YeE1z7/j5fV1hHOdNznXeZNznTc513mTc503Odd5k3OdNznXeZNznTc513mT
c503Odd5k3Od1/oUznVe61M413mtT+Fc57U+hXOd1/oUznVe61M413mtz+Zt
0jjXea1n4VzntZ6Fc53XehbOdV7rWTjXea1n4VzntZ6Fc53Xem7eJo1zndd6
Fs51XutZONd5rWfhXOe1noVzndd6Fs51XutZONd5refmbdI413mtZ+Fc57We
hXOd13oWznVe61k413mtZ+Fc57WehXOd13pu3iaNc53XehbOdV7rWTjXea1n
4VzntZ6Fc53XehbOdV7rWTjXea3n5m3SONd5reeNEc8bI543RjxvjHjeGPG8
MeJ5Y8TzxojnjRHPGyOeN0Y8b4x4bt4mjXOd1/Lhc5z1L/sXLvtznddy2Z/r
vJbL/lzntVz25zqv5bI/13ktl/25zmu57M91Xstlf67zWi77c53Xctmf67yW
y/5c57Vc9uc6r+XtfJu0/QuX/bnOa89P4VznteebcK7z2vNHONd57fkgnOu8
9ucrnOu89uclnOu81n/zNmmc67zWs3Cu81rPwrnOaz0L5zqv9Syc67zWs3Cu
81rPwrnOaz03b5PGuc5rPU9HPE9HPE9HPE9HPE9HPE9HPE9HPE9HPE9HPE9H
PE9HPE9HPDdvk8a5zms9C+c6r/UsnOu81rNwrvNaz8K5zms9C+c6r/UsnOu8
1nPzNmmc67zWs3Cu81rPwrnOaz0L5zqv9Syc67zWs3Cu81rPwrnOaz03b5PG
uc5rfQrnOq/1KZzrvNancK7zWp/Cuc5rfQrnOq/1KZzrvNancK7zFp+X99yS
67zF52d6bsl13uLzDSO55ZU9n+Q6b/E27fkk13mLt7f0fJLrvMXPtp43cp23
+Hm4541c5y1+7h3JG2Wdt3i4qOeKXOctHj7Q80Ou85bjlXXecrwX99yP67zl
eD85ku9d0fM6rvOW4/psz+W4zpuc67yl/qf03IzrvKXOzT3X4jpveZ1Pj+RX
1/Qcieu85X2f1vMcrvOW139Bz0m4zpuc67zJuc6bnOu8ybnOm5zrvOV8e0//
XMl13vJzvLJ/7uM6b3Ku8ybnOm9yrvMm5zpv8fba/nmK67zFm6zzFm8P989T
XOct3u7tn6e4zlv8XNQ/N3Gdt/j5QP98xHXe4uHV/XMN13mLh4v75x2u8xYP
n+yfa7jOW473gv45heu85fXf2z+PcJ23HNe1/XME13nLcX2lf17gOm+p/5He
z3Odt9R5Y++3uc5b6nxS77e5zluuSw/1/pbrvOV9X9D7TK7zFv9P7+un8d9b
+t9frvMm5zqv7beFc53X9pPD+15+1Z9NTl36ivo6wrnOm5zrvMm5zpuc67zJ
uc6bnOu8ybnOm5zrvMm5zpuc67zJuc6bnOu8ybnOa30K5zqv9Smc67zWp3Cu
81qfwrnOa30K5zqv9Smc67zWZ/M2aZzrvNazcK7zWs/Cuc5rPQvnOq/1LJzr
vNazcK7zWs/Cuc5rPTdvk8a5zms9C+c6r/UsnOu81rNwrvNaz8K5zms9C+c6
r/UsnOu81nPzNmmc67zWs3Cu81rPwrnOaz0L5zqv9Syc67zWs3Cu81rPwrnO
az03b5PGuc5rPQvnOq/1LJzrvNazcK7zWs/Cuc5rPQvnOq/1LJzrvNZz8zZp
nOu81vPGiOeNEc8bI543RjxvjHjeGPG8MeJ5Y8TzxojnjRHPGyOeN0Y8N2+T
xrnOa/nwOc76l/0Ll/25zmu57M91Xstlf67zWi77c53Xctmf67yWy/5c57Vc
9uc6r+WyP9d5LZf9uc5ruezPdV7LZX+u81ou+3Od1/J2vk3a/oXL/lznteen
cK7z2vNNONd57fkjnOu89nwQznVe+/MVznVe+/MSznVe6795mzTOdV7rWTjX
ea1n4VzntZ6Fc53XehbOdV7rWTjXea1n4VzntZ6bt0njXOe1nqcjnqcjnqcj
nqcjnqcjnqcjnqcjnqcjnqcjnqcjnqcjnqcjnpu3SeNc57WehXOd13oWznVe
61k413mtZ+Fc57WehXOd13oWznVe67l5mzTOdV7rWTjXea1n4VzntZ6Fc53X
ehbOdV7rWTjXea1n4VzntZ6bt0njXOe1PoVzndf6FM51XutTONd5rU/hXOe1
PoVzndf6FM51XutTONd5i8/Le27Jdd7i8zM9t+Q6b/H5hpHc8sqeT3Kdt3ib
9nyS67zF21t6Psl13uJnW88buc5b/Dzc80au8xY/947kjbLOWzxc1HNFrvMW
Dx/o+SHXecvxyjpvOd6Le+7Hdd5yvJ8cyfeu6Hkd13nLcX2253Jc503Odd5S
/1N6bsZ13lLn5p5rcZ23vM6nR/Kra3qOxHXe8r5P63kO13nL67+g5yRc503O
dd7kXOdNznXe5FznTc513nK+vad/ruQ6b/k5Xtk/93GdNznXeZNznTc513mT
c523eHtt/zzFdd7iTdZ5i7eH++cprvMWb/f2z1Nc5y1+Luqfm7jOW/x8oH8+
4jpv8fDq/rmG67zFw8X98w7XeYuHT/bPNVznLcd7Qf+cwnXe8vrv7Z9HuM5b
juva/jmC67zluL7SPy9wnbfU/0jv57nOW+q8sffbXOctdT6p99tc5y3XpYd6
f8t13vK+L+h9Jtd5i/+n9/XT+O8t/e8v13mTc53X9tvCuc5r+8lfwnONZZ03
Odd5k3OdNznXeZNznTc513mTc503Odd5k3OdNznXeZNznTc513mTc503Odd5
rU/hXOe1PoVzndf6FM51XutTONd5rU/hXOe1PoVzndf6bN4mjXOd13oWznVe
61k413mtZ+Fc57WehXOd13oWznVe61k413mt5+Zt0jjXea1n4VzntZ6Fc53X
ehbOdV7rWTjXea1n4VzntZ6Fc53Xem7eJo1zndd6Fs51XutZONd5rWfhXOe1
noVzndd6Fs51XutZONd5refmbdI413mtZ+Fc57WehXOd13oWznVe61k413mt
Z+Fc57WehXOd13pu3iaNc53Xet4Y8bwx4nljxPPGiOeNEc8bI543RjxvjHje
GPG8MeJ5Y8Tzxojn5m3SONd5LR8+x1n/sn/hsj/XeS2X/bnOa7nsz3Vey2V/
rvNaLvtznddy2Z/rvJbL/lzntVz25zqv5bI/13ktl/25zmu57M91Xstlf67z
Wt7Ot0nbv3DZn+u89vwUznVee74J5zqvPX+Ec53Xng/Cuc5rf77Cuc5rf17C
uc5r/Tdvk8a5zms9C+c6r/UsnOu81rNwrvNaz8K5zms9C+c6r/UsnOu81nPz
Nmmc67zW83TE83TE83TE83TE83TE83TE83TE83TE83TE83TE83TE83TEc/M2
aZzrvNazcK7zWs/Cuc5rPQvnOq/1LJzrvNazcK7zWs/Cuc5rPTdvk8a5zms9
C+c6r/UsnOu81rNwrvNaz8K5zms9C+c6r/UsnOu81nPzNmmc67zWp3Cu81qf
wrnOa30K5zqv9Smc67zWp3Cu81qfwrnOa30K5zpv8Xl5zy25zlt8fqbnllzn
LT7fMJJbXtnzSa7zFm/Tnk9ynbd4e0vPJ7nOW/xs63kj13mLn4d73sh13uLn
3pG8UdZ5i4eLeq7Idd7i4QM9P+Q6bzleWectx3txz/24zluO95Mj+d4VPa/j
Om85rs/2XI7rvMm5zlvqf0rPzbjOW+rc3HMtrvOW1/n0SH51Tc+RuM5b3vdp
Pc/hOm95/Rf0nITrvMm5zpuc67zJuc6bnOu8ybnOW8639/TPlVznLT/HK/vn
Pq7zJuc6b3Ku8ybnOm9yrvMWb6/tn6e4zlu8yTpv8fZw/zzFdd7i7d7+eYrr
vMXPRf1zE9d5i58P9M9HXOctHl7dP9dwnbd4uLh/3uE6b/Hwyf65huu85Xgv
6J9TuM5bXv+9/fMI13nLcV3bP0dwnbcc11f65wWu85b6H+n9PNd5S5039n6b
67ylzif1fpvrvOW69FDvb7nOW973Bb3P5Dpv8f/0vn4a/72l//3lOm9yrvPa
fls413nPXydnz8WWPmTTue2zs+cC79/d+P8ye0762+frmMkfO3vetPwdTx6v
/693N/6Z2euv7Go8nhv+wHz9Lnk8n/3fHWw8ngMuf2eTx3PA37W78Xh++k/v
ajzqWb6h8Xh+95fn61ylzo8dbDzq/OUDjcdzzOXvbKn/T3c3HvXfs6vxqP91
NzQe9U+WG3/GrM7HzteJynH954ONx3F95EDjcVx372/8z2fPrZa/4+V4/2F3
43G8f7yr8TjeX7uh8Tje1yw3Hse7tLPxh1/1sZeffvJ8vSZ5PK/8H72s8fDw
xQONh4ff2994eLhjX+OvmD2PW/qQ5J+c+XnCSuPh5+92NR5+Pn5D4+HnV5Yb
Dz+37Gw8/CzuaPw/zo736fN1luTxnPRnvqzx8PbYg42Hty/sbzy83bev8fB2
+97G47r6r/Y0Hj6fu9J4+PzHuxsPn397Q+Ph8w+WGw+fb9vZePg8sqPx8Lmw
vfE4Lunfkv/B73/b8fPXyaF/SB5+pJ9JHtfVf7278ZXfedN3nL8efu/8ufOn
Zq//7w42Hj8X6R+Sx3XgXbsbj/f96V2N/8Nvf/uvnr/uyfPuo56PHWw86vnl
A43H+SP9QPI4D/90d+NR5z27Go8687on/A+3v/gJ569vw9/rUv9/Pth41P+R
A41H/Xl9Ex6/F9I/JD80O65/2N14HNcf72o8jiuvb8LjuF6z3PgvfeKiA+ev
Y0P/kPxNv3HbFeevY8LjeL94oPE43ryOCY/jvWNf42+dva/0M8k3Zh6esNJ4
ePi7XY2Hh7yOCQ8Pv7LceHi4ZWfjP/Cr3/F7569LQ9+S/OdnHh57sPHwkNcl
4btnHu7b13h4uH1v45f90Rv/7vx1SXj4ee5K43Ge/OPdjcf5n9cl4fF7+gfL
jYeft+1sPK4zR3Y0/rB+nhUeuZz0b/mcjllbrf1beY6Y9GnluWzSp5Xn2kif
Vl5f+rTyfC7px8r7Sj9Wnksi/Vh5jon0Y6Ue6cdKPdKPJb9g9t837288chXp
x0r90o+V56FIP1bql36s1Cn9WDku6cfK/tKPleOSfqw8r0f6rvJ8Ium7yvOb
pO8qxyV9Vzku6bvK82uk70q+OKtH+q5yvNJ3leOVvqscr/Rd5bk/0l8VD9Jf
FQ/SXxUP0l8VD9JfFQ/SX9nn7MhztONzqPRX5flE0l+V5/tIf1X8SH9V/Eh/
VZ4fJH1U8SZ9VPEmfVTxJn1U8SZ9VPEmfVTxJn1UeS7S1f254Ucwx1J8mueG
b8WcSfFpngN+KeZGyvPUzHO947phnt8dfP98rqP4N8/vfhDzHsW/eR73/Zjf
KP7N87XvxjxGeS6b9KXleKX/LMe1sqvxH9Trvzz/6w69/vO5zNJ/lveV/rO8
b17/hf+uXv/leV4/qNf/KeqRvtRe54Vfqtf5KeqU/rPUOVluvFzn5flfv6vX
eeE/qNd54XfodZ7PEZb+s5zn0n+W45L+sxyX9J/luJZ2Nl6u8/I8spfodV74
7+p1XvgP6nVe+B16nedzfqX/LL/v0n8WD9J/Fg/SfxYP0n8WD4s7Gv+cXs/l
OWiLej0Xfp9ez4WX67nwcj3nc9ak/yx+pP8s54n0n+X8l/6z/J5K/1n8SP9p
r+fSZ16gnM/5lb407yvIvrTc91j60nIfaelLy304pS8try99abmfsPSl5X2l
Ly33UZS+tNx3UfrSUo/0paUe6UuTsy8t9++VvrTUL31puX+j9KWlfulLS53S
l5bjkr607C99aTku6UvL/UWlLy33U5W+tNxvVvrSclzSl5bjkr603G9T+tLk
7EvL8UpfWo5X+tJyvNKXlvuUSl9aPEhfWjxIX1o8SF9aPEhfWjxIX2rvCyrP
/WFfWu6nKn1puR+p9KXFj/SlxY/0peV+p9KXFm/SlxZv0pcWb9KXFm/SlxZv
0pcWb9KXlvu4Sl9azivzvCT2pcWneZ4R+9JyH2PzfCL2peW6YZ43xL60+DfP
G2JfWvyb5wexLy3+zfOA2JeW+0hLX1qOV/rSclzSlyZnX1peX/pSe/0Xzr60
vK/0pcnZl5Z6pC8t9Uhfaq/zwtmXljqlLy11Sl9qr/Nyv2L2paV+6UtL/dKX
JmdfWs5z6UvLcUlfWo5L+tJyXNKX2uu83D+ZfWk5XulLy/FKX1qOV/rScv9n
6UvL77v0pcWD9KXFg/SlxYP0pcWD9KXJ2ZeWv3fSl5a/C9KX2uu5cPal5b7Q
0pcWP9KXlvNE+tJy/ktfWn5PpS8tfqQvtddz6TPZl5Z+UvrS/B40+9Jynxbp
S8t9b6QvLfcNkL60vL70peX+J9KXlveVvrR871v60vI9celLSz3Sl5Z6pC9N
zr603G9E+tJSv/Sl5fvm0peW+qUvLXVKX1qOS/rSsr/0peW4pC8t90OQvrTc
/0H60nJ/DOlLy3FJX1qOS/rScn8A6UuTsy8txyt9aTle6UvL8UpfWu6rIH1p
8SB9afEgfWnxIH1p8SB9afEgfam9j4Hcp5R9abn/g/Sl5f4J0pcWP9KXFj/S
l5b7M0hfWrxJX1q8SV9avElfWrxJX1q8SV9avElfWu47IX1pOa/M/V3Zlxaf
5v6r7EvLfVfM/VTZl5brhrk/KvvS4t/cH5V9afFv7nfKvrT4N/cvZV9a7nsj
fWk5XulLy3FJX5qcfWl5felL7fVfOPvS8r7SlyZnX1rqkb601CN9qb3OC2df
WuqUvrTUKX2pvc7L/VXYl5b6pS8t9Utfmpx9aTnPpS8txyV9aTku6UvLcUlf
aq/zcr8X9qXleKUvLccrfWk5XulLy/1qpC8tv+/SlxYP0pcWD9KXFg/SlxYP
0pcmZ19a/t5JX1r+Lkhfaq/nwtmXlvvYSF9a/EhfWs4T6UvL+S99afk9lb60
+JG+1F7Ppc9kX1r6SelLc26TfWn5Xon0peV7OtKXljln6UvL60tfWr6vIX1p
eV/pS8ucqvSlZa5V+tJSj/SlpR7pS5OzLy3fj5C+tNQvfWmZj5W+tNQvfWmp
U/rSclzSl5b9pS8txyV9aZnflr60zKtLX1rm+aUvLcclfWk5LulLyzyz9KXJ
2ZeW45W+tByv9KXleKUvLXPg0pcWD9KXFg/SlxYP0pcWD9KXFg/Sl9q5a7mv
AvvSMq8ufWmZ95a+tPiRvrT4ub3fp4J9afEmfWnxJn1p8SZ9afEmfWnxJn1p
8bbQ70fBvrScV+Z+FOxLi09zvwj2peV7Iub+D+xLy3XD3M+BfWnxb+7nwL60
+Df3Z2BfWvyb+y2wLy3f05G+tByv9KXluKQvTc6+tLy+9KX2+i+cfWl5X+lL
k7MvLfVIX1rqkb7UXueFsy8tdUpfWuqUvtRe5+X7IOxLS/3Sl5b6pS9Nzr60
nOfSl5bjkr60HJf0peW4pC+113n5fgr70nK80peW45W+tByv9KXl+zXSl5bf
d+lLiwfpS4sH6UuLB+lLi4fF/v1r9qXl7530peXvgvSl9nounH1pcvalxY/0
peU8kb60nP/Sl5bfU+lLi58j/XvT7EuLt4WR71Mfm39vepNu6wc8zz6N/PA+
z9f2er66x/O8vpHn9Yc8f9/J8/eFfHGH5+lBvscUW3ogTw/k6YF8ba/nq3s8
z+Mlz+Mlz+MlX9zh+cJ2z/N45ftTseXxkufxkufxkq/u8TyPizyPizyPi3xh
u+fy+cLWT7621/OsnzzrJM86yRe2e571yPehSj3kq/17W+V9yfN9x15fvmdU
Xp98Ybvnx+f9YeHHDnq+fsDz/HmRH97n+dpez1f795IK5/7STxa+f7fnK7s8
z99f8smy50s7PV/c4fnCds/Tv3yPKbb0T57+ydM/efonX9vreXomT2/k6Y08
vZGnN/LFHZ4vbPc8/cj3tmJLP+Tphzz9kK/t9Tz9kKcH8vRAnh7IF3d4vrDd
8zxe+R5ZbHm85Hm85Hm85Hm85Hlc5Hlc5Hlc5AvbPc/6pyP1k6/t9TzrJ886
ybNO8oXtnmc98j2yUg/5av9eW3lf8nzfsdeX722V1ydf2P7f31++xxSb3N+7
cPP99NiOz3NR+zrk+3d7br6fXl6ffcKxg57LfZ7t+5Kv7PLcfD+91MN+4NhB
z9cPeC73SbZ1kq/s8nz5Bs/N99NL/ewrjh30fP2A5zfv91zuS1z4/t2er+zy
fPkGzyfLnpvvp8d2fJ6jFp7HS75+wPOb93t+eJ/nct/gwtMD+couz5dv8Hyy
7PnSTs/N99NjOz7PVws/dtDz9EN+837PD+/zfK1/Pz02uQ9w4ft3e57eyJdv
8Hyy7PnSTs8Xd3huvp9e6mffcnyeH9r9yffv9vz4PD8s/NhBz+W+nfb1yVd2
eX58nh/a9yVfP+C53N/S1kO+ssvz5Rs8zzr5d/PYQc/XD3h+837P5b6Rtn7y
lV2eL9/g+WTZ8+PznLDwPC7y9QOe37zf88P7PJf7Nxaex0u+ssvz5Rs8nyx7
vrTTc7kPT+HHDnqeHshv3u/54X2er/Xvrccm92MsfP9uz9MP+fINnk+WPV/a
6fniDs8lb7R1yveJ4r+lrytc+rfCzffWy+vI98rjv6V/s69PLn1a4eZ76+V9
5fvg5X3JpU8r3HxvvdRJLn2arZPcfG+91C/f+y71k0ufZusnl37M1k8u/Zit
n9x8b70cl3yPuxwXufRj9rjIpR+zx0sufZc9XnLpu+zxkpvvrRcPGyMeyKXv
sh7Ipe8qfK1/b734IZf+yvohl/7K+iGX/qpw87314k2+Z128kUtuab2RS25p
vZFLPlm4+d568TzG5fvsxT/3l9zS+ieX3NL6J1/o32cv/uX76aV+cvN99vI6
8n3z+G/pY+3rk0u/av2QSx9r35dc+lhbD7n0q7YecvN99lKnfB+81Ekufaw9
z8mlX7X1k0u/ausnN99nL8cl3+8ux0Uufaw9LnLpY+3xkku/ao+XXPpVe7zk
5vvsxYN8X7t4IJc+1noglz7WXsfIpV+1fsilX7V+yKVftX7GPLAvlfVu64Fc
1rutB3JZ77bXc3JZB7d+yGUd3Pohl3Vw64H9tqx3Ww/kst5tPZBLrmuPl1zW
we3xkss6uP17NHa87P9lvdseL7msd9vjJZd1cHtc5LIObo9rrH5+LpD1bls/
ueTMtk5yWQe3dY7Vwz5f1rttPeSyDm7fd+z12VdL7mpfZ2z/sT6T/Zisz9rf
R3JZn7U/X3JZn7XHSy55o70ukcu6rT2fyWXd1v68yGXd1npjHyjrttYbuazb
Wm/ksm5rvZHLeq71Qy7rudYPuaznWg/sV2U913ogl/Vc64Fc8mF7vOSyzmuP
l1zWee1xse+VdV57XOSyzmuPi1zWf2395LL+a+tkfyvrv7ZOcsmTbT3ksi5s
35d9pqwL2/cll/Viuz/7NHM/osLH+kz5nnj8t+SNhUveWLi5H1F5HblfUPy3
5I329cklbyzc3I+ovK/c56e8L7nkjYWb+xGVOsklb7R1kpv7EZX65X4+pX5y
yRtt/eSSN9r6ySVvtPWTm/sRleOS+/OU4yKXvNEeF7nkjfZ4ySVvtMdLLnmj
PV5ycz+i4mFjxAO55I3WA7nkjYVL3mj9kEveaP2QS95o/ZBL3li4uR9R8Sb3
zyneyCVvtN7IJW+03sglbyzc3I+oeB7jcp+i4p/7S95o/ZNL3mj9k0veaP3L
fYdK/eTmPkXldeQ+QvHfkjfa1yeXvNH6IZe80b4vueSNth5yyRttPeTmPkWl
TrnPT6mTXPJGe56TS95o6yeXvNHWT27uU1SOS+7bU46LXPJGe1zkkjfa4yWX
vNEeL7nkjfZ4yc19iooHuQ9P8UAueaP1QC55o72OkUveaP2QS95o/ZBL3mj9
jHlgXyp5o/VALnmj9UAueaO9npNL3mj9kEveaP2QS95oPbDflrzReiCXvNF6
IJe80R4vueSN9njJJW+0f4/Gjpf9v+SN9njJJW+0x0sueaM9LnLJG+1xjdXP
zwWSN9r6ySVvtHWSS95o6xyrh32+5I22HnLJG+37jr0++2rJG+3rjO0/1mey
H5O80f4+kkveaH++5JI32uMll7zRXpfIJW+05zO55I3250UueaP1xj5Q8kbr
jVzyRuuNXPJG641c8kbrh1zyRuuHXPJG64H9quSN1gO55I3WA7nkjfZ4ySVv
tMdLLnmjPS72vZI32uMil7zRHhe55I22fnLJG22d7G8lb7R1kkveaOshl7zR
vi/7TMkb7fuSS95o92efZu4zWfhYnyn3/4n/lryxcMkbCzf3mSyvI/eBjP+W
vNG+PrnkjYWb+0yW95X7N5b3JZe8sXBzn8lSJ7nkjbZOcnOfyVK/3Kex1E8u
eaOtn1zyRls/ueSNtn5yc5/Jclxy38VyXOSSN9rjIpe80R4vueSN9njJJW+0
x0tu7jNZPGyMeCCXvNF6IJe8sXDJG60fcskbrR9yyRutH3LJGws395ks3uS+
iMUbueSN1hu55I3WG7nkjYWb+0wWz2Nc7j9Z/HN/yRutf3LJG61/cskbrX+5
n2Spn9zcf7K8jtwfMv5b8kb7+uSSN1o/5JI32vcll7zR1kMueaOth9zcf7LU
KfdvLHWSS95oz3NyyRtt/eSSN9r6yc39J8txyf0Yy3GRS95oj4tc8kZ7vOSS
N9rjJZe80R4vubn/ZPEg91csHsglb7QeyCVvtNcxcskbrR9yyRutH3LJG62f
MQ/sSyVvtB7IJW+0Hsglb7TXc3LJG60fcskbrR9yyRutB/bbkjdaD+SSN1oP
5JI32uMll7zRHi+55I3279HY8bL/l7zRHi+55I32eMklb7THRS55oz2usfr5
uUDyRls/ueSNtk5yyRttnWP1sM+XvNHWQy55o33fsddnXy15o32dsf3H+kz2
Y5I32t9Hcskb7c+XXPJGe7zkkjfa6xK55I32fCaXvNH+vMglb7Te2AdK3mi9
kUveaL2RS95ovZFL3mj9kEveaP2QS95oPbBflbzReiCXvNF6IJe80R4vueSN
9njJJW+0x8W+V/JGe1zkkjfa4yKXvNHWTy55o62T/a3kjbZOcskbbT3kkjfa
92WfKXmjfV9yyRvt/uzTzP3DCx/rM+W+jvHfkjcWLnlj4eb+4eV15P7e8d+S
N9rXJ5e8sXBz//DyvnJf7vK+5JI3Fm7uH17qJJe80dZJbu4fXuqX+2+X+skl
b7T1k0veaOsnl7zR1k9u7h9ejkvup12Oi1zyRntc5JI32uMll7zRHi+55I32
eMnN/cOLh40RD+SSN1oP5JI3Fi55o/VDLnmj9UMueaP1Qy55Y+Hm/uHFm9zv
ungjl7zReiOXvNF6I5e8sXBz//DieYzLfcWLf+4veaP1Ty55o/VPLnmj9S/3
CS/1k5v7ipfXkft+x39L3mhfn1zyRuuHXPJG+77kkjfaesglb7T1kJv7ipc6
5b7cpU5yyRvteU4ueaOtn1zyRls/ubmveDkuuc92OS5yyRvtcZFL3miPl1zy
Rnu85JI32uMlN/cVLx7G7ptNLnmj9UAueaO9jpFL3mj9kEveaP2QS95o/fx3
7h9uPZBL3mg9kEveaK/n5JI3Wj/kkjdaP+SSN1o/Yx7Yb0veaD2QS95oPZBL
3miPl1zyRnu85JI32r9HY8fL/l/yRnu85JI32uMll7zRHhe55I32uMbq5+cC
yRtt/eSSN9o6ySVvtHWO1cM+X/JGWw+55I32fcden3215I32dcb2H+sz2Y9J
3mh/H8klb7Q/X3LJG+3xkkveaK9L5JI32vOZXPJG+/Mil7zRemMfKHmj9UYu
eaP1Ri55o/VGLnmj9UMueaP1Qy55o/XAflXyRuuBXPJG64Fc8kZ7vOSSN9rj
JZe80R4X+17JG+1xkUveaI+LXPJGWz+55I22Tva3kjfaOsklb7T1kEveaN+X
fabkjfZ9ySVvtPuzTzPPhSlc9v//Aajx8lw=
    "], {{
      {Texture[
        FormBox[
         GraphicsBox[
          TagBox[
           RasterBox[CompressedData["
1:eJzsvV1rI13XJvbm4yCH+Qv5FznNYU4n5AfMkMmQkzcwEwj5CzlJIISZYWYI
w/MO79N0N3033U276TbdxjaWsYUkJCEJSUiiJKqKqqKqKAlJSGJlXWvXVpU+
LcmS7b4f9826JUul+tx7XXt9Xeu/+Wf/6z/5n//zv/u7v/tX/xX/75/80//9
v/uX//Kf/h//w3/Nf/yPf/+v/pd/8ff//H/67//+f/vn/+Kf/8v/9p/9F/zh
/8nyD//Z3/3df8mvRSJKSyH1vsRSjmVEm/91WBosLZYmi71l27/dfwHLJPV3
77lO5PXfgf+qLIMdt8X8aZN66tv+TahLr2Ph9d/rP/VvGY/WCTAK2FShh+fX
8f/tqgGe89/vcI6v/47xT6/RHnriwK7hTnt0H3lGr/9e//15/u2CR2nBfIQ9
NJX/wkcde/yoXy//6x91b/v9g/WY1isOqTUvxHuWM3r999L/jXnURDxqHzeH
nvKfQZj3r/9e/x32D1pyxmKRWq/VWWrx+0r8ui8eFePfNmKB5j10heeTGuOd
A3//+u/13+/7b8CI5LMN9XvYR1bqtfmcJ/L677f6BwyCjodPoZR63YQt5+4j
xGbhAfqTXy/47+6W84J/w6PJip8DPvZLBqZMpMY6BFGWdX5BWECwqeAHiWLB
6jK9Znvc+k3ved0/2Dmzpc9GpL0y2365+7/n8vsd11J9Wf+Wn9mu/zCyTokV
Ic/THLVneb77LxuTEA/GHM321es1T876q6H0+m/LP3iGMFZ+efthyl+L4SMl
UJKz6W3BpfdFjz4UXWp4bfJGBnWiKpW8LBVDg8p9nyp9j6qDiIyRQpQZSy+K
6KLl04eyT2c1j76wfKoGlDECsvshY0xAFSegouNRMLHIm7TJGjao6hcp7+XJ
6APVfNmfz/udztFqF3FiAQKGsSxvg++81DZpNFR/h5MO1YJbaoZV6vUNRiqD
r80kpdMeOoeQxv0WdepXNOo39zj3Y0hIo+ipj/l0MpaxYe+wLZ6vv/bZnuq+
43hjniNNo0pVy6F2EFGLpelFZPUjisZ8/i/gHlo8P0t2RJ+rId12I/rZiqgb
bf/NfnPw5clshNX1LnP3YQn5OYajLcdKyWjGz3ym3uN1cuLrHE3VMWbxM9t1
vG17vriGdxoX9pbH4tESLuU9wab3RZvxhXGl1KNfrTbddx0ewwH5Y5OGM6Bn
sPAs9N/6+VW9kM6bIeNSSB8rIb0v4W+PnGHA20NvePF4AZbg70R/jNmSGsm+
gGUemcMK40SGvHE13j6Mf6P3oV/t1L6W77NF3X6enFFl6fMw9ap+O5p5jE8W
Leq3ZQlpVf+5NGRssIwsmyy9PcaVG1/bIfrzcXg045XQYLbu96fU5bvLZNCJ
n/nydx4Nph4/q23P6DGix2NA6bG9LL5fo3I9S/lmlf748ZmuS0WqeQqXLF63
2QOFS899H//W5Jh49OCxtnyusem578e6c4MdkTFC+lLVejoQ+VBexZk3LJ/Z
xrjm7QtWSEWWshOx3RJRnaXqRlTkNc8bxpLjCx+/4NGbPMSlN9kufSwZdGf0
6N7wqOZ6fC0eNX2H9cFmvYVngev9WlOY9LFg0E2zQ7meRUao17OJzBhPhvzq
TfvUHvB6s9+hetikolenrHVN99YZ49wl21ZFagYZylnfKWt/JyPKUn/ajO2Z
NLYleDWjLmMMtrFS36clirfXeKf1UJj6XL+6G/bhy3duv0s1p8N2YEjhrE/R
LKJFnab3Gc2PO5q11ny/bM+tE/5+3N1wPsu/3XzOSvTxgvheekv72LbvNec1
0+uDx8wdO3Uei8fEs4zkuSfro4evd4vMLCVL9wX3YirebP1MkmMZbpcuynW6
apr09tcV/by7pm4YkLdlPf20YvHarrNy72AfQR9pO+7Yx30O+yp9zKfEo99J
Ah6XwJGMoezld6VY38fyNsadTFfhTsVVY2VXTD2efbTJZuLXgs+4ZNO7AgQ+
PZc+lR0qOT2KJl0KJm22aZZ1gprjwKSGb9Nl26WvZZPeZ5v0nvcDfCrZIU1m
ybWwZUVNvl/VwYClL37BCs+XEt+PYmhT1s3QnfWVMehMXm+tL5R1vsW2xbI+
CtmOa/G51fjcDOoN81T1L6m/1hbQYtNsrV3jxDp/l2fik8/3oxi0qDYcKOFr
6Y4e0uEvwx45powi+Nq8Ex/neH656bAT25p6LHms44zUOmfb8X3qOVUqFM6p
Xr0k163E2JZsizlt8njuBE/5HBbvT84MZS2blzVuRFkzorN6KIK1IzAKtl3d
C2Xd240xa9/jPrVNYISRXA98TdEkItfn5zY7HI8eOv9tNtFgqs7j0GP3J4/7
/Topi782oD/Y/nlfUrjzJrZ9PvBnd10em3vgziY5LR6t8edBGJ/Ep5fv0h95
g6VDZ+UWXbcMHr+eYFByjg7ZQ4M6bA99L7XovNqly5Yv4x/+vJaf3tajcGqw
TeGw/rapyrqhGFQZjywq+CWxhe4Zi+7tr9SKbskeFQVjWlGGf2vO9wMdEjIO
eaMKGf0staM7agS8buX3ai294X7yen4weCweqetwxw0+zwzl2barCLYyJsk6
dLPv588m41Rc8HeQCeNR5Ndo2XaFjYFxg9rXwazD0hKbA+JPqjK+RjNdPauz
erTdz/ayVaTLi79S5uYDVSsXZJklsuw65SsZurh4R+ff/0LNxtXCcaexJP7w
w8QZRuI/hF8F8+17Q2EPdJIWvTZGzAC+mvcpwd/QV9+b+2P+KTBp1/sxZp0z
m57OPkqfA7AD9jBwEFgCTAc+DqeH7Rvrgct2RL9aoWDEsp9kn/uKeDz8cXjO
Wn8jto8xsbyfYzyvp8OjNfjEmPTXgvLpXbdtynUtKpo23Rkej32fMh2fSqZJ
OaNL36psW+UtHvOujHsVT1LzJD33zUGeyt4FFb1Ltn3OWa4o71co57FtJHbR
mWBS2ftF0bTO+FUXO2jVr4RnqGNMWh7QjbPN9tFsLzwK2Q5rUcH9xed/w+de
oUJQE3zdbp/9ueR3w6PpyKC+Bzxa1mN6POlx5MhzdHm9Y49K1OT1UCO85XUR
48ygxbi1HO/yY1vJjvftz/c34mNavTwV8mf069c/0o+Lf6DL2/dUKv+ibq9I
ev0ynfHcYFzrGfcUeMsx0PUCuwa654+SS1dNS80/zNciYsQO/ZXnLebvLnFq
4FUnfP5ntPPYYzyiR9hH+wjyCeDz1DYN/tZriVP5LYF/wDzEJ9O4pzGlz+eC
/BqsP7CuuO6EYgvDNj7OOmG932MdVrw5ap7DFsGYhi+PJW912S7yqNdn7LCv
GDcYU9wsNYMKVb0G34s2VR3GK9uj+15AN4ayj26MxVyfaNagCuNR1v5BWfeS
7h0W+1xwCP65W37NmIgb/aSSxJLAPrFL/tUOgnjHJMGjcD7G9rWPsFbyJUev
FWUpY/3ka/ghknN/UD285v12nmSuPKcoPFoct5ifmK+4rzoX6STH5v26Q6Un
dtcJLttI7SU/27acTWUDwSdw13N5LHs834MDfC3Yj03RsElN745K1jWVe5d0
nnlLn7/8ezr/9Z/ox89/oB+Zv9Jl+Qt9O/+PdH6Bz/5CP87/Qr8u2fa6fkfN
+iWZ3Sx1rRrdGy59rjDeZE16X2yzTdTk+VZlW8de8HHg+79mLYVND2ASYt3m
A3l5j5Vj2VR95MiOH8ajdc/qJeYf7COID2Edguf1oxls8bf6SudNLSUr66iA
1+EmDYYmdWyDqrAteh5dtjy2uTy6aZhk+B5N2A4djj1qe84z2kehWlvlHXn9
WLYZjx0azLqyZoQPo+CyfWN/Yz38nfGE8cU+F6l6Vd4W+RDKLl28XwE5/PuC
+5Ntiwu2iX7EOPRVsEi9fuX16B2FE1RqHTE+sYRH6ec243Wsii2sy/VaFPiP
sQ4ZS66HI/dDXcMXse2a4l/88/vt1uHRJoFfaXCgf+OYMpXn3KJ97Loh67TB
EbA1moaM1ci9QaWfS16/RWUzQyXzgjHqgtdzGZ4rFfKiOttVXRryubphj5pO
j7KdHp3XLfpUsulj0ab3JZ/eFaE3mvzeobf8/h3bSW+KfgpjfDWHgU14D0zK
WQqjBJ/S2yaY9KUWML6tym2vQ/5ov3t3Kpnw/dklfvS7Y8+ywF4CFmG9v/na
fMkDTnxGSf7XIKhTyPoZ+i7J7dL+AZXv3I1qZPLcvm1Z9EfFp6+MTec1h/I9
73nxaAGTsB5zKBipNWM4qVOR7RzYNcg9gEAXF9wrtpk6ZESh4BBsyN7Smgu+
+ArbPrdWkrcgdpLzUzCuFlzHfq8j5wAwHg2Hm+JLgdhI6jk+fNyFXB/qUt5V
uJpzv7OtXX72cfsUMpqP+Ye3hS7XfocxPWfdTiDn3V+II6VtpN3HnPbZPO58
dI6oyhP1R77UXWANDP+CztVFnOetxpcU3gCH3qzBFcg7xLVLAS3iU7wPjU14
zes5vn4/Ws7becrxGtKR8W098rof9wwHfZ0PuWV8blk//G44hfUccrAvWiFV
nPQYdchzSos2/4zthqCxYV86xrEptxdrJZV7O5yElO/ymBx68/v17HgkmOTL
eH3DmFT3gvl9QM5BzvnB8p3yLO0oS9agxzgUyv2DFKxoITcWuXDN8FbsKuWj
O6MMS867p6x3w/aSymWYnWS82zQebasb4ucY1iUPaz8s9CRHHecOfEXOuop/
P/84PqUoO+PU+XXHl9CtUqeeideI6e+SGrVNvwUGwc6DzWQcIV8pLahpneMP
2z9v5vih7ZyHY0Gwb1AnAl808ufuump/b1a29RO7SeMc/Hoao9Zg3Hu2zb7W
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
B4fbGAk3M3wSwCJlY3jyGfx09eCazGFe6nAxvsCHd2t8oevaR2q7t7SfPtJr
0VTPWvjw/sT9W7cJeuae0id/TO67wSzth1DPbcR4injD8a9BzV/41KKw9Yzj
wyXbzMd+HpcyXUM4hlDj9Imx6E3MlTzHkBQW6Zxy4BRqYGDHwFe2fAzoNORb
I2ake1u81TVTy/nicQ0TcvlQt/u15ov9tSkf/Z3UVqEvnC819ttz8C3hFzP6
BeEiq/l3POfX+RqW53u6P5ia1wMeE1Go48QeJfM9ySUV3qm+4qjEfUFsC3Vf
/YPzxG3GvCpZ3SzdXL+n8/P/ROc//iI1RUcZC4zDwLd3f/2/yEbd0obtcO7u
XK8HFAxdumm59KsJbqpn5q9bi0e2jLVvPJZGa+sB09ii/FmI3dSCK+EazTqX
jBsV6o2qFEz3yasLhOdb+d5uJa8NGGMOVN+jovdT9o/vtf8C+XyobUI+OTjF
sR1so7p5SdGgLjw/R9E9bB8t9tXZfx+qbgeS2HMi0x4l9uHDMpy0dth+sw9r
HxlFp4qlaR1zajvJU/66ma6/1td2jH0jPmGxjtk3RrW/THncqFxz6Me0DzqQ
a7PYpr9uWYwBrsRu7ruB+DfmHA0xJgGr4JsDPqAXAnADNVLo5b0rhyxiQNed
SH67UMcktbXWCscEOJCypi92G2p3N9X74nx0Ttpq/WqYuhfIJURdvRnX7e45
l9O5tCvz2RXevBHbUF2rTtVmiTyvRp7fINNtkeMxjond1KYhr9UGiFf1m/y+
KX+PBm3GujaFIb5vy9/4zujcSr+SQvUbNa0M20QZsWuX7aL9rmP18+GwS/d3
X+nu9ov0QilagWCpNwqoarlUNh26YNwRG7bD0groez3miy8Gca32gbVsp5K8
6kGRMfw1umI53qveI78AMR3wu4FTJ+lLvsvcD8T31h1kxd5BrtyQ8Q29KIA9
8/2CQ4/33ZScV70uMqnHv0M+NrYDr3jTueExU9v4zA7Va9A5KhZxCCah1xtf
i3lORUPLD/Xa/kGWl1P7Ru4A6qcmphL+G58jh30Wv3f9Is+ZDl/nNY8xxmDr
ktygRONRW207MlYE/EgQ9f16oZTo3/lSv/Ob9+icWSl/6zHjgZGMcdTcnrae
OpR6imjakB4oy3MKOWjXTVviveA/Q43GWS32j82xSGET8Oi8afDcNsUn97mq
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
OSxLon+RP5D0GFr016GGcrWv5uMEuQa/ijU6LzWobHvCg1BxAuFEA4eenEvK
7zbPHYv1I+Jd2O68ZlG+61A7CKQXoNRVeVWJwQTggGQdgvmEng0O5m1Yldoe
PQcXdMOoo3L14/k3iefqbK4z4rm9lMePbUdxTEdzPqHmEf4DxMLdUU18Oena
fRUDTPpc4xlO5vvQfZZsiR2pWoNeXEeguc7UnOtFAf1RUfcENa7vS+jL7Tw+
lqQx6Xf23cXcDLCZz6tlyrS+s3ykTPsj3bQSybQ/UdZAjfI36vlZmrDd6oRF
qtmXVLZ+CS9u2VRSZckydt20PjG2faKrxh/8+pHxLEOmy+t0vy1zMfJZ3496
89if6ruQ9FmQv5fi4vjcC8tU4+N1vSyNRq3kt6mYO8aeExSp0P0u/Lwmb4vt
8TvDuWfsrCvbeylWj/wD31F8eOiDO+8Ty9/hXMOoR1G/p2r/pyr+DuwKGOvg
R8Z9yrS/UNOuyviNdsr1fXpdve37P4d9FMk1+KzjoOcOj12eIu4ZqPE1OdRv
rfneQ7pqWhKDgU4Dh+ZNx6OK5VLT3cT1rnVn6nPWq+Arn+dBznMjkxzLwG9S
lTHoS8UVP5u2f97lrXn96TyGFccBVC+JkJqe4r8Dnx3sqZ5r0HCoe7Kq+6Fz
poFBPZ6nDftK+qrkWY+gLwt0OuYj+AHB528FBfKisuq3ItzajF/DptL9cW7M
XI9MFufrPG9Gfzbndbbn9fir/htH6Yjl5zDTPESp+mjeP3KCUB8wHFpU77ZF
b+B79Go3Il/qUO96Pt11Vb+Nb3XN+7Oak3IwJv2OuDTP8wBGW3Tby1LW/i55
cogDIYcb9a/gYAKPHPw9Kv/OIWeEnIZr2T6pj13k2MjaP4SrsOpfUThRteqo
rwvwfFbypHabi4jRw/ek8is2rfPDmA/kZ8ynZwu3DX47W9tfMtn/pjxh9C+D
T2K51g/xMPDEIi4jXH7u95i7e9/8updRy/PnwSN1LZaRfUR8cTkefui5xL9n
/Ydzmg4OjW3p/GEVr7CshtQAdYJQ6nDAAb09N2LVpwRu8tCtxr6ARX+Bln7U
Iafvi2+uZIOXwaOPvKZ/E/MIvC04YvtouWiHwvGzzocMP6Xi9/NT16S+w5wG
V0s25n6BXkFer+KlUnXlsGF0vwB8p+KhCZfxjNIY88CcYjyZLthJQeqc0r+1
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
xT6Ql0Pb4fv+zkn1LgrEdhjsaBdPZ4/lK3qMqLXZbKq4IINxXepWK51zqjcv
yQt0TcQudQS7Hu/w3yM+NpxFkmuXMTw6q7nS3w1c0a/5dX9iiXHpY6VNGbap
B7N9fEK6h1Z67JnzOBJ8T85a2wbiSn1SLuW/g95V8SZlHyEXSGo7RA/7qWMq
vpP1PCqecGQDB81BYcOxAzkOeLRxjvCNrfaE2F8OxaOafzm3FcVeZDyHXvDG
5YU87dVYtZKEm3W9Djg2HqnYxrH01iF6Tq/DVR8shUeb6lyW84+PpWtduQ9G
83ZD7dEh9sXxZYL4I59fNGxIzWCp+oOGPK8SG1nFiPxJPe5Ddgyu/cfwRMHG
9ak/tRmP0AvWprLTYkzq0JeKS++Lr/0l/vQiuSuO1D7XXO+Razhf+ueVWNcn
tTSbdKHiEEVf9EpcM4o4CdZtwAjgGnx4qkZC+6NUjFd4w6bb5s4uXNGeHL/N
Nkg00Tbc4fpqPzxK7BjJm5d7cCECOxH3DTnh8OFJ3qL1lQ6tJVZxtePaR0kN
2ak5B1bHTDRt81peY7CVsqf1uWju+FOdgycxoXbthtb7t5GXYqypwT6+TFZ8
gAqjJ/x8hqMm2VGRir0fdJl/SyVDc04lYxD+YMQtZwsYv+vxN6x/Dr4elXse
TXrUCovUifLUCJrUDruUMx16X/LpbdFP+IKeW2++yskxCf2tCpYvPexXc1Ef
HqvwkyE/ADUu3Xk/1H1zlC3BpEZ4rThGvSsyrSw1jRsajBOur2G0rY/f7sfK
s87HccCRemjOAGQxn0HXwC7jgC12jsq1XX9Pxqm6EHUvM+JfPHTtenw86j6j
fRStOe7hPSfgE9q33gH4B65uy1iXB6PWQTMyDn5eu8l6/kJrUKOKdUnX+fd0
mX1DmeIf1AKnKq+7VHxY5cesq1uFP3i6po/r+vWprlk6Te3aeOpRN2Jc8k26
NTx6V1J66o304HvFo78JkTwHJ66ZtRkH0OtB9Xvo9O/jOM5DPgjNhxfnhQI3
5pyMu41FzAlgGXIcdF2FxFY6n6nWvpjn0fpu4whxDFtxxPL+YYt4o/X1I+uv
c/Gz0dw+Cub9C5G/kebbxufVlV4V6Tm+eD2Is9WED1DXxe9vj/y540eRjDHV
93T1u1X74bHiSr5hFGziPQ2XXo8tep3oU5LT4Srenn6Bsp2vVO1ekT0sCxei
ijkqnwLGEPwPiDOCXyvJ3U/nc6fXn5v9btMHfMSrsjtvgz2IGIN8yhhdOm/2
6F2cvwBu1Te6x8QrHv1tSPy8v1RdqjgBDafIVzIEG6C3VX7p8jjchUdtd14B
4N/dMg9pnIdXtn+SYd+LjpV+QzvVQuoen3pdqPW+LfYceEzR/w6i6lAf0t2u
1NQuY0raXwd/G/xuEKkdmlTFBkN++XpsDqV/GXxz64+/Kw/7Gt3xKDxa1Ucv
EY+epiZWrbMCt0rTkeaRXxat05d/99D9178Plt6n+XNd4Q3G++nMi2uEfOHC
KjrnlK1+lR5k8CH0J4rbR/nLGa9mJo2mBjn82YTHfM/MUq38k9rNa8n9V/n/
OXKtAvl2WeqWwEk+mfekWDd/l3XAvuPTp8Svnvh+q25In6r+HIf+GuPQ24IT
c9i9xo/+pkSvQdhWqthqjM3ivqVY30Ovaj/cJOacVz6mx+URK3HFptC52PO8
bNbTRbZf4AfUcaSR7kPz4D4tyV1AjAY5d9g//F/IFdA9bsENe2f9iHPPdX3J
+jkYjGuCM6pPXvLd+vojpU92sQ+xDfDq2H6ep7ePNOY/VWxpXzzSuLGP/lS9
+CK/ybq6EdfVJrWd41Gb+sOm+JY99FhBzSvFwt+bRnHp+Jq31InFlrpasfPi
Glq819Jneww1OqN+S/Io0t+hjhYCv2y/35XvUfswhp92agp2otYMHEbTmX4u
u8xRhYmzef5KQKs4GVDim173vDfzqUZs+4NzpBf7pPvCH+ZLv72ybdNZzU76
HKE+5RWD/nYlxqM7w1uIT8J2ASZpPZ62X1Anju8Vr8ChvGi+9O3Bvmr+lWAI
8A++BmCfytezSdWe1ynw6jvMLUv4SmH7jOM+YeGkPucxXbTDvlLG+i42jcLc
dXoriHPJF48z3KsedlV0Paxa0x7P33OS/LotuSSC+cKj2zrqdWyWZTxK68wj
HYP1cbX4c8N99GS8YE6U164nQuofmHuZltGB+/DtSpyLGsR1xPvuw1fPe6Iw
UmpkGRellxMLalpncv+Xn7Uf+wsXewEuzqeAHMbOkpOjBs/liuPRRSugP0qe
ih284tCrzPHIppsO1ivJGBvOXLIGTV7Hg9v72zyvW8T9LnYHBDkCKnai46fa
j7GvftI9KtetZQOZH+PBw7x1qDvV/jPkUcNPV/Eu43qfsxXfoMZa1KEib1z5
y9f5YlL3Zqu+0H2Y3I37Qc65ylvQ3x0HQ46NR4rXpjmvsU3kOPtf0IM77deO
9WFEuu4aayKPbZZuYJM3fGzedSj6WHGlrvvemfuTlT979feDlXiTvrbN57ac
p9b3DqxJYPvL6mSlVmoyPc5z0lx3GvMxJtQzWOUiWlwXaN+ly88noKLl01nV
oTc5a74GfpONuYGyXYVHz60LX+X5RcaGqod+V/Qk7/9d0eZXi8ePRecNi646
FSq7WQrHbcltHc3zwhRfHXpUalsKWIX87aS+aFk3H6ozHMUJNtmtp7n0/47X
seB9SPPtzX13yJ+wzuJaoG9SLws7CteifHne2nMerfB767kfzO3KguznW7yO
XtYNKldX/w0b8Rg5TMfGIyW28Mb0mrfUqV0Ljw6t1UePER2z37bPMOHYO+r1
Jc8RerxnsD7vr657BtJn2RVfckXyVNZxbYXCtZP+DOMBPmTFVbVaR+ePVu9F
4D3WbvbIdjSP3WPuyYZzmPbi3Ptt+4dusKnmWfS9HseDgDnAn1zq/StX3ass
i/Txs2J72Z+L5LkUVQ/7dzyeypaOGS1y9QxjTMrH+lz5zM5FF6u+59+FWwj6
Wfnh0jnmi5w/6+NSsV+GdVHoVrfMgWR7+Ot0jzz4x3B+K3x6qbpUT/dlYD2D
nA78DueOV0v6c/Tm56xqd9XaT+psY/45+BqBa7h+9NLUcSvvAS4M2EuIJ+F8
H4Mnp8GjRYEeAh8cYhxJfehyrP8Uxw4SjtSj79tTvHi4prXPKX1daZ7TZT9h
uBJbhP2mxtmZ+I4fOhf0P/H8h/qix/uebv8+CnaNux4iDvWRZzTR+R6r29wZ
foJDK/w/Pr3yAb3KigCDZLy49JYx6W3eYvvIERvpI9tIn4o9epdXvt23LF8q
FtvepvT6awW6r9KS3ljAFF/mpKqBvZf5gfoI7VNzUv2BpDY2zCxx+vjCCR6C
726679pYxduBJfdzX92afD7GEBULW/699rU4kiMuNav2N8o0P4n9c28n+8Ia
GP7GaFqbH7fLa2LkzwOvVB+ibbpa25CH64jR4Lj1R9slidWPwgZN+m3JAxDb
cbbcb31RZiLpe7H0/cyjycynxdjQCfGIz7fXyW/Yt1rbrPJM+fHY9Re2XcYj
cEzBF5y1rna/r7PegdxIi9KPjK1jAjVZ6D/0mGOM+blPB+l1kFpTGkFAX6ve
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
tXXTapzMjtILY7EX73jQpo55u2YNcyzxKLDKMQ9rcs1FK6CPlVSNx2tN6/MJ
bNLnPoffXWI8gt/uj0pADW8/HQG/9mTQmn82mxlUML7R+d0/0KdP/1rwqVFF
/ag//w3iP6izHe2c55DEEVT9zw+qBrqOXu1Xc7LM5vWsgeJJeZS+2TWG4Atn
BfyGwL0ZreNWTuR3xCPEjgap/K3Z0t/rxY79WMfozeSQ2b4js5Pdsk0onE7w
NcNeVn69xe9Pdu95/VWq/qBmkKHjcgYmouuO0aOi5Ud0VveEy/KVc/uFSPYV
j44mkvtg05dqQEa46xyxqB3cUbH7I5VTa0uOuNQAWZ/59bN6b3yii9Jb+nz+
7+j9p/+HPv38d5Rrn9H+vYVUn1ul8yPRLabEt7SeNAUXkO+Q9tdt02GLf6t6
dsx7m20+xeHfkrpO5BDivZLmXGw3T3eNT2TZeYlZpb/zvBYN5r/R0j6ZznqM
TDfwgkeTiKy+T/3Jtr4668SX612XP4DvrFGVbcsfMe/8Q/oePYtya57Xuue5
uV/d4bVH28Vo5RgnDDoO9q6XThDwPPLpYwmc2+arPfQqf15B3DOvcnLelwLK
WbvV4yPmD6zJtL5Q0b4WvgfUCW2s+TE/U8n+ScNBk3rGHf388Rfx89Wr6/i1
F3HCG2uuniDmddBx8TSmqV4DOfsb1XvL6+NI/IqIkYl8+ffxa/w+JV8+/RuJ
o11d/FViZA/p3VPlEv7+wjjWNyjqL8Y+YMd2B0Xh4MYzrYm9uy4+4kmv1GZV
5zAEEjuEHbT/uaTx6LjPyrWrJ33+4Be/7oS8XlScya820av86SXmH/pYCam5
k99O+Ueueuf0tVamD0WD50uDLo0r4fe56l7z+5s5Z7jK01vmCo+5PllPNGuX
dM74dJf5IFwzWm+AwwhYBOwDzoEvCJ9JTGG26PMDRiG/ADkJHeuWlmM6rcZV
zLGnY2XbxBE7KXf/lX43/9pLkvHYItNppT4zZSzMYg5Ab6Q4qlZjPgENgwZ1
mhnVc1A+c6QvZCvM7Hh8xfOheyqeyj6yEds5ca/Dku2reqJXLHqVvwXR9Uj8
/lszZJ3x8BwZsg657F7RH1WD7SqL3hdN+lDp0sdqmz/r0vtKj362eH082aUX
T9xXe2IKL9j93Sf6+OVf05fL/0j37a+CNXem4g1CXkMz0r3S0z0UNFd4l2rG
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
RAhcO8wv8DkOjf8HkUY89g==
            "], {{0, 138}, {420, 0}}, {0, 255}, ColorFunction -> RGBColor], 
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> False], Selectable -> 
           False], DefaultBaseStyle -> "ImageGraphics", 
          ImageSizeRaw -> {420, 138}, PlotRange -> {{0, 420}, {0, 138}}], 
         TraditionalForm]], EdgeForm[None], GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
WZo/vJiwTkxzkg8S1jLp+n0vYc2V5hXvJPxZmg+8n7DmSnOMnvB7fJce9EsT
1oxpfjIWrpXn+9jXuXPii9w5pHPpE+mEc/xS7jz4Jqd11znyubTYuf/Xdp/m
xtfk/k96wl/yrCX5Jndefpx7j5W581Of+13uPPwwYS2W7jNrcu/1fu5cXJH7
LPWrc+P63FW5fQv4rMl5vjcen7Q+TTqa85PW3mT4rQ8mrF+S/uiypDU8EeOL
y/xd9Vt/lIu33cO8+EP4CHg3fEC24TzfS08IrFPcqnu7no2Md9Vcim1eZvuR
vO7SQp/ndzLeOLC+8B/9dordlX6c9yxiH0bk+Z6cSPp9dD9PJq2V0rMglbRW
Stq9wqS1Urq3f6E4Yd7nAO+zHD4GPghvgM+FyxVLQbtE9xTFN9CawbUVS0G7
DK6l2AvtK1xTsQW083QsFaNAOx8Oqzl2VTGGEf0K2klwFfr3aYfDO6s6FqYc
3gR/CR8rcT/9S7Tq8G+MvwUfCv8NL4XL4I3wm/Ah0sXDexS7nedn2Y8Ja/B0
f/4+YR2g7udnJa0jSvLbNUlaF5SAT0laU1QIn5y03qkK3BB+ES6AmyatrZJe
aZjm4PBSaRsZ/xQuZ5tLktZ9BfB5Seu40tWtu5U2LAWfmrS2qgi+IGlNVxa+
IrCmtjp8adLasBC+MGltWBncKGlNVDHcv9Cf+6Q0cknrnaox/kXCmkY9s75N
WDOpZ9aXCese9TytHli7vx7+KWGto55NaxPWN+qZtQpun+fn2hsJa0G1xvk6
YS2lntG/JqzV1HP/jKT1V1XZh2aBdbol8C8J6yr1fG+c9D25lPG/EtaoSxt4
RGCd+hbdewt9vdzI9/qD3/dixRkojqrQ+3OWnvcJ61S1lmmWdizkc7xnc/hy
+Hn4yrRjLV+AW6Ydz/gS3CntmMr39HulHfP4jI552rGQz8KXpR1TuRi+Ju14
PcXt3ZZ2LOS7jHdIO9byHfjqtGMzl8Lt0467fFvnUuTYv5fhUfQdGH9dsZBs
cyP8JuM3px1v+BZ8VdoxoUvgLmnHhL4P90s75vEzeEDaMY+fw3fDXeEv4Km8
fx/4U2nV07bH7mC8b9oxm5/CPdLeh4/gXmnHb34M9047dvIT+Az2+THZ7OD7
037PL+EWacexvghfHDnGbzk8Mp2LV4UXMjYE/p59GMX4nfBXjH+atk14J3xj
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
/LC0rfDr8FjpNeHn4WHVnHNBuRderWoblWxVsqF2YZttjK+o6rEvcjbV5ow/
TX9vNWtC34EnST8KPwc/UM162LfhR6pZx/ouPLmataWy0T1azVrXt+CJcBP4
Mbi7dKXwC/BwaXYT/l4Pwvv0f/Ax9P9Jwwsfq4QBbHMjfAKc1nwAPhs+KN0u
fHw154+6Bj5S35XWAq5Lv0v6Vrge/W5pV+H69DfzPq/BY6TfhV+FR+sz4SXw
iGq2y32asx+eoHsIfVvGN2f9WfP5LW5k/BV4FOP79X3g4+jPYnyqbJVwU3ga
3LOaNZuT4W7VrM2cAfeuZm3mTLiP9heeBfeFn+d3Xwq3oG/P+LPw0Go+B56B
h1SzlnMePAheRzsDTtGvpDWEi+i/o50MF1ZzTg/le1nF774GPh1O0P9EOxNO
06+lNYaTOg60E+EC+iv5rEXwPfCTtALZQHmfteXOV3Mfx6YZ2yyA79J5DU+H
e8GN4AlwR/g0eCLcSZ8PPwJ3hi+HF8J3w1fAT8GDZf+Dn4AHygYDPw4PgJ/m
uOxQzKliH7R/jB9Ov5hWDf6JfdsON4fr0F/Ea+fC/eEL4TlwP3iHfg/4CPoD
OqZwA/ojdS+CW8NH6XkHXwd/lXRugQUKZqNdrXh/+j2MX6Y5CbwbvhR+gWt4
L9wMfo3xL5POUTAf/jrpfAIL4V/gU7Q9/A1cT7Fs8Dr4JHgxvFLPmEqORfsH
Pl/xcYx/lnSs3Dz4k6Tj6R6Hlyedi+BJ+NOk4+CegH+CT1YcHPw7fKZi2eDN
cBPFvsEXFDuu7kJpcnLPO33ut3ouwodxX1oBR3Bt+Mek52N14DEp+5LkUxqu
z4b/ot9Ou4ixmtzbTggdT3go2//Na89TjB7//xd8ruIB4U3wGYq5gy+hjYZX
0F9GGwuvpL+ryHPCJ7jfXsrfY+Dv6H/mtQ3h5+FV8DGKS4VXw8cqlhAupt0A
L6OvTesDv0V/Du0BeDn92bT74S/om9KGwp/TF9Guh99VbKvmqfCb9CGtC/wN
482SjreN+Y7H67nP+dOG86eB5ifwzbJzs/0wtv+S/hmtsTVOH2stA1/CNrW0
7oCvhGtrXaP7tOzcvGY4r/1Kx5U2Up9Lfz5tBPw1fUMdI/gjPXc0F4Q/pD+V
djf8Mf3FtFHwt/Q/sM8NFIMJfw8fp9hG+CDcAn4dnsJ3O16vlY+MvwfCH9Af
rTkr/B79mZqnwp/RN9a8Fv6U/ljNreH36U+jDYY/oa9HuwN+h/4IWl/4bfoj
af10nOk/KrGNaI9ybaWtz/xRdrzI2rLV8LHFngNfzj6eUuz587VaDxR7TdFU
8abFXgucpfOv2GuBJvBxxZ6HXwE3KPb8/Er4OdrFWi/Ivw5fpDWF5gHwOVrL
yH8Pn601Dlyr2GuWsxlbQGuqdVCh7wW6J6yHn4cv0XpE/nv4Qq194GXKo6G5
PVyv2HP+i4o8J9A1+IJ8NWnr7iLF96Wtr6uAx6etrzsEfjhtDV4Mj0g7t1t1
+MG0c8eVK34wbc1eCD8Ej9DaP+N4gkmcY105x0ZW91xLc64hRb72n2cf6hZ7
rXQhY02KvR65Gf475XnUy1ov5K79R1K+F2hdcxPbDE8751sZn/UWf7di/G/e
8x34Onib9A1FPg8/ku+0yPeENYW+rnTd7YC/LfL1u1M6kiKfn1ulkyjyefuh
dBhFvt4/kLajyPeB9+VrL/J99fPc79JY5z+8pMj3nBWFvrb1e/2q+XaR740r
pcko8r1luXy/Rb6XfgG/WOR76Xfw23Br+B/4vSI/FzbAbxT5XrcWfg2+Ct4C
vwo3hzfDr8BXwr9rPQNfAW+C34Sv1b0UHq+1h64XraHgI3W9FPoerWfEu/DI
ItvlXpNGAT5R16B0CfAJuu7g94v8bNoIz4Ib6V4Ez4FP1z1Emg/4NN1n4Lm5
Y/WNfE9p58fL8jsOTjvfYDV4EDxQmlLZPtPOo6j8i80VZwbfy7nQBm4Ej4Xr
c/3eLJ20fNxp5y6bBpelnY9xPFwdzsDj4FrS/0ufDR/CeMz4RPjaXG5J+Ufq
wLXhSYyfmXZOxXnw4WnncpwMH5F2rshH4UPTzuv4CFw37VyRU+CuaecMLOC7
nJF2rsgnGD8HPgt+Ej4x7fxsM+VnSTvf2iz46LS/71T579LO1TYbPiXtPGzK
B3kSfDw8Q/eutHOyTZd/hP+7UOMcn+P4vt2lWZf/Lu1cggvks0s7n6TyaDZO
O6fl44yfn3Zuyafgs9PONzgfPj3tYz4XPi/t/IQLZYtIO79iId+xe9r5EqvA
ndPOkZgPP5N2jkfF6C1OO8ej4pGfTTuvo+IHp8CT4Vrwo2nre2vC89LW9ypu
4sm0YxkU3zcfnlfZsTOT046RrwHfk3YeywR8b9r5LZPwjLR1vLXh+9LOaZmC
h6adNzIDD0w7l2MpPCTtHJVpeGbaeuDDFLuRdmz+ofCstDXGh8N3pJ03shi+
Ar5Btk0dV9oFssfKT5V2HshKiv1JOw/kQfm10s4DWZnxW9LOA6nkE4XFfrbW
17XF+Pmy8ercSTtX7T75N9LWPNdh+/5p558skU8j9/vqPOmTdj7MIsYvSjuH
5379trRm8H/0F6btH9T5UK6YF2mv+X2rFHtuUI99KC72HOmoIl+Tuja7MnYZ
XB3uBjfT6+Huxb7OIrgXfDkcwD3gC+EkfBt8UYnzrHaCr4YPgfvCLeFD4Tvg
a+GacH/4GrgG3A++Ag7hnvCNcF34bvgmuB48GL4BPgK+q9j3ifrwPfB5tNV8
lz5aLzOeYLwDY31lj9a1DJ8PV4Pba3u4KtwW/ovX/Ub7l5/pT913dQ/U86OS
c29tqORr7lS2H8P23eBT4NHKwaiYCvh+uCvcEB4FDyrx7zsNvqvE58x0uAN8
LPxAsX8b/aZT4Vvh4+Bhxf6NdU8YCfeBz9A9Tdr43H7KvnMuf6+i78333UIb
Ah+ieYfm6HAv5auQ3xFuCH9P6wWX0q+m9YRL6FfResDF9HXY/hX4aj0TpNeH
2+o5Cb8D36DnieJY4Ov1rJO+HL5Fz0/4I7i97E+02+Gqes5I6w+303MJfhNu
reeVYmng6+D68DK4leZQ8Er4dnglrTtcVORnvebS+fT5bDMFPlnP9twc+xrO
7X/5exx8NP0+2nj4GPodtIfgI+i/pHWElfhwOe02+CDPr6/gTnAl+q9pneHK
9J/Q2urcYJuP4TbwXumZ4G5wIf1HtJvhPYx/DneA98NfwLfCB6SJgNvB++A/
Kjlfya+a6+S4WPOD3Pn2meZ8RZ4Dp7S+K/I8OUu/tcjz4ST9tiLPt8vodxZ5
Ph/Q/1XkeXJac7Aiz8MzRZ7DaL60nX04nvNqt35rjuWxJY7tulzPF3in5rqK
JyrynDzW78j4Xv1GjJ8A79ExhxvILwRfBTeE92leB+9KOc5IPrvdRV5fRPR/
FHltlaA/WOT1Tm36A0VeZ9Wi31/kdVZNegkLta45DK5U7LXM4XB5sX0Np8JB
sX0HjeCw2L6D0+BqxfZBHAfvLfK6o4L+vyKv3WrQ7yrymiikTxXbH3ECnCi2
z6IBnC62T+FEOFls/8XxRb5PbKP9krsudR9Zn/s99bsqH82W3P/p2tU6uoh+
sbRTWh/Cs1P+/y25+88O2Rn1vvQTU87vN6q6t1mfu/Zl45Vt8JFC74M+/+fc
vujv73P3r825ca211+Xec0PuHNPflxU7R5lsxZfm7p+XFPu81HfQmv9U/v6c
/rYij/2RO1f1Hltz52oTfuNCfuuWbHsWXARfCzeFi+HWugfw+pvYdjf7fBLj
/+raL/b76LxXfsNTGP+Pvo2OU7HX+EfyulMZ3697CGNnwlV4zxbF/n5/5r6v
4sgUQ6Z4Qz3rSuhvYJvT4IP8/63FzuOtc/IK+Ay4AG4ON4IP6D6me17aea0V
z6uYO/kz94Qcg7Tjv6QxWJRxfIry4czPOG5FuXoWZhyfonw772ecv105cFZm
nEtfeW/mZRyfohw+j2ccd6OcOXMyjsdRHp4ZGcfpKBfQOxnnmVfumrczzi2v
XEDfZVyzQPlz3so4L73y+Tyfca5g5aVZnHF+YOV1WZZxfnvl7Xkz4/z2yvOz
IuPc9cpZsS7jmgjKmbM84zzzymuxWfE8cBn9r5Fjbw5wTj6YcV0D5bEZkXEd
BOWf+SLjPPbKqfJlxrnrlfviq4xz1CvHxecZ595XDpa1GddcUE6eNRnXaFDu
nVVau+Y7d9BHGefJV46gDzLOn6+cPB9r/pfvvC4fZpwPX7mDhsNN853H5o2M
c/gr99HSjHMsK4fPqJSfa/fLh85v/y3cg/NtZMrPuKH6jik/s+6TnzHlZ9YQ
eETKz6x74QdSzrd5j7RJKT9DB8P3wUvhQdW9dpb9bFzo55xeK/vX3SXW5zwN
Pxx6/fwA2w5NOW/n3fCQlPN23gWPTnntrDX0koxzRCvHzomR5xmL2GZnxjUO
lBOmStY1EbpnXYvkRdn42fanjGtnKFfSq3DvfOd6ejnjOgXK6VQt67onqs9w
ION6Dd0Y25pxnQjlYtqfce0GxXTv0tog37Hhf2VcV0J5mS5Oe/3yNPu2IePa
HMq59Jvm4vnOufRnxrU2lNNpY8a1PJT36aGMa2ooXr5q7Pi6GvDIjOtrKJfR
Hs7HrDQzpa6BonjHJYqxy7g2hOL0z8s45lEaniLF30sjpHjJyHFrcrZfzTal
+Y73b5mx5ke6nRYZ149QLP/EnLZE+pPZGecVVIz23sjxmQWK72b8mnzHd9et
6vPwGj7jsoyvI+UQmJ5xHj/Fic/NONef4sS7ZlxfQ3mQOme8n8pr1CFjHZHy
ILXLuL6G8hrdknHdDeVBmpt23PEPfN85aWvPvofbs02c71xS12d8rJRL6oaM
a2ooF1OgeHTdN9jP2xk/Mt+5nvpmHIsqfUuXjOt9KLdSpdgxpVWVGyHjmizK
B9U741otyvXUJ+MaLsrvNDXjXIiKqX8s43yGyj8wJeOch8pRcC/cKN+5sIZm
XBtFuZ7GZ5zjUfH1QzKun6I8WvdknK9b+bIGZZwfUjm4BmT8Xf6XPyrjPN7K
YXVnxnkmlY9rLHxhvnMvjMs4n6TyANyXce0M5e96OON8ksob0FD6LZ2THJ/7
M9b8SF80JuN8lcojURQ7FrEMnpBxnknlGTiPsZvgPrz2yYzzZypfwRMZ57dU
voIFGefGVA6EyRnnilSegUTs2NGj4EczzhupHA6TMt4f5SsYyz3hfe4Jw/it
X8w4V6fyFbyUcX5O5c14NuM8nMot8HTG+6NcBK/DHfKdU6I8ds4E5XpSzqdu
jA/RNZVxLlDlKHgu49yeykUg+97/z0cuLvZcQ/OHCSmvCx5if7Yn+U6ag8E7
krYdHa97VNI2pROkYwxtUzsRfon+cs2ZmCdsS9oG1UD6w9A2vovgOOW5xCWy
e8B3as4g3WbK8//b4Jbwg3qmw7uStlPJtjcw9DyyPeOXs819jLeFm6W8hmoH
V+b/H4VP0pwl5XVER8a3Jm03OxZen7SdrR6cYZuW8DlwImU73tlwOmX77blw
tZRtek3hbMq2u/Okz0rabnwKvC9p+/DJcMQ2N8IXw/PZj7PgVYrnYZv6cF3d
S5O2+9WH/0jajncMvDHnGzpSa6KkX3uSvm9oW+pR8Jak7fZHy2bOZz2sORJ8
TcprpQ6yO4VeY9wsWxbPllLuJzdq/s+9pQm8R/aqtNfXu+kbpL1W3SXbWMrr
zRt5bWnkOd9o2cpKbKO7nfcpSHs+pnmZ8hho7ia92kuMv1jZOeuWpl03RHnq
GqW8br2B93kz7Vokyn1XLe19e1j2jbTrlYyBl+V0ocqDd0rK69zr9ayHe8M3
6XulvMa8Tvq0Ip9L1em3F/n8qUNfN+V14lWySaa8NmwJH5XymvFquCLlNeCl
cP2U15gtZKtM2fZ7AVwn5fVgc/gw+Bb4CtkMU15LtpZvCO4Kt5JtM+W15JVw
O36L9bL5yj6Z8pq0mWyeKa9JL4NrpLzGvFwisgrXEptQxhyvyO9ZReumlO3q
F7JNzbRtF3+lvU6TxlL5Pe5IOQd4X7bpm3Le7z5wn5Tze/fWvqVtx/hbttK0
7TB/yv6atq1mK32Qs53KtnRk2jaTHbLppm1L2Sn7Iu/5JO95u46JziHGt9FH
adt//qAP07b5bJEdN207yT/6zLTtLdtlY045j3o/3ueulPOoD9DxLPa9sQ3f
fUxoX86djI9P2V7xIDwuZRvFCGk6UrZ7DIe7p5wjvSfcLeU85z3gLinnP+8u
mzA8E+4GD0o5X3p/+E758OA74LtTzq8+UPPJ0D6hXvCtKdtnusIdUrZpdIFr
F3ve2Jx9zvLdavEdN9PvSXnNsgJWkJ1sWT/S/5e0v6khr/2gyPeNXYqvSdln
oXV/ptjH+RzZikKvaTuxfavQdv8zdO2k7IdqDBek7Oc6Hc5P2c91GlyWso/m
fLhqyr6Js+BbUr5ndtb1nrKfoonupfAFWkfClVL2bTWCS1K+z5+p7dO2+/1K
X5K2XXE9fXHatsdf9B1TXkuuhvenvL77Ht6b8nrwO133adsh19JXStsGuIb+
YMq2vh/gTNq2x9/1OSnbQ2Rb+jflNezKtGtEyYa5jr5q2jbPDfRFadtFf6bf
l/I6dxWcTtuGuUmfn7bNcyN9Ydo2Vd3fUmnbP3+jPxC7ZuQ4rs3aXKfdE9bz
7I9dM/Jhxp8NXaNLtv3fQud3kLZ/RehaXIqtWBk614PiID4LHR+hWlpPh67p
JX/EqtA5aBTvMDK0H1E6xlGh/aPSFg4L7fuUVnB4aJ+o9IdjQ/tN5a8fHdon
Kp3hiNA+VOkVHwrt/5Mu8YHQ9hfpD7+FZ5c4HuRreGaJYz3Wh86NIl/tz6Hz
U2iO+mPoPDuKa1gTOs+O4iPWhs6bo7iJjaFzXkhL/A08q8SxJxtC58hQ3MQv
oXP6aA78FTyjxPEjy+FpJY4x+RKeXuIYk9Whc/0oTuSH0Ll7FDfxa+gcHIq/
WBc6v49iNO4KbZuQNvXO0PZ06V0nhq4ZpufOpNC1wfQ8mhm61o78R7ND1xuT
D2hh6Dpn8tFMDl1XTP6sp0LXTpNf6dHQNczk85oRusaP/FOn8DydWGKfwubQ
OWgUEzEtdH0g+bmmhq7rIx/W9NC1f+Tneix0TSD5yAaF9klIc7sodP02+cWe
DF2TTP6p+0Pb1/6nNQ1t/5IW957QNjJpaAeHtrVJQ3t3aL+CdLZDQ9vppKFd
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
Ouva66rHMSrrmumqnbGJ9xmf75oFuxnvUuCaF3vhrgWui/Ef3KPAtS2ehhsU
uCbIe7nnl55H78MXFrhGwxvwWQWux/E63KTAtUIWwccVuL7DZDgqcF79Z+Dj
C1xz5EX41ALXIrk5cJ4R5fo4qsyxS29rflLm2KW34CPhh+A34SW556OeR0vh
RgWuVzIJDguc2/9ROC5wXYBHsq4Xr3z+M+HaBa5HcADuVeB6HHtVC0mxl/BB
aVkKzEqk0Bseo+ub8VoFrlkwHa5Z4FoG0+AaBa5H8CR8ZIFrFkzMXfu61sZk
Xe9eNVO28VtMzXdti7FZ17hXXZUn4HoFrnEwD65f4PoFD8OZAtcp6B04J5Ty
3e3hfWblu87FP/Bj+a5DoTpLL8GfS4vCa5/Ld22dYvj5fNfuKYFfyHd9n1TW
depVA+hc1XCp6jpNmaxr3KtW0UHef36+a29VYnxhvuvvdC+3FuYCXrePbR7P
d62ufLZZlO+6PJXhp/Jdx6cQXpzvGj1KTLEg3zV6FM+puE7VuFnK+33D+EvK
HS79UL7rK30BN9W1Cb+TdczpaM0fso5rfgT+OOu41PHwR1nHlo6DP8k65nQC
3CPrXCjKiZLm84YUuI7M+arjU9X1qpJs83K+ayGVwkvyXasokfWxVX2iqllr
k6RfUp2rD+Afec8U73VfgWu13Ms2Ktyuej335+69um/fAx/Mdz2gdzPWQqg+
yPfwkHzX6VgND813rY1v4LvyXTdEtbN0z5mlvO6x81mrttFxcM+qrqulekeD
2GYc23zCa/vmuzbK3xnfo1SjRLW29JsuY5smvHZ0Vdfe2ss2c/JdJ+VTuE++
a6D8AN+f75ogX2f8/qobshuene8aK//Cc/NdK2QY37GowLWTRsAlBa6p9CBc
WuBaS8Ph4gLXTnoALixw7aTB8IF81066G96f77pLsnHL1q2ck/0Y35XvukJ3
wv/mu5bQQHhvvmsJbWd/puW7zssgxvflu2bTAHhPvmsV9Yd357ve0PulPj+l
Y9sW2Ccu7fd+tulZ4Ho9DULXsFSc/mmh62sqBnZa4HqcSrIyPXbcr2z4nwaO
5ZPOZHbgWqfKs3dm6JqmipmdHrh+p3JvnhS6nqVyCzQKXbNTuTUmB65Lqhye
p4au36lcH+1j577R3PuxwDVEldtzTuBaqsrvNyVwfVPlIH00cD1R5QXND11v
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
aozlgg==
           "]], Polygon3DBox[CompressedData["
1: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
p2Lv470DsC8PPgT8D+13Bddpvz62Gu3/xbYCr0Ox/4t9N8dL8MHgv8G7DGVM
O5r2M3dmrHOM2bWSZ8Cx51euZy7a30z7FWj/G3hu8C3gFcGfgacGXwJeCjwV
x5/F8Qtx/Kwc/zn2abBfin1p7J+CpwJfDF5yKD7syZX4sPq2ztkngefszFz+
De1npP3VtF92KM/Uodin6cyz9j72SbCfh32JoYzpR2GfqTNj/ZL8HnuCJwS3
9WX9jPy9AO+fMpTf2N96QfCp3u/+RuDFwacNZUy5rpI50bFmbF5T8PcK/s5D
GVOuxL5SZ8aasfwM/L089jOG4pNcX8mcrq+ij3QTeK3O+E4POwZVMoet2x8f
58ZKxjx9H58Zn50V6e+sofg8N1Qyp+oLHakfAV7ZMUffgr/f5/v4gNeSlYyp
h/H/9J0Zay8ayvM4VfH9bs/9cAltx+W9w4cyh59WiY/h3L4b9quxT8p7Rw3F
pzm9Ep9DX8cx/dpK5nzHen2CM4vfX19hV46/iuMn4b0jsS3M/2+CP+S1FH+v
iP0w/u7g792HMmZfUYmP4Vg+Ja/Z+Hs9Puf5jk+0r4JnAp80FB/g0kp8EH0D
fYwLK/G59D30yc4onkd9NX2ESyrxafQdnFMuAi/VmbnGOXK3SsZw587xGE+3
Yux9zDVDM2OUY9UcnP/kofhoF1Ti0+m7Tdif73q17ozH+lDnV+LT6Fvt2Z3n
w/Fg0f78Bt7rG3bnt5kaPAd4A/CFPk/g2cHrgy8Yik9zeSU+p77OxLxm8LvH
fs5QfLrLKvFB9fW85733l8B++lCeCZ+NNcHn+fyDZ/TeBp87FJ/tvEp8NH05
xzSftU26M9Yty/d/EL/XXzxvO9N2SfB+4N/BO/k89Gdu+oD234O7OGZF+ivx
3u+0rYBXBZfBf4Kfo/2z/P0r7TuwlXmtjL2L9/7Afh/2e/j7E+w/0N8z4KfB
P4P/8fvoz9r4PfC33j/9WWu/D/5uKH0O6xt05lzd4NXpvwL+qy9j/r9c/+zd
mQuc47y2ebsz9zlHeu1zd2fudM77m/azdmcudM6zr/m6MxeO8jui/5G890tf
5lw/yzzdmYtLzvnYR/Heb32Z4/6hv9m6M/c5J2qbqztz5Z3es+B3wd/weW73
ngW/A/7a+w98E/hN8Ffgf3kN6Wvpw2nzmeTv13nvi2K8c25YqDtz3U+8192d
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
c9HmqOVKdvfFf3mE914bzJjkfPdEOWOVfB/n75+K9coiffEffgT/NZictLlp
c+L79SWmaWzTGO3mfcmRmyu3hm1f1959WU89V47/JT9Df+DLYv3kGKa/dG85
Y9vYfVnvvF6OvzVOX9Zfb5QzHzsm6o89Xs5Y6ZiiP/dYOWONY6T+3KPlIn5l
fNP5tifcc+d8537vyZ9741PoW+hz/Al+uZ345H711F/dif0U7FV9eOyvtBOv
3L+eeIBrvNudn3uy9nuxnbXfPvWsx19qJx61bz3r+U2bqc/5sBZ+vvessRJj
Jt7Lb7Sz3j20nvqOPZrJJw8U/vvm4AHwx7XUd+wNXsb1RJFv1qdyrfdmPb7W
6+3EJw6pp37i1Xbil47/1vc92048crd61utvtrN+P6yeeoJn2llb7FrP+vup
durrdqgn/vlkO/V629cTv32inXqv7eqJ7z4GPgO8TT3x1RfaiW/uWU+866By
aietoXyUz/98O/HNPeqJjzzeTv3etvXE855rJ566ez3xi92b8SWrxfprt2by
5d3FenFP8LyuJ4r1nGOQvrNrBscm18Su7Z6qZ63sGsK1hDFoueA7N7N+GlGs
J/XB9cUdgz7GvlMz3/eftcQLd2xmPfhHLesv1ziudYxRyhXfHvv42H+qpZ5K
zm4n+JVauLyuqVxbOQZ/Rfsdmln//l5LfHK7ZtazP9ZS37VFM/HLz2upH3KM
vpHjR4/I2L1XM/Pt6II/sCt4OvDIYj1sjMDv74t6YgfLcczXHZmDre+8mdcn
/P0pr1t640PrSzuG/wDeppn19ve11HNt28x6+oda6pW2bGY9+kUt9Xm7NLO+
7izW21s1E2/9spZ6PdfY1k7+r56199bN/D5f1VKft1kz9Wgf1VKv9FY78azD
66lPWb+ZesA3aqnPHK/wh2fpSW3hBc3UFm5cz/rHGIyxGGMu05gLMz9S3N8t
7JeanwHvCG6DL3fNXdy/w2MSMzF24pg8EcdfVow3O2EfxH4h+NRRqa80XuOY
7lpwzREZ611zuPZwjhgPfIX5H9rvRfvRtL8IfBp4q3riO8aojFU5R0zVlxiV
sSp9lCn6siZxbeIa56fecNqstdmwJ1w310iulVyT/92bNblrc2PO1ta45nLt
5Zrqr974PK5NnfP0hZzDjK3pQzi3GVMztuYYP5m5Rc53OufbmuttjomP5FrY
OUzf6Xzsx2PfqJ715FXF9R0IHmtMYnLG5vSxJunLGK1veEM5Y/e0xe+3MJ9n
SP+1nFixMWO5Xc4Rrt2cs507Nmrmfnq7lvo150zX3s45zqUbN1OP+H4t9aWb
NFNv90Et9VDW8Bqrvrae2t4Nm6kXfauW+tH1mqnfe72W+uR1mqm/e6mW+mTn
MGMHzrHObc7Jxh6cw5yrN2imXvXNWuo/126mHu+FWup3V26m3vieWupRV2qm
HvruWupRjaF/BT6/ntj6ms3Ucz1TS334Gs3Uzz5VS321PoaxC+dIfQ99BmMf
zqH6Es7Rxkr0aZy7324nXn1EPfVdqzfzfTxSS72uPpSxHzmE+lZrNVN/9lwt
9eKrNFPfel8t9aqrNVNP+FAt9YCrNlOP+0At9XLGjIwd6VN/bX15b/JRt/E7
PzOYe9S11F3l3Luncx/Mzlf2UYnPPpgcjbkaczLv0fY07LNh/xD7Gs7l4FnA
74NXG0zO5ulifH63Nzmkp4rz69sfS/vpaP8G7VcZTA7zpWJ94PxwKvZZsX+A
ffXB5AxfLtZj1h4dj3167G9iX3UwMX5j/eYYrT26BPsi2L/Hvt5gclTmqsw5
WTs0n8+k+WHeuxL73OCnwXuALwPPBX4KvHtX+B7Tge+Tz9OVfPRC+jTg/bvC
91gE/Kr55K7wQRYFv2a+GXyd3wf4dfPJ4OvB8+ojmS8GXzEYzqrcVTmkcqfl
gMoFlQM6q7kJfSTaH9AVPsk84GfAe4IvB1/K511UPgifd33wxeCF5bOA1wWf
A57X9R94Ldcb4PHBT4JXAB8Onhz8Enhl8GHgycAvglcaTA7162K9au2gOdOv
ivW3985ltF+M9j/SfgPaPwLeFNygza6DyamYWzHnYu3bodgnxf4C7VfE/hh4
c2kAtNl9MDmqn4rxvFzEC34sxkvXCnKCHy78idd6k9N+qPA/Xu1NDtZcrBzi
18GX0//i8mc434b0v0fPfyUiHQ+Dlx9Mztvctznt52l/Hvb5sH+BfW3s54Pn
B38JXmcwnFu5t3J2Z+9LDtxcuDny53qTUze3bk79hd7kRM2NmiN+ozc5dHPp
5pCfBR9jnNLzyaHwO3Ac5u+HON9ynO+kcvwr/SPXauas3i7ml/9qB3vDP9q+
K3yMWXvDT9qxK3yNvt7wEZbuCj9NDqpcVDmrE/eFwyqXVY7qpODe3vAnluoK
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
/TbwObXUvl/Ka8dqajasozgb+0bYl8B+Lvgs8IbgxcHngF9yDVqJBvOe/dFE
UPtiv1q0EtSYfrDw/9Sefh37idh3w37bcPRTjnYuBd+qb2qMrBJN5Z3VJgLf
U4nG6o790dBQm2GDWrQ1zgRvAF4MfLa+Ku1vr0SDdXPvb2NqlWiwbtmfmhC1
OFaspVbkMWNOlWj2btqfa/RaL+L3XlB/oT++6sXghYbjY6ufqD6ivrcxaLXY
XcMbmzbmp5a7MTdjgcYI1Yo3Bmjs0JiiWvDGiI01GrNT69sYt7G8KXjmr+LZ
35QxYDHz2ebwR2SM/bmIH8jPU0NGbZkJaX8x7den/SKDifmpTWRM2Vig+Z4r
sW/Ce4savzO/MiIaiMZjjHmqXW7M2VjoBLwuov16vLfwYPJRZ4JXAc83mBiy
tXljRiS2bAxTfps5H2ObxsCt1TNmbmzcGLe1csasjX0b47ZWzpi9sW9j3Nay
mTMw9i1f7KauxPSM7RkTtTbQmLmx0vF5Xcj1rGsOdzAxWWsPjbEbqx3D62zs
q5nDwD7aHAV4VfD8g4mZykeT72cs1XzvGtjbfmfY9+n5Twqh44lS9AvkSLaL
/JT5oIMx8nbHc4WexUE9/5WMdzxbih7GLj3/SV103M8/H4J36vlvuddxL/j9
dmJmYxX5HmNpO1gnhP0e7O+1U5NlbZYcydmwH9ETfYVXCn0Ia7Ss1ZITOlNf
arSs1ZITOouxp3bqTeWDjy+/vyd6DK8Xeg9H9USP4bVCj+LInug5vFroUexl
3Rb4sVL0Hfa0bgn8aCn6Djv3ZJ+E+8AfgPe2Dgz8eCn6Dsasrc0w52AsewZe
N2Hfzhhpke9WavGRUvQtjEnKD9Zn0Xcx/88w3PFyoT+xa89/odCOB8AfgQ/s
+a9Et+OZUvRJ5A+4pH6qFP2NA3r+m5I7ni5Fj8SYubWi5myMpZsTslbUnIm5
InNM1oqaYzH3JMf77iIfLj9EjvRdRTxY7vRP9L8r/c9oDhzbj+BdwDMYgxtM
jZy1cnJ+Z+Dz7McxO2BfhusZHEwOwNpLY97mBr7lw85eT83Al1z4z/S3G+1n
kkMwmByStZLGJM0tGcO3ltIYpLF9Y4bWdhpzNpbYzfmO4vhFOX62weSrjwQv
Ap4VXAUfDV4MPHuRL98TPIscBvON4L3As8pZAP8J3gc8O3ha8AifUfB84BnN
x2DfFzwHeLrB5OhWKfjI+mZ/YN8b+2xyDrCPknMBXhA8C7gm5wC8OHgOcCf4
YPD84JnA/eATwcuC5yr4BzcX44W5RjniNxXjkXwEayitpZRTPId8Mc6/JcdP
QptxsX0H3hE8rZyIweQcrH02hmwuwpi9tdLGmI3lG+O1VtqYuLFfY8LyzeXT
Gys2BmvtrDF2Y7Pm1NYq+NHm2ozhWktrjNjY7vxc4wOcf1/Ov0yRz77TfI45
1cHkINcu+NfGh41ZW8ttzN5YtjFta5ONSRvrNiYsH12fXd99evq7kf62NUcx
mJyUteHGxM1VmdOzttwYs7m+z/g+tqL9pLQfbzA5QGvNjTGbG/we+07Yp8M+
qfk28M7g6cGTDabm1zooY94/0v5r7NthnxL7ROb/wNuAJ/cZAje5vlPAK4Dn
BX+BfWvwZODxwQ3sJ4OXB89jPhH7tuApfCb9vbCfBF4OPPdgNJPUTlLDSa1a
Oef1gg9hPt2aXmt7rQmYqy8x3n8qibEY+zXmYKyhu5ZYxJ/d0U58i1dnNTFi
9SHVgzR2rMaK2hgz16K9YszaWPHktcSyjTEa652+ltijMbu/K4lJGMtzMFW7
8U1eI6pFTJD209QSKzQGaCx+ulpig8ZojdVPW0vs1hilsfapa4ldGqP5qZIY
kLEbY4I/VxITMVZozKbUnZiGsRxjSOo1nlXEE/SBjXU66OsbG0MZVeh7GlvZ
jLZvdyZm8VcRYxpZ6H0aezJG1VPotRq7MsbySyUxI2MvrnfUPvyiGu1B1wB+
/n+7szYwRlMv9FWN3YzD3+90Jmaizqsx8OU4fpZaYuPG4JcHz1pLbN4Y/Qrg
2WqJ3RuzNTbTV0ss1xiVsZ7eWmJXxqSM1fTXEqsyxmRuYriW2JMxJXMRo2uJ
NamRorbOJLVopxgDMlY7fi2xIWNAxnbHrSU2ZEzOWNFALbE6Y0zGlsepJfZk
jMjY+3i1xI7Uz76z8E/V7zbGZW5jqJbYlzkOcwGT1pL7UMNG7ZbBWrRt1Gix
tnqhWrRbzDGsCZ6vltyDPuyLxXpb39YczxrY560l9+OeQWuB569lLyHXTMb2
/q1mLWWOaHXwPLXkjsxZrAaeu5ZchjkdcyOT1ZLrMceyInj2WnIvrq/MvUxR
S+zd9eRK4DlqyaWYM1oVPFctuSR97JeK9bm+tzHVdyqJWRprNQb8drG+MjZ8
Qk/0x94u9KHMKVrrao7SXKP56xWw1/VJGAvO6Ine1ie0/6sdfql6Vx+D/7QW
oSf6XJ+C/7a2AzwX+FdwaTCacmrLqe+vlrU5c2tpzYGaS1eTTm06NejUtj6r
J/pfn3H8P+1o5qmdp4ad2tnmXCcp+DfmYs2xTlzwj8y9mqO3nsx6M3P35jit
Z7L+y9yn+fgl6L9kjnUwOVtrd83pmss1R2otuDlcc6fyVSeg/VuFXtaJPdF7
e6fQ2zKHqfaKHAFzm+aIrd01Z2vuWE1x93pQA1CtcXOiarnIITBXegf9LWn6
Wh+7yF8vAP6L/rvAN4AXBP8NLg8mZzx2wYcyl3xST/Tl3i30xswBfFJJzsPc
gGvwlyuJsbs2N8b/SiUxdWP/xvhfrSSHYOzfGP9rlcTYjf0bgzE28F01sRlj
+m8V62/jc6dhXxf7wtyPZwwnZv9uJTF0Y/nGEIxd/15NbMEYtrHpSi2xbTVG
1Zoq16I9ak7hvUpi8uYazCl8WMR3jT+pCas26W/VaMXKUZa7eU453OUr+D7m
5Pv4he9j1GBi9Oonn1TEF+STzoH9Z+wjB5NT+LiSGL65BnMQHxXxY3MT5hg+
rSQmbu7BHMG3leRAzR2YI/imkpyTuQN9YH3hs8vhTss/nYHzfcX5/m0nh/B1
JTlVcwsX9ESv7WsXQVzPhT3Rc/sGPMLr743+22ej4s/fx+ffgs+/Lt/X+PjC
va3wm88phQ/9RytawmMKveo/W9HqHavQs9an1rdemldb/7UVPe7RhZ6xMeLu
anKCxo6NAZeLeJux4R9b0W8fKPS0f21F732o0FvWJ1mtFJ9YX+W3VvS91XSX
uPt9K3rofYU+tzHsUhHvM7Y9K69nRkZDdVv8+yav10ZGY1Vt1yb9L1WKz/Qy
/X/eina2mtpqa//QipZ5f6E3/qgxymJuVAv9i1bmYudktbl/akV/vlHojf/c
SiytWeiN6+OtWorPr+9nDnWoiI+ZW9WnW78UH19f77VW7lXvWXMR5mynroYj
YC734yK+5hzvXK/Pt2YpawJ9wWm6osW4f0e4hPqQ65XCUdC3fKOV/dfU+Fbr
25h9TzU5UmP5+nxrlLIG0Rf8RD2jzmiGqx1uzL9WTc7VXMBnrWhtq0GuFvlX
reyPVCn02F9tJdZvjsVcy5utaIurUa5W+VutPFs+Y2qV67OuXsoaRl/WNcQq
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
aPf/NuZs7Nk19rilxFhce8uherqaHL/cqpkLvYGleqI/MHWhT7VgT/QPdnc8
B39Cv8uPTs3cZaXU2FlLdyPtn1Lvoyf5xaOYa58DP1FopOzajpbyexy/rPXr
4HahX7GS+hE9Of5pNUTMdbWzX4D1+cup5wFugT8Dr6g+iv4Z+FPwCqOjp6s+
w5o90buaqtDjWqAneg476Q+CX6X9UrTfuZ39cV4DLz06Odb3RiVnaO51mkKv
YKGe6DnMVOg5LNkT/Qc1m+7sikaRWk6/O4bxfY7P97mGfJJ29oux/t79Dl5o
JdZqzFWu0Vv92avUPTHdX+xvcxL0NSPPdxU8e/H8bgOeZjg5drW4rQE1996k
z/2qiZFcPpCc9mGlcATMdf/dn70X5cTKTzLHfWgpOX9z333+BtVwbs7VP+jP
3o+u/+QymOM/rpSckbl/OQTHl5KzlVvwlzGvznB+5P70q0lTDcfnQtcLA+G3
yhmWO7xqcT1H8XlmGk4O6lz6u78juak/jNl1Zk9S92P7sz9cIjlNcpta9L9/
NT73lfS9TVdiQcaErH3XX9T31Qc2di0H4FjsN3SEG7BY0f/enH8G52PvKdpv
TPvzjbXRfslSckovOv+DlyglR/U8uB+8eCk5qWfBz6vv2hnOmty1PuyLlZIz
exL7S+ofdobDI5fn5VZiicYU5QLJKViklJpyuQa94EVLyUk+DX66FS6WHBq5
NOaUNyylZsNcszngjUrJmZobXqcrWvTXd6TWtzIQ/rEcb7ner/Znvz/3PHR/
r5f7U7v3Xw2fsdL+7CfoHoDu5/VcK1xxOYpyFc1hb1BKDtbc9pv9qZ37r4ZO
f2ggfGw533K/uwbCbfR4uefmhLcrJWdrrviz/uzl6p637n37SX9qRa0Zdf+/
D/uzt697BLs/4Txd2bvk+I7UYn+BfbzO7Inp3pjWEKxUDefM2oKP+rP3r3sE
u1/ix8V87Z7A7ocoP1n+vzkbczef9mfvXffUdW/d1/qz36J7Pro/2uv92U/R
PSLdT+0NcHdn9mx0vzNzkvuXwpExV/l+f2pZrWl1v8TP+7N3p3vYupetNQ3W
r1h/ID/6g/7sheweyO7nWCv6n5/7tT2cmp1t6f8E+reW5/eCf+iene5/WBrI
+kJOvtz8noHEws2ZmDvpHUgs3Bi5sfK+gcTCjZEbK29wPftWo8l4KbZRA+HD
y+mX218D79GZGgFrBeoDycU4nplLGuD4fTh+M46/eCCcIveesaZcrpGcpVNL
yWnLZXKglT9lDYC1AHL01qqGUyh3Tw0stbDUpHLv8+pA+PjWJFib0DkQPr81
BdYWjBwIn9+aAWsHzCEfUAoHytyyHD7rc8w5mXv6t+BzGa+Su2/OZ7CUmLm5
oBnbyWdtwzEXuJZqJ3+1RTX8tpVcw3Ls8fRxYn9qzE8vpcbf2nM1HdV2dA5S
W1fNG7VvnFPVVlWDSC0i5xi1WZ0jnCvUbHGvHDU+1fo8ZFS0gdWUVFtSzXW1
ltUEVRtUTVC1gvfg+AnBy6lRw/F7gicCL++cC94HPCl4JefwRjQ21dpUk1Pt
24m5/rW4/v2MyfdEU1NtTTUy1dp2T6DxwUuPyl5B7gmj9pgaZO4VIxlJbU81
P9XGVfNT7U81OtXuVdNUbVM1TdU+VoNULVI1T9WGVoNTLc5dRkV72DnvnErG
bOdCNS3VtlSj8tNGNB3VdlTz8Xvwslz/LaVomKhlokakWpFqQP7YiKal2pZq
WH7ciKap2qZqoKo1rEaqWqnbjIo2sXsoXVzNHkHuraRmp9qdamx+3sgeZpdU
sweQe5upgfHFqP+2C/5PG8M9OK6shgMqF9Q9U86pZk8O91KZnvZbcr3HmvPq
iYalWpbu/6W+tZqlapeqqaqTraal2pZqXn7byB42l1azZ5J726hR8tWoaHKo
XaIGqlqoari6N8Pe4EnAK5pfAc9J+z04/zmGRfi+9sM+eT36wV/I9wZPBl5Z
n6uReFmliO8Yz9oSez94bn088H70N28pNcKv9SQH8U93ciDmJtSwGyjaq02t
JpvabGrcqb3tnrmD3cmxuJeummpqq6mp5t4MhxX5nB2KfMFRxfe1aXG/GE8a
5rVwER9S40ytMzXH1AJXc0ztMTXd1P5W02OrUjRC1PpQs+2PIh6olvYRo6Nt
um5xP6gBN6KIHxlf/K0ebTU11tQ2VXOuu4hPGU/cYXSuZxHwi41o9KrVqwaw
2u9bY2+C59fnbWSPo3HAS4zK3kdq+Krlq8avWvPusTUueMlR2XtLzV21d9XI
VQvaPbrGAy81Knt3qZmrdu4+o6I9vlXx/ft9u1edGsRqEavhq1b7Nthb4AXA
z2LfHjxUfJ8vgHcCjw1eHPxKI5p71SJ+pxb6XuCJwSuAPwBvBx4ELwR+vhHN
WLVj1XT9sBFNV7Vd1Yx9v5GY2OuVxNCMlW2LvY19QezPNaLhsnaRL1LbRY1h
tYbV/HVvEvdYvKgazrDc4RX5TM+PyprCtYmacWrHqcF4bCMajGoxqvl1TCOa
jmo7qpHo3g9qLKq1qObccY1oPLqOcT1zfTMaYWqFqSF2dCMaYGqBlcAHN6Ip
5trFNYzjuZqHase5RnGt4p4ZKxS/n+P5vcX475rBvSZPBa9RjP8TujYbnfnA
8d69AObi+3qikjl/m/7sobEc9r1HZW+NXaxXGZU18jXN7AmyfHE/uFeIGmJq
if2s/9OI5qXal2pcLt6MJpnaZGrqHdqI5pnaZ2qWHdaIJp/afGr4ndaIxqRa
k2pYLtOMBp9afGqkHYL98nrWWq653JtUjUy1MtXIdC8LNQDVAlQz8NRGNCjV
olTjb7lmNMjUIpPDuoJaxD3RjlNDTq07NQbVGlQT8ZRGNAh/KPIBZzeikeha
0zXnydZm1LOWdE15UiMacWrFqfF2OPgU8Oq0ORg8QTMah+YXxgaf1YiGo1qO
ajKe24gmo9qMaiCe04jGplqbai4v2YwGqFqgaoy614ea22pvq9Gt9r2aaWqn
qeG2byMacmrJSardv5E9nK6uZs8r93Y6A7xePXu+TEF/Z4LXL/yDKZvZ8+6a
avacci+8s0bHf9AfcW1sDOnYStaYxpbU6FSrU81N90ZyD75bqtmTy7353OPu
5mr2THPvO/fEu6qaPe/cK29Bns/DeT6v5pLH6o3GslrLajb/3IjmWmcpmlpq
sam5rPaymsy/NqJx+XuRL3FvHvdM2hz7yaOyl5J7Iqml6Brctbh7IG0BPmVU
9kZyT6XNwCeNyl5LS3O+SznfE5xvjt5onKp1qoaoe5X8pyFaj+aoe6McX/gf
uxb+lpp1atepwbdbI5p3at+pYbdnI5p8avOpybcr+Gjw/IX/0N2Mpp3admrg
7d6IJt8zhX+3j/NP4W9sW4zPx4GXKPyfRjMaeWrlqZG3B+1PB69bz545kzWj
yao2qxqu7pWiZqraqWqsuteMa9yrK1lzu/ZVU1BtQTX69mtEU1VtVTVb3TtJ
zVa1W9V0da+uxfn+TuP7u4vvb8reaL6qjWlMzNiYmq9qv6oJ615eM7TD19qa
e+J8zn049unr2UPwN/015vdyd3Lu9/VnPLi7+P4cLyceCBfSfIPcykkGwsWU
IylX0j1v3fv0le7shWtM9s5i/HI8mZT2l3aGwymXc5qB7P3bKuo1px5ILVGz
qOd8het5spI17sH9iQm9WoxPJzQSE3qtGM8dHyYbCPdxZMF1dPx4vRjfHE8q
fF/T8n2tyPd1I/f35APhVo4q6k/VfP6lKxrMakHXwfPQfgPa30/7Z7iep3lt
25/67CkGstdvqaivnXIgXMp6Ub86FfiWznAs5Vr+tyesvlZ39optDoQbJydO
bpwxzQOL8chYZ2sg3CU5dHLpxhrI8XKA5AIZ8zygmA/9vRsD4dYZv5AbtYj+
RjUaAdu0swZy7r69O2uj9kC4TXKk5EoNgg/vDOdJ7pP7wZqLNScr/2V4INwk
OUlyk4yx7Vnczz7vxiT3KuZPY5Vv8F29UUmM5STX+gPhMslHkUs10UDuFzmn
ck9HD4QrJgdKLpR7MC5Xzh6N7s04ZiDcJzllcsvGa2Rv2ufMgfL3RHzGRUdG
00I+4oTtrCVdU8pXNKZrbNcYrHsZztNO/dHuvud6tJ36qD3A19q+ndiTMSjr
v6Zph6+6eTX1St4Ld1fCafCeGGyHj6omhnziqdrJVW9ajb7Ee7T/vBLOzIXm
T9upZzqomvrAV7nHXjEWOhg+1HTt5CrMWVi/Nb2cLfBW4PPMjbXDd9sFfCV4
Qz5fie9/Rr7/+/g+NgCPAs8AvqeRmLOxZ2s2rd2cux29j918j+PnakcPY1fw
VeCx24m9GIORD30lz9Ib1dT0Wts7ZTt8anPy5uZXof9vaTMW57sC++TtxLaN
cctPVSP0ta5oSqkdOlk7fGk1NuS7TtIOn1qNE/mqq9Lfd8V8fqXjTzv8aTU4
5K9O0A5/W40Q+aqTtsO3VhNFfuz47fBb1QSRXzxeO3xcNUHkH/sdyz3bviPf
/Vjt8HvVdJC/vX6xnpimWA+pyf5pVzRP1Wof0w5/WE0O+d3D4NlGRpNCfvfo
dvjDakjIDx+3HT6yGiHyoYfaybWac5Vfexjnm66ePX5/4XzjD4Qbbv5Y7veE
A+FmyxGXK+6enWdXsweue3nqb53A8f8r/Bn39J6hnD1A3evb+vX+ztSsW7v+
GfbfKskx39CfPTrvqmbPZffuNIb/WeGPXdTInujnVrNnr3ulm2Mw12CM//xG
9C/k4P/E+X7hfNMOpHZ07KKe/un+jPc/gbcEn2K9RCV7ZNf7kxM4svAf9b/H
ov/Dq9lT8/aB1KQeVc0eo9aqWoN6ZDU1mtZqnkF/O1SyR/RY/dnj9Kxq9tx0
71Nj2nJ15OwY616u8P97Cn/xnoHExtbWRxwdzdOBUjRp1UI9mPemrmfP2+9o
fxB4KvBq4G8a0YgavxTNVLWjPivWp+tgf7eRGOH2lcQ4jR26Pp28WL+7/nRP
jhmL9ezbjWiCjy7Wp/IvDgVPW8+ezz81ktPcr5Kco7lONeYnKOI/rh/NUaxV
SYzS3IV7KN9UjYaAWgJj9N+r2aP2Vj87uIfj5+D4Rzl+C3AfeC7w4+DNwb3g
OcGPNaIxNl0pGllqjx2CfZp69pz+AfsEA6llsMbBWofz+X32r2TP7CmN9boe
qWYP3xsd+7GvW9RH7t+XnI5a3eb8zPWYI9qh8Gf0j8157Vj4O+bCzFm9V6zn
zuT8x9PfNvT3YlFveV0za8Mned3A34uOTq7QnKF8Tvd8vbuaPcDdC/be/szv
H3O/bs71jzMQbq2cWbmz23PM87R9gdeOjWhqq61tjm6SZjTBtyr8YfeCU2N8
y8Ifdn2o3taildTjqzU17kC4vHJ45fKOPRBurnxGucPjgU/rDOdX7q97WN9Z
jeaD2g/q1Ztbf5zXtc1o1qtdr+b1O+3syXtmNTXn1p67J/GpcmdGZq9iObzH
VrOHsNxe9/w5ppo9gt0LyGfi6Gr2EPZZOUkOGdfyJ9f/j/p/rdR2j13Uh4ym
/aHV7Jl880D2xD2tmj2e3SvXPZRPqWZPdPdWdo/i+cvZ09i9i8+ox380x+/6
ePxifLi1iBe4x/NJ1dTYW2t/OccfZ6yZa5ijPznHT4v144WN5DA/L9afrl/c
k/vLUeE0u1e3HLHj5PaMDHfMPaVPlgsyMntNW1MwVAqn21qDEQOpL1cTR22c
bdvJBXtPeW+pSf3nqGgkq1V9WW/WXuYAzQVeVNT/mpMwN3FhUb8rp0Nuh2s0
Y3+rd2XtdrE+fkdi5sbOLy3qjc0ZmjtUY/mbUdEkVnv5kqJ+2Jykucmzivot
OQByAS4o6nHlfMj9UAPbvdCtMbDWQI2E+6rRdFA74cyivktOg9wGNZ7d65yP
+l/tpxoit1ajYaK2yPnF9cs5kXtyblHPK6dDbsd5Rb2vHBK5JGeDT+0Ip0Fu
wzlF/bKcE7knxkCNxS7RldjoGUU9mTkrc1fGxJ3Lp+pKrPzUoj5Rjodcj+ML
PTVzZObKjivqFeVMy50+tqiPlOMs19mYr7H2ObsSC1bj+etRqYG1FlZNldur
0XRRa+WUoj5TToXcitOK65UzInfk4N5wyeQwyWU6rDdcbjnJcpMP6Q13S86Z
3LPTi/pJc0rmltQoua0azRi1S47uzfXJ2Za7fSh4945wwOSCHVPoycn5kvt1
ZG+42HKi5UYf1RuutxxtudqH94YrL8dcrvkRveFOy6GXS39CUf9pjtNcpxoe
91ej8aG2x0G94WbJ6ZLbtWdvcrHmXM29yse4uJYxcwfjkb3J3ZqzNXe7T2+4
9OZ4zfXuDt6iIzlYc7FqKDxajaaN2gp79CaXa07W3OyBveGSydmSu6WmwoOF
vy//dNvecCvkZPjQ798bbpscPrl8+/bm/pHTL7dfTZObiniK/rKaJjdUo8mj
1olrQteSPV1ZK+q7u1Ycuys+/C694XbJyZWbq+bDI9VozqgFsSv2NTvCAZML
tndvctvmtM1tW1N6SSmaydaaqknyQOG/q1WyTW+4JXJS5KaoCfFYNZpAakXo
r8ulkVNTb2TNu5Cx2VLWwjv35vqnKaWeZ6fe1FtNXUq9j5oTj1fDD1WLYofe
1AdNWko9y/a9qV+apJT6lQN6w5WTMyh3cEfwUuDJSqm/2q4355fjItdFjemL
uqKpqv7APvx9TSma+mrrW2N7Lfj5jtTeqiEkV+iWYv0hh1Qu77elcEvdc8u9
t9zDabq+aAA9U43Gi9pAW/Qmd9gupV5sa/Dc4OFS6ru26k29mGO8Y/2WvRnr
zTmae9ytN7+vnHG54yf3hjslR0uulhpMdxTzsdpM1xe/3xNFvut53tvTtSq/
yzQMmms1krsyJm5sfO1GclXmtMxtydm9uPj93Qtgg0ZihcYYjTWu30is0Rif
sb5NwOeNTEzQ2OCGxqRGJsZorNE9BS4qhRPsXgPrNJKbMkdmrmy9RmKF5sTM
jS3QSK7ZnLG54/kb8Y/lkMglmcM15cjk9M3tr6vPNTI5L3NfCzbCfTFnbe5a
zrP8DznOVw1EA32nUjTJ1UZfo5G1hTk4c3FqaJ9Yika72tqzN8IdMCdvbv4j
c+L83cl7cw9EM/vyUvZcUEt7iUbWDvq4+rpLN+K7uIZwLbFaI2sn1wiuFZZq
ZG3hmsK1xeKN+Mb6MPoyizbiqx4MHgIv1ohvow+rL6vm+RWl7AGhFvrC2Lca
GU6M3Bj3XLiwFE1992JYUh96ZNY4rnUWaoQ7I2dI7tBGjYw9jkH67u/xGY/w
++T+mRW8cSOxX2O+xn7VNL+qlD0h1DpXU/zKUvZ4UGtcDfSri+dLbXQ1xa8p
ni+1xldvJPfpmtK15ZqNnM81n2u/E2lzWEc4LXJb1KiXPypfVD6LGvR7l8In
VZveZ8pny2fKWsp9B/Ps+Aw5Vs7dCHdczpzcuX2wz1VKPcZLPdG413fRh5Gf
oAb+waXwq9TGn7cRbpTxGblCavgfVIrmvtr+8zXCdZJDJZdKjfejStHM/0/7
nfvnsmo0bdReU6PqxmJ9pHbVDa1oNclvug3f8jrw4uALwLeAT+oNN1POptzN
QwfyPMzE71PjfA+3E+s2Rm6sfB6uZ+UiniMXVY21O4v1tvx7NajurUaDTBKt
e2rIn5XvplbGbgPhyk5szmd0+FXyp27sCD9LDr7f54KuaUdnj4K9StmDwb0L
1Kc6riuaIvv2REPt2Wo0sdRWm6kRLrwcern0avqcVPi/5uvmwr7IyHBA5ILM
2QgXxPia3A35TfqS+pTyuX4qxmTHYvcPcM8T+U/yveSDzdgIV1/Ou9z3mRv5
fHLydSrd4+HAUvZMcO8HNfiPLGUPBrX53VPg6IJP5V4D7rGwcyn8ZPdemKUR
Lr7xFbnts4FnHRmOtVzrWRvhWsvZl7svB1luYLsWbrJ7OOh76oPK57u8N9+1
37nctSt9xjrCuZN75x4zI0vZ88S9Z9TAVZvty3q0cd9tRv96DtrsRdsvmuGW
6d8cCv6smf1OFgIfbKypGX3rBcEHgT9uRq97fvAB4E+a0aNeAHwg+P1m9Lt9
hnyWPmom1z+fOVnwB808Wz6DPoufN6OPvTD4kMGs+c0df1VPLOCWZrjb3oPe
i9tyz0/I/Ho48+vC/J6d2Hd2vcFnPZL2jzWzP8yYUvS6b2uG6+CaxLXJ7c2s
TVwzuHYwZ28upr8nufz9R2d/ZPcYdx9x7/GVq3mmvPfN2Zg7Ha8nuRzHwGur
meMcG13jWbv0SD1rv6eaicVMUIoe99PN7OczYSn62880s9/NRKXojb8NXgs8
G3gP5/NmuL76V+p3m2NwLXlbPbkHcxDGvm6tJzfxQjP65FOUom/+vDkux65S
9NKNkVlL9XA9sbNnm9nvZuJS9NIfb2a/mLFK0RNfxJo5tVvUfOJe+6qZ2kXX
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
aPs0Z9ozJgYbI1P4gf76M/rrT5nE083bfXJLtoxMCtkUJ7VkU8hnkF3x4pYs
EhkjskaOb8kOkVEiq+SEliwQmSKyRV7WH2+exCPPK//KFq81Tzlv+ZYWLzkP
Ni82Roa2QmORfczj5/dfPDLeP8wMdgYDdzNWrDLLN7M2uz61xdvO483rjcnx
t+5v3nxRT6431zP/vr//36/0v5hAbCBN8DPj6/evxIPCi4Lhkb2sR9er6+mf
mScTdnGst2TFvqLFK89/zvv+5krtqMZT6+2t9AsYBCwCzfNvz+/X3lK00Bvx
JdMw6/qBqyr9n4wL9/MrKv2njA/3uxsq5+vK2E9dWemfZYK4/95UOT83jP3E
rsr5snmsp+2QvGiIX9luSTtB+b/WFuInt/PzsiF+MLtA+c3Nssy0+Ms/zS8/
TcaI++3ZLbNnM2ez5y9V7ufzUY+4rnIeLI/9gkzx65cy/5U1vlY5H48a+79v
Vup9Hgleid14pWk8OLw4X6voHZh+bP+dlX4Bk8Fr8fVKf8Wjw6tzW6X/xFjw
1nyicj5jntQv36j0KzwcvBx3VPoLnh7enusr9coLxn701kp/yrPDu/PVil50
3NgP3lLpZ3kGeAf+vBKtY2f//15Lz6z0TzwHvAeYLewWpuu+/tpPVvp9DJV6
S0b8NUvhZWTHb2jJ0pJ5Jfvq6Jb7iUwk2UibW7KRZDrJdqI50B7MLPnTP1up
32SeqEeOacmikuciW+pzlXpvYazPPl85f5831nN3V/p9DA2W5tiW7CWZVrKt
jmvJypHJJJvphS3ZPTJ0ZOnsqXhhaEa0o6sr9ZsMGvVCtWSHyQyTHbaxJWtK
pphsMZn7tH6aPx7iy5X6scZ+85r+eMs0DJ36kceM10yGw+0rYWixtDxou302
lXps09hffqVSb24c+8tPVfQWjLr64wuV+mNxrEcvbfG7Y1CwKJuIE5NkZMnK
urZSnwxjfbuzUq+tH+u9L1bqp3VjPXhxi7ZMY8aK2HlLq6ZZy2+Q0XfUkIw3
2X088g9OMqM1q91fYZcwTPS591VYADNfs1+aCG3koYXsopYJ/ZeRPzAfl0m4
PCRTTlbheyr7R2jctG4aCi2FxmIXtcw4fmF+Y/M/M7oa+wn9qBmmWebe/vO9
of882yp5/jQX2oudxWtDdgTbZbyjouWbn5jlnt8f3zYJo4BVwI8eMQkji5V9
d2V25/2izWM+zRbMGPBlMnVk62Au9+HtKrNYM2az5vvMFKdhzOmTmExsJqby
2/31b6/MGvYsZd/LuyrsgJmh2eEFldk+pgBbIJP8f9NkPMoql1kuoPzEhWSZ
v7PCWmACsAFqUucVplRWvozt/06TsSl7++z+eG2SmYfZxzkVrUoPpBcyf71l
rC/NW7e11M6YGGzM9hZWCLOD3XlHC7uDkcHKmCGfPva/siLV3LSjC49MLY4x
xZpibr/Xnzuvf/0VkzBB2CA1vdr+5/3rj5WV1sLiYJKwSTtatA7nIZbp3BaW
CMOEZbJDffeQHbx2q6vR1GpqMrtrZIr/Zxq+Rdb44tivbxv1DTuJ9Up6JvP2
8yqzfjMhsyF5JnZs91vI4fwBM22z7bcsJGuUBkgLpBHaBW/n+64hGqFd8Oe0
zFLMVLBL51Z6cUwBtmB7Zf+CHl2vLhNKNhS//F0rmbmfPOoTsiUno15x1thv
2dF9w5Cd0XZ325F84xB/r93JMtZpdTQ786T3VmZNGB+sz5mV/QzOVGerDPm/
T5NhL1teHiBW4vKF5AfJsJFlI4PqjpVkzP91Gh5I9rxM+X9Mk1Eva35fhW3l
OeA9kNH/r2ky7WX3b61oSXpEveJ3KnokDyH98I2Vs977ZzYl80r2lQytO1eS
OT+M+hge6ayKtkaDo8W9tbJfhYZFy3pbRcuiYdGy7q2wlRhcLO53K/MJHhB6
5uv6449OcoY6SzHgWHCeY7ssZLLORj0NP2XmYvZiZvPUPDMWsxYzn+fmyfSS
7YUpt3vx9ZWz2ZnkbMKkY9Mx6ff359/Un79yEs2QdnhPhbXEhGJDzZDMkjAz
h/r3/z/sTnrk
           "]], Polygon3DBox[CompressedData["
1:eJwt3Heg1/MXx/GvtMe9t7r3dispaRAqJSEqicpob+2NKKuFFhqkhYbS0pYo
I7OFhpRkFFmhUCgRFer3OL+PPw7f9/O+znmPz3y/3+fTOT0GtLwjVyqVujJ3
KpXH/yukp1LnsuaZqdRX+VKpTiVSqTbFUqm+hVKpcQVTqbvOTKW2Fk2lRqSl
UmXy+n92KrWnSCr1GWtN14duLN2ddFvommFdsBHYrdgGbJP434r9G9+L/K7K
MrNSqUp0benq0Q2hy8IqY+2w+thQ7DXalXw/UHetM8TQjnexfdgR8S7w+0I2
h43AltPlodtIN6q439r5QMlU6oB2/cCas67qGKmO29SxUR3b6E4ZjLKsHOsr
7o3G43PxCrIB4p0l/v10vxVOpYqxusbvfbEGaPN85ffE3MrWqqsYVs7v5uq4
Qh13q+Md/t+IdVjs8/2uwsqxsqyZur70t5uN/V/qaK8PQ7VjGHucvrh4FcVr
I15rlk8di/iN5TOXNl37tulvJXHmYx9itbHvsBZ8x/N9jd8z2nJIW86je4bu
I7rL6Q7QrRfvC+xQdtKmaNtyNgl7ni6bbhfdhvSkrT9nJ+dNnD/dxDuJVWGT
6W7CstV7nnrbq/dq9Q5TbxW6ZTSfiVeX7pB4b9K+iX2JXYOdxtZh72O/YK2w
dOW3xLvMsexnrB839ucYp67Gf5g6ZqljjDq+VMdkvBRdHbq+dLmV92SkUtUK
iJU/lTou3t/iPY6XoatLdytdPuVX2IfG/JDyz6ylPr5O+5K2fKItV/I9rn1X
6ccW7DjWGSsY7QvDvsIaYinlotpcVvuaad/l2neX9o1TR5p6xzqGf2r/X6wE
3fl0Hega0N1H9wb/l8X7VLyrxDuh3jfoLuXbR5t7s4xSqdRE8bKwS5V7anNK
uamYncUbLt4t4q0XbxKeTVebrhfdGcqPsUysFtYDO83vEawoVgPriv2D3cQ6
ifeAeP3EWyfeo3TF6GrSdaP7l+Ztbf5am381bpX9Po9VYhVZi8zkb52d471o
HxJvkXiTxDsgXmOsLbYiR7+VX2FdsEHYdLpRdHuwjenJfeqX7CRuxO9Mdy/d
NLqRdLvpmhqrMdgr2DzsJ6w87TmsaWZyrnfUlvH6ka4f4xyP4+KcYBf6+7P+
vtfY1zf2vxj7hfzGYE9jadh72AS+xfleYgy6G4NTfC/luzbGgK41Xa64v2pL
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
FRDvcuXy2nezOvbzrydee/EKiFdIOU/cx+kuozuHriNdPiwNqxv3Y6wHtpI9
F+/l/tbK37Ld76/Rj2Z+L1TfMn9bzo6I2Vod96qjjDrKKhfik013nXjXsjP4
HsXb0g2mK0t3jnIBugy6+jRV1NtTvN/wNnSD6M6mK6f8hD6fbQzqGYPbjEF+
5cJ8S/BtxLc631v45sfSsXpxb8O6F03O06vyJ9dVXF8VHN/DYrZSxz34Weo4
WzmNb0m+TfjW4Hsb31zYaeVqrCTWCiuC5dA1xi7GbsWmaE9p7btS+/rFmpvy
ATGvUUc3dRRWR5pyA+PXlO8zxm9JzPHYpc69Wqyjdv6ofb217z7+P4lVkNUW
711+o/z9MrH6xfu883k8nxf4Px/vbdrUWtwSxjmT7mHPksXeP5awVe5Xv6j7
Jm25g38JbSkZY083iG46zQy2iK6GmBez9v52QD09taWP3wX5XRHvnuq92d+v
LZacE8tykvqjHf3jHRV707gsMS6n4jrnW4hvnXiP49s5no3a2oJucYwBW8ru
p7uYrjvdJrrRdD9r443afDuerc05Gcl6WqyrtcpM1ga7lkjmxEvyJXPamNtu
0o+faK/j24dvOt+iykOM6efG8291n2dMX4n7PfYZdhKrjL2MHaRtxLcf3wy+
xZQ7xrzE5X8y7lXqWK38Q1zXdD3oitClKw8S7yPx/hCvHO3KWLPAdmG/Y2Wx
57Afaa/l24tvGt8M5XtiXYruKN3ZdCvoriuWHNflxmiV8Vz933zmlXzJ/D/W
AXbob++4H8eYGvvJxv4Hui3G+caYQ4i5VLza4o/ge4k6e8U6gHF+2Fj+gl8h
zs3OgU5svHgf8+3M9zG+r/G9jqY+3238/qbtxrcI30/outBNpHudrlGsnbIm
NLeKdRt7TLxP6brSTaJ7g64xTXdtvl+bn9bmcdr8tTbfrY5zta+Vel5Vxz3q
uAsrj7XE1mB3YzvFaxfra+KtFq++eLuxbthk7E2sSRxvrDf2JLYeuwlrIN4O
sU5pYy/xMsS7B6ugjtbxvofdi+3i24HveL4v8W3AtzHdp/F+w26jy4lrAftQ
+Yx4v8QyY+2Ubz++M/i+zbd58eRaj2u+VlZyDy3uWr2T7znqbcH3Fb53xVox
9qjyG9pXDtueljyn4nl1SVZy/yjGd6/ffdQxTR0b1NFUHdfw/YDvab69+RaL
9V66vnTT6TbGehNdf7oc9TaO+TPdbfGuGs95sZ9wPIY7Hp+o7yO+nfhO4Psq
32uLJ+t9se7XMjNZ6+7iGqzH94ZYU3Cezue3gH3GtxffJ/iu43sj39EsLzZc
+3/k81P4ifOZOAXiHUdbSot9PbZHOX+8W2ClsN2ukaqumRba/VesAcTauHhF
xBsj3h9iHYvrACuEPYQdUf6NfRo6Y1LV+ViN3eWcrKR9dbX5Dv1tr79TYl6r
3t3qzMf6q6OkOh7km0+8EeIdFOtQvE9iBbEHsV+VD7OFsS7DamYl7xhF/W1M
PKfoHo7nH83vxZKxiTGqEdcnXYa/fapvF+lbM337M9aB411FW7Zrx7/a3RMr
iq1l72D7Yy0Oy6+8R5ye6njcOE9lZ5dyHajnPrFn69tYffsqjoc6qqujjTpO
xJpMejL/eCRfMr+JeU4dx7IR3zaxnuNYvsjvpXhPxB7A5og3XrxvsIp858W7
Lr9LxfveeTpQf9/Rhv3Rf8d8buydxHon9n30FZsTa3DYBuxbLA2bHXNzbCP2
HZaOPY01Uscn6sjDcrMO2ncdtsvvXKyferPiPqRvF+rbTfp2LNbv05N36qrK
zeias5wSyfrLu/mSdaBYD9oTe0vG71p13qtvXfRtur7dS1eZbzvat8QbFns5
dA3p7qHrTDeNrjPdIZrSbBRd3Xg+0V1Dd3fsq7Eiju+7WCPHaLD+LdC36vp6
IXYd3SCaruLNEK9+seScmJ+TnEtxTm2L+0Wcf3yf5Xs5301YY2wI9gx2MbY9
3gHivMceZGc5D67Uvs3a9pe+dtK+ArHnQtc85vE0K/hewfc+uur62432XbpR
sS6MnYe1x9ZiQ7GqUa/2DdHm7tr8lPYNp6tJ1zOewXQPxVoYVgPrgW3GHozz
Nvqr3kHqna/eauq9KMZFvMHidRNvpnhb4/qJ/Ty6ZXSX0tUVb6tYJ/Sji3iF
4p2drgnfoXx78J0V5yR2FXY71g6bjG0OXay1iLdQvBrivRf30bgPYcuxy7DT
rK/44+IZyGY5N9ZFPLrb6WbSnUezPu4b2B3YU1jl4sl7cLwPX5qVvOdnxr0d
30pzMN7L6BY5tl85T2s7T3sam9Oxb6D8JbsU646dijWyjGQdJdZT/sH/Zf/o
/+38nxHrHX1bqW95lAfiZfMnaxGxJpEW92LsPb9P6ktX8QrHMzT6rC2H+Odo
y2K+e9Vxidid+f8Te3LpSbxy+ZPrJa6b8SWS97WW/EbH/gzL0rfP+V7Mtx3t
yVhv55tBdzZdU5rLtG9g7G+p9xtjeQbLxdoZ0w/o2sY9W3tWaUu94sl1/nG+
ZE001ka/p5sXa/MxP8tK5o9p6t3gdz2+A/jO4ns+38rB/H2Aejuod2rsfWL1
sYFYR+xx7EOsfewB8X2R79V8B6i3tD7coO5V+nG7frwd9wO6e+nuYSVKJXPW
mLtenJU859K1ZWPUQTeQZrZ4VcS7Q7xS4l0v3gvi9RdvB12beAbQvUBXl+4L
41fL+HWl/Tf2EZUL0hUV+2ptvkCbe6nvQscpN1YRy8Dax/1YzIVxnRqnC/n+
6L6bUu8tyjON8ZuKF2C5sNuwWdha7CLsX3X3xB7H1mCVsImxPqQtt2hLUedc
nphvYS2wUdh5WOk4J7H+fGfzXce3Kt/HseZ0I+lGxLzOfWtyrIdhdymX5FuY
75NYS2w0dj52FjYp1uGwO2PNLubP8e4Q/cBmxhob3SV0c7A+2DSsLlYDm4v1
xaZj9bCLsXlYP2xGXA9YTeyY/rbS5gdjLhRLjtp8Bt2t2FPYW9iFacm13y9v
Mg+K+VBj598prBf2hPKrdJVjf5DvQHXMU0cjdVyhjilYY2wIVg7L/K9v9bGb
sU7sSdfRH+K1FG+0eIvFyxbvKbouBZKxizGcR3eC7ma6R+lW0pWhO4l1wiZg
z2NnY9udU++zL2PPN/Yrs5Pj0axAMp4xrjPFO609j2PvxppSrM+y43w68nlE
vOfEOyvODfw+utn8rtWPRhlJnkKHvMn9MO6LDdTxD9YDm6r8SuSW8P073uex
KdjLWMXYf4ucEPF+EG+yePPFK4+9ix3AJmHzsFPsQWwhdiPWNNY89KMJNhQ7
ByuO/amO1up4SB1LY2lJHY/Fc4auQ6wLssf18YvY7479+cjxoNtsjJ6hG0A3
l+Y68S4X72e6S2IOEH2jO053BGuI3RNzYixv7INp8/d887CVfNfx3Rn7M7Gn
Fvc0ujVFknnP9XmTfI7I67gi1nL5fscvN3uO71q+leO9WvkPbXkaW4n9zvdG
vvfzmytemno/iD0qrCbWFntFHTtijwqrgbXBXsb+jPV28bJYNjtlDKqq42e/
i7CX1bFJHdtjz4HvxXxb832J70vYu8q/5v7/Ul1qCHYo1sH45WX52FF/WIzd
5feCWGcU70rxKqljB3YYm44tzUj2tt/Jk+RVRH7Ffve0BnQn/P3FWHuMZzO2
QLw7+M6JMWAXufYr0m3HflWeRr9EvKPi3aDN94k5R/uKGJfZfLvTTaG7jO4C
uplYR+yRWMvEKmKzsG7YZKw2VgWbgXXAxsdaNVYBm461x8Zh1bHy2NNYD2xq
7EVgF2LTsHbYWKwadm5Gcv12xSZhE1nlnOScrFkgue7j+i+I/aofV+pHf/2Y
pB+njPPhmK9hd8c9J7Za9O08Y/Ax32P85qjjeXWcj32C/YnNxV7AvjaGt8c7
CHvHOLeI/Xm6L+P40y2mW0NXAXsf+yXuQdjijGS+XydvMjePOXp152kVui/i
XYNuEd0rdNvEfo99RV8i8o/i2R3nIPsay4l9OexD5Z3sG6wkVhTLHfdJv+eJ
/46+XaJvZ6pjujq2Op/6xbo/y43NwN6LdWfl21gubBq2JdaelPuyvLHHin2A
DVS+k9WP+X6h5J0k3k1eyEny1SJv7ftYL1R/CW1Ji7kz302xL6JvI/lu1r6n
sPfF2852sDx0M7FtfvenuT0jyXu4MG+yLhLrIxXE2x/x2UF/q+BvZbDrtWV4
oWQ/PfbVX9eWs8R7U7wv1fuweqeJVzTW/GIMYr8IexDLF+8W2E713qV8NzsD
exLbHHk0yr1ZeqxXB4vnJd9RWBnsLewrbAw2HSsc81DsHex2bDiWpY2Z2cn+
ZOT3ZftdxrvFr7GWzY7TXc3vnJijKhdgp+MZgJ0d81vlswom13Fcz2dhvyjn
sL+w+lipmBsrZ7JjWF3s6zh/2A/qPUe9pdRbmu5nmmz2J129uEfSfMt+ojuX
7iy6RY7RnfoxP9Yp6Orox744z9iPdOXpStMVivk03cfGalg8w+JdCpuHfYQN
UR6akeQ9DHCMJkduAHvJMdor1udsv3hlxcsRL3/sUfD9kO89/O5lRWIuFs/Q
2O/QlhHx3s7vC3aAbzm+JfkWiHdWul18B9EMZmdja7Gv+Y7lOyPOaW15Vlve
147tbI+2dMJmY28pr2XvY7/T3sz3fr4V+VZW/iTWN2Ku7nzs6tpapw0fx3oE
dkXs7WNrsT9oO/F9gG8lvucp76HLiHwnup50b9P9Hecc3RN0V8Zxi/cm1hkb
Hvc07Hzlj/gW4Hs538583+K7C8sfe+exdhh5RtiHsV6C1Y5rJvJ9sL2RQ4Vd
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
xiZgVbAbsIHYr9h4rDLWGLsdO4Q9E+9E2J3Yk1jxtGTPoWGR5Huf+O5ntnFe
iLegu4tuGl2m8hLWDhuCPY2VVl7KumAjsGewc5SfY3dgk7AXsYuVV7IB8Y6D
vYTVUH6BDcfmYm9jVys/xqpizbC7sd+063nsXmwa9gZ2ufLL2lzJ3xppb2M2
UZsfxc+nu55uAN0v/v5wWjKnfzg7WTeJ9ZPYq2xVJNlfiX2WxXw/cm686tz4
zHnxeZhzY5RjfDRyrGhvi7WErOT7qFrxXsSvXXwnwXeOOq5TR1/1Tojbb7yX
ibcs1pbE2sY+Fe9p/Fq6PnSP0hWIcRLvlcjPZtvUVUydc/FGdP3oHqMrpLyI
tcEGYbOwkspTWA2sFTYYO6Zdk7DqWAvsXuz3eAdJS9YrHspO1jlivWN4WjJH
Gx75Mcq72ci0ZN1qZHayLhHrE6PSkrWJUdnJekOsO0zEqmHN1XGPOo5ik+MZ
jLXEBmF/YKPTkrWJ0dnJOkysxzyYlqzFPJidrKXEmspAY7DEWO42Bme6rh80
BjnxLaVrrTA7Gusvnlvl4ngo52OnsOuwH7wLlYi1WO9CczyHb1H+jqXFOik2
DeseuRrq+Fod6ewKdbwm1hjsK+W0eG/CXo1vHWizYs7NdzbfvunJO9wX/71H
xfvUvvjWE8+OtV26p+n6KT9C972/Z7L64q0Vbzz2nXJxVg9bh31LWyTWBPg+
ybdbfG/G8sZ6B/YY1j7yeFieWD/BJmDtIp9avE/FystqiLcqcn+x3cr5WE1s
deyvRl45v3JsLN+W8c0O3Zc0RdhldGvoxmHfxHd+rA72OvYFbSr2PviO49sq
PXlP3F44eYeNd9m98W1I5BjHujXddLoeyp+zU8pl2RisRexBRp5X7A+ze7H6
yh9EPrZyOhuEXa28PfLulIuwe7B6yh+zP5VLsAewxpGLw04ol2IjsRsiB4P9
FXkWbDjWRPlTdly5JBuBXa/8on6Udc4105f7Yv7iXv8SVg5rjt2PFcC2pCc5
iH9mJ98OxDcEn7F/sbPZw+I1j/wX9o9yGfYQ1kx5W3qSd38iO8n/j+8A3k9P
vgE4idXx+0q2OnI+1dsk9nrVm6t48t1PfP/zTFbyjdBB47w1Pflu4a/sJFcz
cjbfS0/yNY9nJ7n+kfP/ETuGZbP7taWR8j5WONapsCewrpEfIfYOdZ5yHM9X
79JiyXzh0H9zj5iD7FfvLvew1e5h3/J/xPX2qPfJD7FV2D5sPDYhcgX4/vVf
LnDkBA/IcT5gx8SpyFqoY6c6ZoZOuTJrhe3CJmE/R74Ia4RtwiZjvyiXiXs7
thmbgv0a+UWsCbYFm4odVi7Lrse2FkvymvMWSr7piG877taWJ7Hfac5lzei2
083A/lSuxFpiH2LTsD+UK7Dm2AfYzpiP6+9e/R2tvw/p75t0tWPNIHKe6Mo5
bo9jR5TLsRuw94olz4DlBZLnSTxXGmvL18Y/X+xrR56949Ehzl26N+gO4VPV
8URG8k1OfJuzICv5Luwnx2Ok3x+Ln5tVV8cLca7wzx/72uJNEq+j8gS6AzTZ
rAHdhvg2D9uvnMWuxtZjI7CdMQlnF2DL4zs07APl08awCrYscn+xT7A87GLs
eewx7IfIT2DXYBux2dg/yhfGsxH7NHJysb8jPmuLfYLNi8UKfaqO3Yx9Hs88
7LRyNdYR+wybg51Srso6YHuwp7F/lS9i7bHd2MfG73Xjd9A4TDF+j8ceVeS7
xDtaVvKt04//PeNfK5DMAWIu0ConmXefFKsKO5/9QLfTGB42nhlssDFtkJ68
b1Qukjzz49mfr5TnNnZerHNEzpO2FHUezI993VgjwUbHO6ry5vQkt/9YdpLf
HHnOT0f+EV1TumGx/1k8+d4l5vRH6X5nf7AXaGdHHphn5rna8rXn51zaGrGW
x3dkrGEpz2M1sdbYqFiDUZ4d+0fYTdjQWNNRnhV7ddiN2JBYN1J+MvZHsAbY
gFiXKZ7sP8U+1Kb/9qrqGKsF+BWxLkY3NtbJlJ9iVbAbsMGx/qU8k1XErsPu
xjKUZ8R+FXZtrG1g6crP6tvkyH2JvTJ9+0jfpsXeCt01dANj3Uh5euzLYA2x
O2NdS3lF5BDEPBhbgjVUXhXjGvli4lUQ7xvxnsemRz4vVhbbiw1x3N7ld8w5
fg7f+c6TV+gWR74YXVW6g3RrsBXx7Ufsg2OHY12A73q+R/iW5vsU35fpFkXu
eKwX0P2UlqyhrC2crKnE2spHzqtB2DrssHIpvjP53oOtifMucnKxKdiL4s0V
b32sNYj3rXirsTnYOqwitg8byncT3z/5luc7j+9KummRq0x3Nt3n8T6OPRk5
vrFfiH2GrcCewF6O/S5sD3Z3vIuKdyByfMWbGtegcb3YOLfER8TacvFk/er5
wsnaUKwRbdW3u7AXsG+UC9E9Es+w2Ovl2wkfh1VUPqzeWq69tup+U71j4z0g
1rSwptEebGR6ktMaua3PZiX5tL+VTL4BLFAkWeOKta7D2C+xn8eWZyU5sUdK
Jnm9kd+7JCvJnf21ZPINa3zLuigr+fc6fi6Z5OZGju6KrCRP9mjJ5N/viH/H
Y3FWkiv8S8TTnjKR/6N9i7RvYHryzW58u7swK/lW9lDJZB0up0gyH4l5yT/Y
h7RH+BVlQ/heo7yG7ny6DjGvjbXlmL/iv9EUY0PpGiq/TledrhvdhFj7pnsN
q4Z1xR7FcrAXsAysPtYf+zv6z/+s2IsSb6F4A5RfpatK14XuEbqSxZOc4MgN
fi4ryWX+vWTy70XEvxvxfFby7xYcK5nkNkeO88qs5N+W+COOR+RH+N1fvBni
1VL+WT2VIj9Jvc+pd4jyIVYx1sewFdjg9CSPOfKZl2Yl33XGsXw2cpRibVW8
eeJdpbw08lpi/oVNxy5RXs5aYHdhc7ErlX8R80J13KSOl9QxIt7/3LvWu3cd
wWd4LsxyPzsYeceRt0W3mO7OuO75NxCvp3iTxbuoePK95P35ku8i4/vI6vFd
jLZuoTnuHK9A94z2D8M2Y39h52ILsDKx18F3dezpqmOTa2th5GCoozPteLpK
yovY1VgPbBJ2ofKSyMvAemFTsKrFk/39EYWSvbfYg7vUWD2BHaUpz5rS7Yjj
VTz51iK+uegvxgtxfOhG8n2B30zzy33mTO2xadimyFvA/sI6YNOxzdgq7ETR
JJe4QaHkO+n4XnqGZ8Bl6imPXaNclW5Q0WR/cGKhZN849o+vKpnsMa/AvlDe
yxpiF/HNg1VSLsq3A9+rsCuwm+NbrfgOEuvId0as3WOrsZPYzdjMuNdgL2J/
x7dhfM/FGsY3UthgrA52AXZjjBM2PL5PwqpgN2C1sAewVuJNwtZhS7EjWFts
KrYRexb7Hbsl1urjPodtxtLEaoc9WShZC4o1oeN0V+I1sFZYXWwM1ppuMrYe
W4b9Fv1wTBY6Ph/gR+J7dn4XsyLKVSOnAesWubxYaexKrBJ2B9Ytzn2+6/Hj
UQdN93iOYhuxE/HvFWC1WCnlOnwrYrfzPeic/Na1UIy97lp407XQnu9cvu/S
/hz/Jgy/rtgybC32F/YwVpudpXxVfCuNDYhvQbBMrFZ8t4z1i28PsOLYJVhZ
rG/kz2KFsYuwElhXrBpWCLsw8jCwLlhVrCB2QeT4Yp3jnNSWBdqyLfYm4rjR
dIrrBvsQ+y3+3QCsI/YMth07HMcc64wtxj4qlKzhxFpODVZMuaY6zsb6qKON
YzQF24Atx45iF9CdGdc4lo61w6pgueIax9KwttiRyL83nqXZRmP6jjH9DftV
+ezIGcA2x94x3+/45Wa/xv5+HEv1zhfvw8jXES9X5LnwPcivFNtA93bkS8Ze
Ft1Outfozoj7Nd1hmrKRj0O3Jfa24/lGk5cdjnwBdWTHeoZyfnYk8g6xCnFv
j36xXOJdj5WPe7tyodjMwxrHtY+diuMY+ThYC+xc7Fh8UxDfVGJNItcZ+1e5
TNSDNccqY/8ol461GqwZ1kU/5urHB9irsRFLU5GdjPOC5cFuoquE/R3fO0Zf
sKbYr/r7k76WZOv1Y2PkkWE/KuewddiGyKnEflAuwdZi67E+6l2m3s/Ee1u8
guL3xpZieyKXASuA9Yo1KGw3tgHLj/XAFmGfYOuwvNhf6vhT/EqRv6COHRlJ
DuQx5YqsArvVffI49pfflSOPgO6DjCTH5ulCSc5N5N40iHcLun00RdlrdG9E
Pgh2XPm8yDfAdkY+CHZC+fzIX8A+xLqLt0C8XWK9oX1nFkvyJw/8l4sZOZn9
Io8HO+J3ucib4LuV7x/Yb8rnRD4Y9l7k3WBHlcvHuiW2LXJV1LFYHZ+qY706
8sW1hc3BdmBrsNOO0d98T/KrEjkXfHdFbkq8h8T1wn6PvE26H+m+oclgr2Kv
07Vzrc5xrb4t5iHxhvFroI5+yjMivw7bVjT5/jC+Q6yTlXwjlBPfBPt9i98z
6R6key/WBNXxtfjpbI06Xs1I/t2PmoWSf9ss/o2zCTnJv/8U/w7UVVnJvydS
qmTyvVF8d3RlVvJvRZUsmeRvRR7X9swk1+tqvkfTk29z4hudRt4nfo85Yuxf
Rp3KXdXbks/q2KvEXopcbKw59krsQUb/sW5Yq8hdxR7GXsY6Y82wq2P/Qxum
au99+vZ20eTb5qxCyTfb8e32MG3Zw3cj36N8n+I7+7/8xO6FklyzyDkrH32L
vVS6V+i60LWg6xFzKWP/Du3J+Dc+jP2XdB/QnaZbQrecbm9814GdxOZjz2Df
YZ9hBdgL2GrsW2yPcn72PLYK24/tVS7EVmMvZST7b7sLJDm+kevbUz9u1OZR
2rFKe5/Slm/1dzfdBn//LfLJ+T7F9ya60XSr6WbRfUd3gO6rAsn+b+wDv0b3
Pfa5ckG2KnKAsW+wXcq52HJsBfY5tlX5ROTAYwsykj3DLQWSvcHYI+yUk3z3
/lN8CxHvL+z2nOTfnol/g6ZuVvJvtJQ2zvX87uD3+Fh/0r43I7+V7zbx/hZr
gToWxhoF9iF2BluGPYt9he2MPVy2FFuGtYp5tmP0hpg/xDuXY9Q65vLYW9iP
8e6DrYn8iLiPqKM739b/5ZrOKpDsQcReRMzjIy8w8gPfz0zyFOvnJLmvkQP7
bmaSh3pFTpJ7GDmI2zKTvMJ62ADlO9iWzCQn9sqcJB828mK3Zia5pFflJHmk
kU/6XmaSz1gXuzXmjZFTYFy2aHN6seR7gPguYH1mkmdXi667cje2LjP5duAS
rK3+Pq2/G/gf5DuUb3/xVinvE+89rCi2ls/UeB7r6y3GoFNGkusbOb/vZCb5
vpfnJDmtkdu6MTPJ962NveX3lHj28u3H9+bIy4t5rTq+UcdWdWQUS3IAIxdw
Q2aSJ3sp3x1+L/B7F99hfB/w9+ew4dhKrA3WOCPZ/32gQLL/GPuQF8e/6YM9
hr2l3IuuHV2bWL/R33Xq/km9Q9T7Ot3EeLbR9aZrn5H8u40VCiX/zkH8ewej
xeuHPYd9qbyJbxG+q2JOEtcf3w58b8xI9kMnYG9ib7CafN/AJsUzVbkPXYeM
JAc6cqHfzkxyqC+jeyFyt+K6omtPd4O/L4v8MGwJ1ixydbGV2Ii4F8ScH2sS
66fY5HiWY32xjtjzkfcV9xGsHXY99mzkpcW1gbXAGmLLIy8trg2sOXYNNgFr
rNwk1lndk59wL16KDaJbHOsKkSNMtwS7F1sU88TIOY7nW+yfGKuFxmqisdrv
Wv0fKrFnSQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$7838#1"]& ]]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jksZVEcwOGD9+xbIUoiojSFKCnUJBIlnY6CREU3jdCIgsw0oqMRsT27
jkZCY2eWN5MJYovMjBl0vpMofvc7ue/m3v+591V19rb1ZIQQBvVfcf1Hv9RX
FEIpP7KSo/zASTZyli3cYgf3uK9u6xsO8IXDzCkO4TPLOc0aLrOeO1zmdbxe
h3rSveaSIRxxnsdc4AkXecolnjHF83gfrujCepVfuMavXOc3bvA7N5mO8/MH
x7LNzVf91D89qNVsB2ziNuuYYjWnWMZPTHIovkd77uc1r9Rlvcv2+Gw2c4YN
nGAtR1gR9+Mel3xWif7qLs6UCKE4nmdRnI2F8XcW8Dfz+ci8ODdzecsb5cR5
aIvhksn4jZmIe3XIYpqZHHfR7fv/4Q1J6FTo
        "]], Line3DBox[CompressedData["
1:eJwl0jlLXFEYgOEz7jaKlVaBsdBfkDSKlWkUG00lqUZwSzLjaCOpTCEpY6OI
iIYIIiERSwtt08R9MllERMal0bhXMS7PxeLl+bgXLud83Hgi1ZqMhRCGdWb4
x2PuaLEshFJ+YxWzrOUBn/GKz5lXHsILVrCDcVar39zAd2zhCF9ymq84z7dc
5jX3eKEV/dWhOotDWGUX19jNdfZwg73cjL7HLb5mhm+Y1A9ziln28SfT/MV+
/uYA/7CpJIQcL7WtUx1p1Nm+8z2XOMiv0Rk4xXZ+YDOHWM86pc1PmGA526JF
szG6p909ZY41zLAyeu79Ls9VopNo31ooCqGY8yziFxbyMws4x3zOMo8z/KSY
+SMDp3hvnOQdJ3jLcf7nGG/YbA/7scf/4QGyLU8n
        "]], Line3DBox[CompressedData["
1:eJwl0jssXmEYwPHXlzQpSz9iVZdSl6EV5pLuPnWJNHWJ0jQSEmakowTpXmLX
xl5id6etukSEsrjWWK26+50Y/vk950zPed+T3dpV05kUQujTUSyEPx72uK6z
RyHE+CAeQirTmcUnfM4SlvElE6xiI9+yRR3mD+zhRw5whEMc42dOcpylqSFs
8remdaAdZSSHMMPHnGUm55jFeWZzgTlcjHbjEnOZp2/mp/zOfP5gAZdZyJ8s
4gqTUkLY4olWdahdrdlxijP8ygmO8gs/cZj9HGQ3e6NvVru5iQ2sZAXL+YLF
fBbtz0ymMR69dw4bPI720b5+qe2hC+J73rqjd7xhC6/ZzCs28ZL1fKML82ue
s47/WcszVvMfX/EvEzxlzDlsx+7/hzuiAEqh
        "]], Line3DBox[CompressedData["
1:eJwl0lkr51EYB/BjGfEn2RKSmiteAW8A97Z74ZpwL9Rcysz9lHkF3CL7viXJ
vm+lqbHMZjA3PicX3z7P+Z3Tc5Z+H1s66tuTQgif5DIlhB/JIZxyUypzQ/hv
XM2EcQOL2cIKdrKKvazlIJs4xG/Spp5gN9fZzyN+4fe4hs8cYVdeCNu8lik5
l33ZSYQwzV3OcI+zcY5zPOA8D7kQ+3ORxzyRJfUpl3nGldibq7zgGi+5ztFM
+/FGNuJ87C/5zjbJDxzmkzMP8Zaf4xr2cZVdHOeYtKq/spEDrGEPK9nBcjaz
iHXMiN/tscUrefX2Z/HOUuaML8alfGYJ/7GITyzkXxbwD3OZI7/V2fzFLP5k
go9M5wPTeM9U3nHMO+ymvP8Pb1+hWAk=
        "]], Line3DBox[CompressedData["
1:eJwl0jtMU1EYwPEP24GIDpTBsNHFuOFC2GRh1YFZFlaMdXGRkTDwEvFZJ+OE
E8HFV6m11qaQ0paGgIqvSUXwrYPGhV/j8M/vOze5N+ec3PRIZuhsW0RMaDsZ
8T4RscWKzqcifluPM2F9mSneZppLPM4CB1jnKb7lOw2b//EMD3ZFjLGbUzzG
m+znHd5lla91Xy+0rulDEQ84w4ec5SNeZI5zXOYl5jnPx6298ooK5qt8wmss
8jqf8gZLzPIZM4cjanyjsl6qqSF7u8dBLrCPWR7lJI/wAts5yr/O/Eenza94
kms8wTx7ucge3mJna/880HruG6ut9/TL3T9nQ5sdET+tN/iDTX5ng99Y41dW
+YUrrOizucw9lrjLIj+xwB3m+ZE5fuA591BP/v8f9gF0gVt7
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{3442, 3761, 1469, 3441, 5600, 3664, 3443, 5601, 3665, 3444, 
        5602, 3666, 3445, 5603, 3667, 3446, 5604, 3668, 3447, 5605, 5043, 
        5711, 3448, 5044, 5712, 3449, 5606, 3669, 3450, 5607, 3670, 3451, 
        5608, 3671, 3452, 5609, 3672, 3453, 5610, 3673, 3454, 5816, 3762, 
        3674, 3763}], 
       Line3DBox[{3456, 5045, 5713, 3455, 5611, 3675, 3457, 5612, 3676, 3458, 
        5613, 3677, 3459, 5614, 3678, 3460, 5615, 3679, 3461, 5616, 5046, 
        5714, 3462, 5047, 5715, 3463, 5048, 5716, 3464, 5617, 3680, 3465, 
        5618, 3681, 3466, 5619, 3682, 3467, 5620, 3683, 3468, 5621, 3684, 
        3469}], Line3DBox[{3471, 5049, 5717, 3470, 5050, 5718, 3472, 5622, 
        3685, 3473, 5623, 3686, 3474, 5624, 3687, 3475, 5625, 3688, 3476, 
        5626, 5051, 5719, 3477, 5052, 5720, 3478, 5053, 5721, 3479, 5054, 
        5722, 3480, 5627, 3689, 3481, 5628, 3690, 3482, 5629, 3691, 3483, 
        5630, 3692, 3484}], 
       Line3DBox[{3486, 5055, 5723, 3485, 5056, 5724, 3487, 5057, 5725, 3488, 
        5631, 3693, 3489, 5632, 3694, 3490, 5633, 3695, 3491, 5634, 5058, 
        5726, 3492, 5059, 5727, 3493, 5060, 5728, 3494, 5061, 5729, 3495, 
        5062, 5730, 3496, 5635, 3696, 3497, 5636, 3697, 3498, 5637, 3698, 
        3499}], Line3DBox[{3501, 5063, 5731, 3500, 5064, 5732, 3502, 5065, 
        5733, 3503, 5066, 5734, 3504, 5638, 3699, 3505, 5639, 3700, 3506, 
        5640, 5067, 5735, 3507, 5068, 5736, 3508, 5069, 5737, 3509, 5070, 
        5738, 3510, 5071, 5739, 3511, 5072, 5740, 3512, 5641, 3701, 3513, 
        5642, 3702, 3514}], 
       Line3DBox[{3516, 5073, 5741, 3515, 5074, 5742, 3517, 5075, 5743, 3518, 
        5076, 5744, 3519, 5077, 5745, 3520, 5643, 3703, 3521, 5644, 5078, 
        5746, 3522, 5079, 5747, 3523, 5080, 5748, 3524, 5081, 5749, 3525, 
        5082, 5750, 3526, 5083, 5751, 3527, 5084, 5752, 3528, 5645, 3704, 
        3529}], Line3DBox[{3533, 5646, 3705, 3531, 5647, 3706, 3535, 5648, 
        3707, 3537, 5649, 3708, 3539, 5650, 3709, 3541, 5651, 3710, 3543, 
        5653, 5654, 3711, 3545, 5655, 3712, 3547, 5656, 3713, 3549, 5657, 
        3714, 3551, 5658, 3715, 3553, 5659, 3716, 3555, 5660, 3717, 3557, 
        5661, 3718, 3559}], 
       Line3DBox[{3558, 5766, 5098, 3556, 5765, 5097, 3554, 5764, 5096, 3552, 
        5763, 5095, 3550, 5762, 5094, 3548, 5761, 5093, 3546, 5760, 5092, 
        3544, 5759, 5091, 5652, 3542, 5758, 5090, 3540, 5757, 5089, 3538, 
        5756, 5088, 3536, 5755, 5087, 3534, 5754, 5086, 3530, 5753, 5085, 
        3532}], Line3DBox[{3561, 5662, 3719, 3560, 5663, 3720, 3562, 5664, 
        3721, 3563, 5665, 3722, 3564, 5666, 3723, 3565, 5667, 3724, 3566, 
        5668, 5099, 5767, 3567, 1581, 3568, 5669, 3725, 3569, 5670, 3726, 
        3570, 5671, 3727, 3571, 5672, 3728, 3572, 5673, 3729, 3573, 5674, 
        3730, 3574}], 
       Line3DBox[{3576, 5100, 5768, 3575, 5675, 3731, 3577, 5676, 3732, 3578, 
        5677, 3733, 3579, 5678, 3734, 3580, 5679, 3735, 3581, 5680, 5101, 
        5769, 3582, 5102, 5770, 3583, 1597, 3584, 5681, 3736, 3585, 5682, 
        3737, 3586, 5683, 3738, 3587, 5684, 3739, 3588, 5685, 3740, 3589}], 
       Line3DBox[{3591, 5103, 5771, 3590, 5104, 5772, 3592, 5686, 3741, 3593, 
        5687, 3742, 3594, 5688, 3743, 3595, 5689, 3744, 3596, 5690, 5105, 
        5773, 3597, 5106, 5774, 3598, 5107, 5775, 3599, 1613, 3600, 5691, 
        3745, 3601, 5692, 3746, 3602, 5693, 3747, 3603, 5694, 3748, 3604}], 
       Line3DBox[{3606, 5108, 5776, 3605, 5109, 5777, 3607, 5110, 5778, 3608, 
        5695, 3749, 3609, 5696, 3750, 3610, 5697, 3751, 3611, 5698, 5111, 
        5779, 3612, 5112, 5780, 3613, 5113, 5781, 3614, 5114, 5782, 3615, 
        1629, 3616, 5699, 3752, 3617, 5700, 3753, 3618, 5701, 3754, 3619}], 
       Line3DBox[{3621, 5115, 5783, 3620, 5116, 5784, 3622, 5117, 5785, 3623, 
        5118, 5786, 3624, 5702, 3755, 3625, 5703, 3756, 3626, 5704, 5119, 
        5787, 3627, 5120, 5788, 3628, 5121, 5789, 3629, 5122, 5790, 3630, 
        5123, 5791, 3631, 1645, 3632, 5705, 3757, 3633, 5706, 3758, 3634}], 
       Line3DBox[{3636, 5124, 5792, 3635, 5125, 5793, 3637, 5126, 5794, 3638, 
        5127, 5795, 3639, 5128, 5796, 3640, 5707, 3759, 3641, 5708, 5129, 
        5797, 3642, 5130, 5798, 3643, 5131, 5799, 3644, 5132, 5800, 3645, 
        5133, 5801, 3646, 5134, 5802, 3647, 1661, 3648, 5709, 3760, 3649}], 
       Line3DBox[{3663, 3766, 1681, 3662, 5815, 5146, 3661, 5814, 5145, 3660, 
        5813, 5144, 3659, 5812, 5143, 3658, 5811, 5142, 3657, 5810, 5141, 
        3656, 5809, 5140, 5710, 3655, 5808, 5139, 3654, 5807, 5138, 3653, 
        5806, 5137, 3652, 5805, 5136, 3651, 5804, 5135, 3650, 5147, 5803, 
        3764, 3765}], 
       Line3DBox[{3768, 4080, 1908, 3767, 5930, 3990, 3769, 5931, 3991, 3770, 
        5932, 3992, 3771, 5933, 3993, 3772, 5934, 3994, 3773, 5935, 3995, 
        3774, 5936, 5148, 5817, 3775, 5937, 3996, 3776, 5938, 3997, 3777, 
        5939, 3998, 3778, 5940, 3999, 3779, 5941, 4000, 3780, 5259, 6033, 
        4001, 4081}], 
       Line3DBox[{3782, 5149, 5818, 3781, 1923, 3783, 5942, 4002, 3784, 5943, 
        4003, 3785, 5944, 4004, 3786, 5945, 4005, 3787, 5946, 4006, 3788, 
        5947, 5150, 5819, 3789, 5151, 5820, 3790, 5948, 4007, 3791, 5949, 
        4008, 3792, 5950, 4009, 3793, 5951, 4010, 3794, 5952, 4011, 3795}], 
       Line3DBox[{3797, 5152, 5821, 3796, 5153, 5822, 3798, 1939, 3799, 5953, 
        4012, 3800, 5954, 4013, 3801, 5955, 4014, 3802, 5956, 4015, 3803, 
        5957, 5154, 5823, 3804, 5155, 5824, 3805, 5156, 5825, 3806, 5958, 
        4016, 3807, 5959, 4017, 3808, 5960, 4018, 3809, 5961, 4019, 3810}], 
       Line3DBox[{3812, 5157, 5826, 3811, 5158, 5827, 3813, 5159, 5828, 3814, 
        5160, 5829, 3815, 5962, 4020, 3816, 5963, 4021, 3817, 5964, 4022, 
        3818, 5965, 5161, 5830, 3819, 5162, 5831, 3820, 5163, 5832, 3821, 
        5164, 5833, 3822, 5966, 4023, 3823, 5967, 4024, 3824, 5968, 4025, 
        3825}], Line3DBox[{3827, 5165, 5834, 3826, 5166, 5835, 3828, 5167, 
        5836, 3829, 5168, 5837, 3830, 1971, 3831, 5969, 4026, 3832, 5970, 
        4027, 3833, 5971, 5169, 5838, 3834, 5170, 5839, 3835, 5171, 5840, 
        3836, 5172, 5841, 3837, 5173, 5842, 3838, 5972, 4028, 3839, 5973, 
        4029, 3840}], 
       Line3DBox[{3842, 5174, 5843, 3841, 5175, 5844, 3843, 5176, 5845, 3844, 
        5177, 5846, 3845, 5178, 5847, 3846, 1987, 3847, 5974, 4030, 3848, 
        5975, 5179, 5848, 3849, 5180, 5849, 3850, 5181, 5850, 3851, 5182, 
        5851, 3852, 5183, 5852, 3853, 5184, 5853, 3854, 5976, 4031, 3855}], 
       Line3DBox[{3857, 5185, 5854, 3856, 5186, 5855, 3858, 5187, 5856, 3859, 
        5188, 5857, 3860, 5189, 5858, 3861, 5190, 5859, 3862, 2003, 3863, 
        5977, 5191, 5860, 3864, 5192, 5861, 3865, 5193, 5862, 3866, 5194, 
        5863, 3867, 5195, 5864, 3868, 5196, 5865, 3869, 5197, 5866, 3870}], 
       Line3DBox[{3874, 5978, 4032, 3872, 5979, 4033, 3876, 5980, 4034, 3878, 
        5981, 4035, 3880, 5982, 4036, 3882, 5983, 4037, 3884, 5984, 4038, 
        3886, 5985, 5206, 5876, 3888, 5986, 4039, 3890, 5987, 4040, 3892, 
        5988, 4041, 3894, 5989, 4042, 3896, 5990, 4043, 3898, 5991, 4044, 
        3900}], Line3DBox[{3899, 5882, 5212, 3897, 5881, 5211, 3895, 5880, 
        5210, 3893, 5879, 5209, 3891, 5878, 5208, 3889, 5877, 5207, 3887, 
        5875, 5874, 5205, 3885, 5873, 5204, 3883, 5872, 5203, 3881, 5871, 
        5202, 3879, 5870, 5201, 3877, 5869, 5200, 3875, 5868, 5199, 3871, 
        5867, 5198, 3873}], 
       Line3DBox[{3902, 5213, 5883, 3901, 5992, 4045, 3903, 5993, 4046, 3904, 
        5994, 4047, 3905, 5995, 4048, 3906, 5996, 4049, 3907, 5997, 4050, 
        3908, 5998, 5214, 5884, 3909, 5215, 5885, 3910, 5999, 4051, 3911, 
        6000, 4052, 3912, 6001, 4053, 3913, 6002, 4054, 3914, 6003, 4055, 
        3915}], Line3DBox[{3917, 5216, 5886, 3916, 5217, 5887, 3918, 6004, 
        4056, 3919, 6005, 4057, 3920, 6006, 4058, 3921, 6007, 4059, 3922, 
        6008, 4060, 3923, 6009, 5218, 5888, 3924, 5219, 5889, 3925, 5220, 
        5890, 3926, 6010, 4061, 3927, 6011, 4062, 3928, 6012, 4063, 3929, 
        6013, 4064, 3930}], 
       Line3DBox[{3932, 5221, 5891, 3931, 5222, 5892, 3933, 5223, 5893, 3934, 
        6014, 4065, 3935, 6015, 4066, 3936, 6016, 4067, 3937, 6017, 4068, 
        3938, 6018, 5224, 5894, 3939, 5225, 5895, 3940, 5226, 5896, 3941, 
        5227, 5897, 3942, 6019, 4069, 3943, 6020, 4070, 3944, 6021, 4071, 
        3945}], Line3DBox[{3947, 5228, 5898, 3946, 5229, 5899, 3948, 5230, 
        5900, 3949, 5231, 5901, 3950, 6022, 4072, 3951, 6023, 4073, 3952, 
        6024, 4074, 3953, 6025, 5232, 5902, 3954, 5233, 5903, 3955, 5234, 
        5904, 3956, 5235, 5905, 3957, 5236, 5906, 3958, 6026, 4075, 3959, 
        6027, 4076, 3960}], 
       Line3DBox[{3962, 5237, 5907, 3961, 5238, 5908, 3963, 5239, 5909, 3964, 
        5240, 5910, 3965, 5241, 5911, 3966, 6028, 4077, 3967, 6029, 4078, 
        3968, 6030, 5242, 5912, 3969, 5243, 5913, 3970, 5244, 5914, 3971, 
        5245, 5915, 3972, 5246, 5916, 3973, 5247, 5917, 3974, 6031, 4079, 
        3975}], Line3DBox[{3989, 4085, 6034, 5260, 3988, 5929, 5258, 3987, 
        5928, 5257, 3986, 5927, 5256, 3985, 5926, 5255, 3984, 5925, 5254, 
        3983, 5924, 5253, 6032, 3982, 2108, 3981, 5923, 5252, 3980, 5922, 
        5251, 3979, 5921, 5250, 3978, 5920, 5249, 3977, 5919, 5248, 3976, 
        5918, 4083, 4082, 4084}], 
       Line3DBox[{4087, 4399, 2347, 4086, 6148, 4309, 4088, 6149, 4310, 4089, 
        6150, 4311, 4090, 6151, 4312, 4091, 6152, 4313, 4092, 6153, 4314, 
        4093, 6154, 5261, 6035, 4094, 6155, 4315, 4095, 6156, 4316, 4096, 
        6157, 4317, 4097, 6158, 4318, 4098, 6159, 4319, 4099, 5372, 6251, 
        4320, 4400}], 
       Line3DBox[{4101, 5262, 6036, 4100, 2362, 4102, 6160, 4321, 4103, 6161, 
        4322, 4104, 6162, 4323, 4105, 6163, 4324, 4106, 6164, 4325, 4107, 
        6165, 5263, 6037, 4108, 5264, 6038, 4109, 6166, 4326, 4110, 6167, 
        4327, 4111, 6168, 4328, 4112, 6169, 4329, 4113, 6170, 4330, 4114}], 
       Line3DBox[{4116, 5265, 6039, 4115, 5266, 6040, 4117, 2378, 4118, 6171, 
        4331, 4119, 6172, 4332, 4120, 6173, 4333, 4121, 6174, 4334, 4122, 
        6175, 5267, 6041, 4123, 5268, 6042, 4124, 5269, 6043, 4125, 6176, 
        4335, 4126, 6177, 4336, 4127, 6178, 4337, 4128, 6179, 4338, 4129}], 
       Line3DBox[{4131, 5270, 6044, 4130, 5271, 6045, 4132, 5272, 6046, 4133, 
        5273, 6047, 4134, 6180, 4339, 4135, 6181, 4340, 4136, 6182, 4341, 
        4137, 6183, 5274, 6048, 4138, 5275, 6049, 4139, 5276, 6050, 4140, 
        5277, 6051, 4141, 6184, 4342, 4142, 6185, 4343, 4143, 6186, 4344, 
        4144}], Line3DBox[{4146, 5278, 6052, 4145, 5279, 6053, 4147, 5280, 
        6054, 4148, 5281, 6055, 4149, 2410, 4150, 6187, 4345, 4151, 6188, 
        4346, 4152, 6189, 5282, 6056, 4153, 5283, 6057, 4154, 5284, 6058, 
        4155, 5285, 6059, 4156, 5286, 6060, 4157, 6190, 4347, 4158, 6191, 
        4348, 4159}], 
       Line3DBox[{4161, 5287, 6061, 4160, 5288, 6062, 4162, 5289, 6063, 4163, 
        5290, 6064, 4164, 5291, 6065, 4165, 2426, 4166, 6192, 4349, 4167, 
        6193, 5292, 6066, 4168, 5293, 6067, 4169, 5294, 6068, 4170, 5295, 
        6069, 4171, 5296, 6070, 4172, 5297, 6071, 4173, 6194, 4350, 4174}], 
       Line3DBox[{4176, 5298, 6072, 4175, 5299, 6073, 4177, 5300, 6074, 4178, 
        5301, 6075, 4179, 5302, 6076, 4180, 5303, 6077, 4181, 2442, 4182, 
        6195, 5304, 6078, 4183, 5305, 6079, 4184, 5306, 6080, 4185, 5307, 
        6081, 4186, 5308, 6082, 4187, 5309, 6083, 4188, 5310, 6084, 4189}], 
       Line3DBox[{4193, 6196, 4351, 4191, 6197, 4352, 4195, 6198, 4353, 4197, 
        6199, 4354, 4199, 6200, 4355, 4201, 6201, 4356, 4203, 6202, 4357, 
        4205, 6203, 5319, 6094, 4207, 6204, 4358, 4209, 6205, 4359, 4211, 
        6206, 4360, 4213, 6207, 4361, 4215, 6208, 4362, 4217, 6209, 4363, 
        4219}], Line3DBox[{4218, 6100, 5325, 4216, 6099, 5324, 4214, 6098, 
        5323, 4212, 6097, 5322, 4210, 6096, 5321, 4208, 6095, 5320, 4206, 
        6093, 6092, 5318, 4204, 6091, 5317, 4202, 6090, 5316, 4200, 6089, 
        5315, 4198, 6088, 5314, 4196, 6087, 5313, 4194, 6086, 5312, 4190, 
        6085, 5311, 4192}], 
       Line3DBox[{4221, 5326, 6101, 4220, 6210, 4364, 4222, 6211, 4365, 4223, 
        6212, 4366, 4224, 6213, 4367, 4225, 6214, 4368, 4226, 6215, 4369, 
        4227, 6216, 5327, 6102, 4228, 5328, 6103, 4229, 6217, 4370, 4230, 
        6218, 4371, 4231, 6219, 4372, 4232, 6220, 4373, 4233, 6221, 4374, 
        4234}], Line3DBox[{4236, 5329, 6104, 4235, 5330, 6105, 4237, 6222, 
        4375, 4238, 6223, 4376, 4239, 6224, 4377, 4240, 6225, 4378, 4241, 
        6226, 4379, 4242, 6227, 5331, 6106, 4243, 5332, 6107, 4244, 5333, 
        6108, 4245, 6228, 4380, 4246, 6229, 4381, 4247, 6230, 4382, 4248, 
        6231, 4383, 4249}], 
       Line3DBox[{4251, 5334, 6109, 4250, 5335, 6110, 4252, 5336, 6111, 4253, 
        6232, 4384, 4254, 6233, 4385, 4255, 6234, 4386, 4256, 6235, 4387, 
        4257, 6236, 5337, 6112, 4258, 5338, 6113, 4259, 5339, 6114, 4260, 
        5340, 6115, 4261, 6237, 4388, 4262, 6238, 4389, 4263, 6239, 4390, 
        4264}], Line3DBox[{4266, 5341, 6116, 4265, 5342, 6117, 4267, 5343, 
        6118, 4268, 5344, 6119, 4269, 6240, 4391, 4270, 6241, 4392, 4271, 
        6242, 4393, 4272, 6243, 5345, 6120, 4273, 5346, 6121, 4274, 5347, 
        6122, 4275, 5348, 6123, 4276, 5349, 6124, 4277, 6244, 4394, 4278, 
        6245, 4395, 4279}], 
       Line3DBox[{4281, 5350, 6125, 4280, 5351, 6126, 4282, 5352, 6127, 4283, 
        5353, 6128, 4284, 5354, 6129, 4285, 6246, 4396, 4286, 6247, 4397, 
        4287, 6248, 5355, 6130, 4288, 5356, 6131, 4289, 5357, 6132, 4290, 
        5358, 6133, 4291, 5359, 6134, 4292, 5360, 6135, 4293, 6249, 4398, 
        4294}], Line3DBox[{4308, 4404, 6252, 5373, 4307, 6147, 5371, 4306, 
        6146, 5370, 4305, 6145, 5369, 4304, 6144, 5368, 4303, 6143, 5367, 
        4302, 6142, 5366, 6250, 4301, 2547, 4300, 6141, 5365, 4299, 6140, 
        5364, 4298, 6139, 5363, 4297, 6138, 5362, 4296, 6137, 5361, 4295, 
        6136, 4402, 4401, 4403}], 
       Line3DBox[{4406, 4718, 2786, 4405, 6366, 4628, 4407, 6367, 4629, 4408, 
        6368, 4630, 4409, 6369, 4631, 4410, 6370, 4632, 4411, 6371, 4633, 
        4412, 6372, 5374, 6253, 4413, 6373, 4634, 4414, 6374, 4635, 4415, 
        6375, 4636, 4416, 6376, 4637, 4417, 6377, 4638, 4418, 5485, 6469, 
        4639, 4719}], 
       Line3DBox[{4420, 5375, 6254, 4419, 2801, 4421, 6378, 4640, 4422, 6379, 
        4641, 4423, 6380, 4642, 4424, 6381, 4643, 4425, 6382, 4644, 4426, 
        6383, 5376, 6255, 4427, 5377, 6256, 4428, 6384, 4645, 4429, 6385, 
        4646, 4430, 6386, 4647, 4431, 6387, 4648, 4432, 6388, 4649, 4433}], 
       Line3DBox[{4435, 5378, 6257, 4434, 5379, 6258, 4436, 2817, 4437, 6389, 
        4650, 4438, 6390, 4651, 4439, 6391, 4652, 4440, 6392, 4653, 4441, 
        6393, 5380, 6259, 4442, 5381, 6260, 4443, 5382, 6261, 4444, 6394, 
        4654, 4445, 6395, 4655, 4446, 6396, 4656, 4447, 6397, 4657, 4448}], 
       Line3DBox[{4450, 5383, 6262, 4449, 5384, 6263, 4451, 5385, 6264, 4452, 
        5386, 6265, 4453, 6398, 4658, 4454, 6399, 4659, 4455, 6400, 4660, 
        4456, 6401, 5387, 6266, 4457, 5388, 6267, 4458, 5389, 6268, 4459, 
        5390, 6269, 4460, 6402, 4661, 4461, 6403, 4662, 4462, 6404, 4663, 
        4463}], Line3DBox[{4465, 5391, 6270, 4464, 5392, 6271, 4466, 5393, 
        6272, 4467, 5394, 6273, 4468, 2849, 4469, 6405, 4664, 4470, 6406, 
        4665, 4471, 6407, 5395, 6274, 4472, 5396, 6275, 4473, 5397, 6276, 
        4474, 5398, 6277, 4475, 5399, 6278, 4476, 6408, 4666, 4477, 6409, 
        4667, 4478}], 
       Line3DBox[{4480, 5400, 6279, 4479, 5401, 6280, 4481, 5402, 6281, 4482, 
        5403, 6282, 4483, 5404, 6283, 4484, 2865, 4485, 6410, 4668, 4486, 
        6411, 5405, 6284, 4487, 5406, 6285, 4488, 5407, 6286, 4489, 5408, 
        6287, 4490, 5409, 6288, 4491, 5410, 6289, 4492, 6412, 4669, 4493}], 
       Line3DBox[{4495, 5411, 6290, 4494, 5412, 6291, 4496, 5413, 6292, 4497, 
        5414, 6293, 4498, 5415, 6294, 4499, 5416, 6295, 4500, 2881, 4501, 
        6413, 5417, 6296, 4502, 5418, 6297, 4503, 5419, 6298, 4504, 5420, 
        6299, 4505, 5421, 6300, 4506, 5422, 6301, 4507, 5423, 6302, 4508}], 
       Line3DBox[{4512, 6414, 4670, 4510, 6415, 4671, 4514, 6416, 4672, 4516, 
        6417, 4673, 4518, 6418, 4674, 4520, 6419, 4675, 4522, 6420, 4676, 
        4524, 6421, 5432, 6312, 4526, 6422, 4677, 4528, 6423, 4678, 4530, 
        6424, 4679, 4532, 6425, 4680, 4534, 6426, 4681, 4536, 6427, 4682, 
        4538}], Line3DBox[{4537, 6318, 5438, 4535, 6317, 5437, 4533, 6316, 
        5436, 4531, 6315, 5435, 4529, 6314, 5434, 4527, 6313, 5433, 4525, 
        6311, 6310, 5431, 4523, 6309, 5430, 4521, 6308, 5429, 4519, 6307, 
        5428, 4517, 6306, 5427, 4515, 6305, 5426, 4513, 6304, 5425, 4509, 
        6303, 5424, 4511}], 
       Line3DBox[{4540, 5439, 6319, 4539, 6428, 4683, 4541, 6429, 4684, 4542, 
        6430, 4685, 4543, 6431, 4686, 4544, 6432, 4687, 4545, 6433, 4688, 
        4546, 6434, 5440, 6320, 4547, 5441, 6321, 4548, 6435, 4689, 4549, 
        6436, 4690, 4550, 6437, 4691, 4551, 6438, 4692, 4552, 6439, 4693, 
        4553}], Line3DBox[{4555, 5442, 6322, 4554, 5443, 6323, 4556, 6440, 
        4694, 4557, 6441, 4695, 4558, 6442, 4696, 4559, 6443, 4697, 4560, 
        6444, 4698, 4561, 6445, 5444, 6324, 4562, 5445, 6325, 4563, 5446, 
        6326, 4564, 6446, 4699, 4565, 6447, 4700, 4566, 6448, 4701, 4567, 
        6449, 4702, 4568}], 
       Line3DBox[{4570, 5447, 6327, 4569, 5448, 6328, 4571, 5449, 6329, 4572, 
        6450, 4703, 4573, 6451, 4704, 4574, 6452, 4705, 4575, 6453, 4706, 
        4576, 6454, 5450, 6330, 4577, 5451, 6331, 4578, 5452, 6332, 4579, 
        5453, 6333, 4580, 6455, 4707, 4581, 6456, 4708, 4582, 6457, 4709, 
        4583}], Line3DBox[{4585, 5454, 6334, 4584, 5455, 6335, 4586, 5456, 
        6336, 4587, 5457, 6337, 4588, 6458, 4710, 4589, 6459, 4711, 4590, 
        6460, 4712, 4591, 6461, 5458, 6338, 4592, 5459, 6339, 4593, 5460, 
        6340, 4594, 5461, 6341, 4595, 5462, 6342, 4596, 6462, 4713, 4597, 
        6463, 4714, 4598}], 
       Line3DBox[{4600, 5463, 6343, 4599, 5464, 6344, 4601, 5465, 6345, 4602, 
        5466, 6346, 4603, 5467, 6347, 4604, 6464, 4715, 4605, 6465, 4716, 
        4606, 6466, 5468, 6348, 4607, 5469, 6349, 4608, 5470, 6350, 4609, 
        5471, 6351, 4610, 5472, 6352, 4611, 5473, 6353, 4612, 6467, 4717, 
        4613}], Line3DBox[{4627, 4723, 6470, 5486, 4626, 6365, 5484, 4625, 
        6364, 5483, 4624, 6363, 5482, 4623, 6362, 5481, 4622, 6361, 5480, 
        4621, 6360, 5479, 6468, 4620, 2986, 4619, 6359, 5478, 4618, 6358, 
        5477, 4617, 6357, 5476, 4616, 6356, 5475, 4615, 6355, 5474, 4614, 
        6354, 4721, 4720, 4722}], 
       Line3DBox[{4725, 5037, 3225, 4724, 6584, 4947, 4726, 6585, 4948, 4727, 
        6586, 4949, 4728, 6587, 4950, 4729, 6588, 4951, 4730, 6589, 4952, 
        4731, 6590, 5487, 6471, 4732, 6591, 4953, 4733, 6592, 4954, 4734, 
        6593, 4955, 4735, 6594, 4956, 4736, 6595, 4957, 4737, 5598, 6687, 
        4958, 5038}], 
       Line3DBox[{4739, 5488, 6472, 4738, 3240, 4740, 6596, 4959, 4741, 6597, 
        4960, 4742, 6598, 4961, 4743, 6599, 4962, 4744, 6600, 4963, 4745, 
        6601, 5489, 6473, 4746, 5490, 6474, 4747, 6602, 4964, 4748, 6603, 
        4965, 4749, 6604, 4966, 4750, 6605, 4967, 4751, 6606, 4968, 4752}], 
       Line3DBox[{4754, 5491, 6475, 4753, 5492, 6476, 4755, 3256, 4756, 6607, 
        4969, 4757, 6608, 4970, 4758, 6609, 4971, 4759, 6610, 4972, 4760, 
        6611, 5493, 6477, 4761, 5494, 6478, 4762, 5495, 6479, 4763, 6612, 
        4973, 4764, 6613, 4974, 4765, 6614, 4975, 4766, 6615, 4976, 4767}], 
       Line3DBox[{4769, 5496, 6480, 4768, 5497, 6481, 4770, 5498, 6482, 4771, 
        5499, 6483, 4772, 6616, 4977, 4773, 6617, 4978, 4774, 6618, 4979, 
        4775, 6619, 5500, 6484, 4776, 5501, 6485, 4777, 5502, 6486, 4778, 
        5503, 6487, 4779, 6620, 4980, 4780, 6621, 4981, 4781, 6622, 4982, 
        4782}], Line3DBox[{4784, 5504, 6488, 4783, 5505, 6489, 4785, 5506, 
        6490, 4786, 5507, 6491, 4787, 3288, 4788, 6623, 4983, 4789, 6624, 
        4984, 4790, 6625, 5508, 6492, 4791, 5509, 6493, 4792, 5510, 6494, 
        4793, 5511, 6495, 4794, 5512, 6496, 4795, 6626, 4985, 4796, 6627, 
        4986, 4797}], 
       Line3DBox[{4799, 5513, 6497, 4798, 5514, 6498, 4800, 5515, 6499, 4801, 
        5516, 6500, 4802, 5517, 6501, 4803, 3304, 4804, 6628, 4987, 4805, 
        6629, 5518, 6502, 4806, 5519, 6503, 4807, 5520, 6504, 4808, 5521, 
        6505, 4809, 5522, 6506, 4810, 5523, 6507, 4811, 6630, 4988, 4812}], 
       Line3DBox[{4814, 5524, 6508, 4813, 5525, 6509, 4815, 5526, 6510, 4816, 
        5527, 6511, 4817, 5528, 6512, 4818, 5529, 6513, 4819, 3320, 4820, 
        6631, 5530, 6514, 4821, 5531, 6515, 4822, 5532, 6516, 4823, 5533, 
        6517, 4824, 5534, 6518, 4825, 5535, 6519, 4826, 5536, 6520, 4827}], 
       Line3DBox[{4831, 6632, 4989, 4829, 6633, 4990, 4833, 6634, 4991, 4835, 
        6635, 4992, 4837, 6636, 4993, 4839, 6637, 4994, 4841, 6638, 4995, 
        4843, 6639, 5545, 6530, 4845, 6640, 4996, 4847, 6641, 4997, 4849, 
        6642, 4998, 4851, 6643, 4999, 4853, 6644, 5000, 4855, 6645, 5001, 
        4857}], Line3DBox[{4856, 6536, 5551, 4854, 6535, 5550, 4852, 6534, 
        5549, 4850, 6533, 5548, 4848, 6532, 5547, 4846, 6531, 5546, 4844, 
        6529, 6528, 5544, 4842, 6527, 5543, 4840, 6526, 5542, 4838, 6525, 
        5541, 4836, 6524, 5540, 4834, 6523, 5539, 4832, 6522, 5538, 4828, 
        6521, 5537, 4830}], 
       Line3DBox[{4859, 5552, 6537, 4858, 6646, 5002, 4860, 6647, 5003, 4861, 
        6648, 5004, 4862, 6649, 5005, 4863, 6650, 5006, 4864, 6651, 5007, 
        4865, 6652, 5553, 6538, 4866, 5554, 6539, 4867, 6653, 5008, 4868, 
        6654, 5009, 4869, 6655, 5010, 4870, 6656, 5011, 4871, 6657, 5012, 
        4872}], Line3DBox[{4874, 5555, 6540, 4873, 5556, 6541, 4875, 6658, 
        5013, 4876, 6659, 5014, 4877, 6660, 5015, 4878, 6661, 5016, 4879, 
        6662, 5017, 4880, 6663, 5557, 6542, 4881, 5558, 6543, 4882, 5559, 
        6544, 4883, 6664, 5018, 4884, 6665, 5019, 4885, 6666, 5020, 4886, 
        6667, 5021, 4887}], 
       Line3DBox[{4889, 5560, 6545, 4888, 5561, 6546, 4890, 5562, 6547, 4891, 
        6668, 5022, 4892, 6669, 5023, 4893, 6670, 5024, 4894, 6671, 5025, 
        4895, 6672, 5563, 6548, 4896, 5564, 6549, 4897, 5565, 6550, 4898, 
        5566, 6551, 4899, 6673, 5026, 4900, 6674, 5027, 4901, 6675, 5028, 
        4902}], Line3DBox[{4904, 5567, 6552, 4903, 5568, 6553, 4905, 5569, 
        6554, 4906, 5570, 6555, 4907, 6676, 5029, 4908, 6677, 5030, 4909, 
        6678, 5031, 4910, 6679, 5571, 6556, 4911, 5572, 6557, 4912, 5573, 
        6558, 4913, 5574, 6559, 4914, 5575, 6560, 4915, 6680, 5032, 4916, 
        6681, 5033, 4917}], 
       Line3DBox[{4919, 5576, 6561, 4918, 5577, 6562, 4920, 5578, 6563, 4921, 
        5579, 6564, 4922, 5580, 6565, 4923, 6682, 5034, 4924, 6683, 5035, 
        4925, 6684, 5581, 6566, 4926, 5582, 6567, 4927, 5583, 6568, 4928, 
        5584, 6569, 4929, 5585, 6570, 4930, 5586, 6571, 4931, 6685, 5036, 
        4932}], Line3DBox[{4946, 5042, 6688, 5599, 4945, 6583, 5597, 4944, 
        6582, 5596, 4943, 6581, 5595, 4942, 6580, 5594, 4941, 6579, 5593, 
        4940, 6578, 5592, 6686, 4939, 3425, 4938, 6577, 5591, 4937, 6576, 
        5590, 4936, 6575, 5589, 4935, 6574, 5588, 4934, 6573, 5587, 4933, 
        6572, 5040, 5039, 5041}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1247, 1470, 5600, 1248, 1484, 5611, 1276, 5718, 1499, 1291, 
        5724, 1514, 1306, 5732, 1529, 1321, 5742, 1544, 1336, 5754, 1559, 
        5647, 1351, 1574, 5663, 1366, 1589, 5675, 1381, 5772, 1604, 1396, 
        5777, 1619, 1411, 5784, 1634, 1426, 5793, 1649, 1441, 5804, 1664, 
        1456}], Line3DBox[{1249, 1471, 5601, 1250, 1485, 5612, 1277, 1500, 
        5622, 1292, 5725, 1515, 1307, 5733, 1530, 1322, 5743, 1545, 1337, 
        5755, 1560, 5648, 1352, 1575, 5664, 1367, 1590, 5676, 1382, 1605, 
        5686, 1397, 5778, 1620, 1412, 5785, 1635, 1427, 5794, 1650, 1442, 
        5805, 1665, 1457}], 
       Line3DBox[{1251, 1472, 5602, 1252, 1486, 5613, 1278, 1501, 5623, 1293, 
        1516, 5631, 1308, 5734, 1531, 1323, 5744, 1546, 1338, 5756, 1561, 
        5649, 1353, 1576, 5665, 1368, 1591, 5677, 1383, 1606, 5687, 1398, 
        1621, 5695, 1413, 5786, 1636, 1428, 5795, 1651, 1443, 5806, 1666, 
        1458}], Line3DBox[{1253, 1473, 5603, 1254, 1487, 5614, 1279, 1502, 
        5624, 1294, 1517, 5632, 1309, 1532, 5638, 1324, 5745, 1547, 1339, 
        5757, 1562, 5650, 1354, 1577, 5666, 1369, 1592, 5678, 1384, 1607, 
        5688, 1399, 1622, 5696, 1414, 1637, 5702, 1429, 5796, 1652, 1444, 
        5807, 1667, 1459}], 
       Line3DBox[{1255, 1474, 5604, 1256, 1488, 5615, 1280, 1503, 5625, 1295, 
        1518, 5633, 1310, 1533, 5639, 1325, 1548, 5643, 1340, 5758, 1563, 
        5651, 1355, 1578, 5667, 1370, 1593, 5679, 1385, 1608, 5689, 1400, 
        1623, 5697, 1415, 1638, 5703, 1430, 1653, 5707, 1445, 5808, 1668, 
        1460}], Line3DBox[{1257, 1475, 5605, 1259, 1489, 5616, 1281, 1504, 
        5626, 1296, 1519, 5634, 1311, 1534, 5640, 1326, 1549, 5644, 1341, 
        1564, 5652, 5653, 1356, 1579, 5668, 1371, 1594, 5680, 1386, 1609, 
        5690, 1401, 1624, 5698, 1416, 1639, 5704, 1431, 1654, 5708, 1446, 
        1669, 5710, 1461}], 
       Line3DBox[{1261, 5712, 1477, 1262, 5715, 1491, 1283, 5720, 1506, 1298, 
        5727, 1521, 1313, 5736, 1536, 1328, 5747, 1551, 1343, 5760, 1566, 
        5655, 1358, 1581, 1373, 5770, 1596, 1388, 5774, 1611, 1403, 5780, 
        1626, 1418, 5788, 1641, 1433, 5798, 1656, 1448, 5810, 1671, 1463}], 
       Line3DBox[{1263, 1478, 5606, 1264, 5716, 1492, 1284, 5721, 1507, 1299, 
        5728, 1522, 1314, 5737, 1537, 1329, 5748, 1552, 1344, 5761, 1567, 
        5656, 1359, 1582, 5669, 1374, 1597, 1389, 5775, 1612, 1404, 5781, 
        1627, 1419, 5789, 1642, 1434, 5799, 1657, 1449, 5811, 1672, 1464}], 
       Line3DBox[{1265, 1479, 5607, 1266, 1493, 5617, 1285, 5722, 1508, 1300, 
        5729, 1523, 1315, 5738, 1538, 1330, 5749, 1553, 1345, 5762, 1568, 
        5657, 1360, 1583, 5670, 1375, 1598, 5681, 1390, 1613, 1405, 5782, 
        1628, 1420, 5790, 1643, 1435, 5800, 1658, 1450, 5812, 1673, 1465}], 
       Line3DBox[{1267, 1480, 5608, 1268, 1494, 5618, 1286, 1509, 5627, 1301, 
        5730, 1524, 1316, 5739, 1539, 1331, 5750, 1554, 1346, 5763, 1569, 
        5658, 1361, 1584, 5671, 1376, 1599, 5682, 1391, 1614, 5691, 1406, 
        1629, 1421, 5791, 1644, 1436, 5801, 1659, 1451, 5813, 1674, 1466}], 
       Line3DBox[{1269, 1481, 5609, 1270, 1495, 5619, 1287, 1510, 5628, 1302, 
        1525, 5635, 1317, 5740, 1540, 1332, 5751, 1555, 1347, 5764, 1570, 
        5659, 1362, 1585, 5672, 1377, 1600, 5683, 1392, 1615, 5692, 1407, 
        1630, 5699, 1422, 1645, 1437, 5802, 1660, 1452, 5814, 1675, 1467}], 
       Line3DBox[{1271, 1482, 5610, 1272, 1496, 5620, 1288, 1511, 5629, 1303, 
        1526, 5636, 1318, 1541, 5641, 1333, 5752, 1556, 1348, 5765, 1571, 
        5660, 1363, 1586, 5673, 1378, 1601, 5684, 1393, 1616, 5693, 1408, 
        1631, 5700, 1423, 1646, 5705, 1438, 1661, 1453, 5815, 1676, 1468}], 
       Line3DBox[{1273, 1678, 5816, 1679, 1274, 1497, 5621, 1289, 1512, 5630, 
        1304, 1527, 5637, 1319, 1542, 5642, 1334, 1557, 5645, 1349, 5766, 
        1572, 5661, 1364, 1587, 5674, 1379, 1602, 5685, 1394, 1617, 5694, 
        1409, 1632, 5701, 1424, 1647, 5706, 1439, 1662, 5709, 1454, 1681, 
        1682, 1683}], 
       Line3DBox[{1455, 1663, 1680, 5803, 1440, 1648, 5792, 1425, 1633, 5783, 
        1410, 1618, 5776, 1395, 1603, 5771, 1380, 1588, 5768, 1365, 5662, 
        1573, 1350, 5646, 1558, 5753, 1335, 1543, 5741, 1320, 1528, 5731, 
        1305, 1513, 5723, 1290, 1498, 5717, 1275, 1483, 5713, 1246, 1469, 
        1677, 1684}], 
       Line3DBox[{1462, 1670, 5809, 1447, 1655, 5797, 1432, 1640, 5787, 1417, 
        1625, 5779, 1402, 1610, 5773, 1387, 1595, 5769, 1372, 1580, 5767, 
        1357, 5654, 1565, 5759, 1342, 1550, 5746, 1327, 1535, 5735, 1312, 
        1520, 5726, 1297, 1505, 5719, 1282, 1490, 5714, 1260, 1476, 5711, 
        1258}], Line3DBox[{1686, 1909, 5930, 1687, 1923, 1715, 5822, 1938, 
        1730, 5827, 1953, 1745, 5835, 1968, 1760, 5844, 1983, 1775, 5855, 
        1998, 1790, 5868, 2013, 5979, 1805, 2028, 5992, 1820, 5887, 2043, 
        1835, 5892, 2058, 1850, 5899, 2073, 1865, 5908, 2088, 1880, 5919, 
        2103, 1895}], 
       Line3DBox[{1688, 1910, 5931, 1689, 1924, 5942, 1716, 1939, 1731, 5828, 
        1954, 1746, 5836, 1969, 1761, 5845, 1984, 1776, 5856, 1999, 1791, 
        5869, 2014, 5980, 1806, 2029, 5993, 1821, 2044, 6004, 1836, 5893, 
        2059, 1851, 5900, 2074, 1866, 5909, 2089, 1881, 5920, 2104, 1896}], 
       Line3DBox[{1690, 1911, 5932, 1691, 1925, 5943, 1717, 1940, 5953, 1732, 
        5829, 1955, 1747, 5837, 1970, 1762, 5846, 1985, 1777, 5857, 2000, 
        1792, 5870, 2015, 5981, 1807, 2030, 5994, 1822, 2045, 6005, 1837, 
        2060, 6014, 1852, 5901, 2075, 1867, 5910, 2090, 1882, 5921, 2105, 
        1897}], Line3DBox[{1692, 1912, 5933, 1693, 1926, 5944, 1718, 1941, 
        5954, 1733, 1956, 5962, 1748, 1971, 1763, 5847, 1986, 1778, 5858, 
        2001, 1793, 5871, 2016, 5982, 1808, 2031, 5995, 1823, 2046, 6006, 
        1838, 2061, 6015, 1853, 2076, 6022, 1868, 5911, 2091, 1883, 5922, 
        2106, 1898}], 
       Line3DBox[{1694, 1913, 5934, 1695, 1927, 5945, 1719, 1942, 5955, 1734, 
        1957, 5963, 1749, 1972, 5969, 1764, 1987, 1779, 5859, 2002, 1794, 
        5872, 2017, 5983, 1809, 2032, 5996, 1824, 2047, 6007, 1839, 2062, 
        6016, 1854, 2077, 6023, 1869, 2092, 6028, 1884, 5923, 2107, 1899}], 
       Line3DBox[{1696, 1914, 5935, 1697, 1928, 5946, 1720, 1943, 5956, 1735, 
        1958, 5964, 1750, 1973, 5970, 1765, 1988, 5974, 1780, 2003, 1795, 
        5873, 2018, 5984, 1810, 2033, 5997, 1825, 2048, 6008, 1840, 2063, 
        6017, 1855, 2078, 6024, 1870, 2093, 6029, 1885, 2108, 1900}], 
       Line3DBox[{1698, 1915, 5936, 1700, 1929, 5947, 1721, 1944, 5957, 1736, 
        1959, 5965, 1751, 1974, 5971, 1766, 1989, 5975, 1781, 2004, 5977, 
        1796, 5874, 2019, 5985, 1811, 2034, 5998, 1826, 2049, 6009, 1841, 
        2064, 6018, 1856, 2079, 6025, 1871, 2094, 6030, 1886, 2109, 6032, 
        1901}], Line3DBox[{1702, 1917, 5937, 1703, 5820, 1931, 1723, 5824, 
        1946, 1738, 5831, 1961, 1753, 5839, 1976, 1768, 5849, 1991, 1783, 
        5861, 2006, 1798, 5877, 2021, 5986, 1813, 5885, 2036, 1828, 5889, 
        2051, 1843, 5895, 2066, 1858, 5903, 2081, 1873, 5913, 2096, 1888, 
        5925, 2111, 1903}], 
       Line3DBox[{1704, 1918, 5938, 1705, 1932, 5948, 1724, 5825, 1947, 1739, 
        5832, 1962, 1754, 5840, 1977, 1769, 5850, 1992, 1784, 5862, 2007, 
        1799, 5878, 2022, 5987, 1814, 2037, 5999, 1829, 5890, 2052, 1844, 
        5896, 2067, 1859, 5904, 2082, 1874, 5914, 2097, 1889, 5926, 2112, 
        1904}], Line3DBox[{1706, 1919, 5939, 1707, 1933, 5949, 1725, 1948, 
        5958, 1740, 5833, 1963, 1755, 5841, 1978, 1770, 5851, 1993, 1785, 
        5863, 2008, 1800, 5879, 2023, 5988, 1815, 2038, 6000, 1830, 2053, 
        6010, 1845, 5897, 2068, 1860, 5905, 2083, 1875, 5915, 2098, 1890, 
        5927, 2113, 1905}], 
       Line3DBox[{1708, 1920, 5940, 1709, 1934, 5950, 1726, 1949, 5959, 1741, 
        1964, 5966, 1756, 5842, 1979, 1771, 5852, 1994, 1786, 5864, 2009, 
        1801, 5880, 2024, 5989, 1816, 2039, 6001, 1831, 2054, 6011, 1846, 
        2069, 6019, 1861, 5906, 2084, 1876, 5916, 2099, 1891, 5928, 2114, 
        1906}], Line3DBox[{1710, 1921, 5941, 1711, 1935, 5951, 1727, 1950, 
        5960, 1742, 1965, 5967, 1757, 1980, 5972, 1772, 5853, 1995, 1787, 
        5865, 2010, 1802, 5881, 2025, 5990, 1817, 2040, 6002, 1832, 2055, 
        6012, 1847, 2070, 6020, 1862, 2085, 6026, 1877, 5917, 2100, 1892, 
        5929, 2115, 1907}], 
       Line3DBox[{1712, 2117, 2118, 6033, 1713, 1936, 5952, 1728, 1951, 5961, 
        1743, 1966, 5968, 1758, 1981, 5973, 1773, 1996, 5976, 1788, 5866, 
        2011, 1803, 5882, 2026, 5991, 1818, 2041, 6003, 1833, 2056, 6013, 
        1848, 2071, 6021, 1863, 2086, 6027, 1878, 2101, 6031, 1893, 6034, 
        2120, 2121, 2122}], 
       Line3DBox[{1894, 2102, 5918, 2119, 1879, 2087, 5907, 1864, 2072, 5898, 
        1849, 2057, 5891, 1834, 2042, 5886, 1819, 2027, 5883, 1804, 5978, 
        2012, 5867, 1789, 1997, 5854, 1774, 1982, 5843, 1759, 1967, 5834, 
        1744, 1952, 5826, 1729, 1937, 5821, 1714, 1922, 5818, 1685, 1908, 
        2116, 2123}], 
       Line3DBox[{1902, 2110, 5924, 1887, 2095, 5912, 1872, 2080, 5902, 1857, 
        2065, 5894, 1842, 2050, 5888, 1827, 2035, 5884, 1812, 2020, 5876, 
        5875, 1797, 2005, 5860, 1782, 1990, 5848, 1767, 1975, 5838, 1752, 
        1960, 5830, 1737, 1945, 5823, 1722, 1930, 5819, 1701, 1916, 5817, 
        1699}], Line3DBox[{2125, 2348, 6148, 2126, 2362, 2154, 6040, 2377, 
        2169, 6045, 2392, 2184, 6053, 2407, 2199, 6062, 2422, 2214, 6073, 
        2437, 2229, 6086, 2452, 6197, 2244, 2467, 6210, 2259, 6105, 2482, 
        2274, 6110, 2497, 2289, 6117, 2512, 2304, 6126, 2527, 2319, 6137, 
        2542, 2334}], 
       Line3DBox[{2127, 2349, 6149, 2128, 2363, 6160, 2155, 2378, 2170, 6046, 
        2393, 2185, 6054, 2408, 2200, 6063, 2423, 2215, 6074, 2438, 2230, 
        6087, 2453, 6198, 2245, 2468, 6211, 2260, 2483, 6222, 2275, 6111, 
        2498, 2290, 6118, 2513, 2305, 6127, 2528, 2320, 6138, 2543, 2335}], 
       Line3DBox[{2129, 2350, 6150, 2130, 2364, 6161, 2156, 2379, 6171, 2171, 
        6047, 2394, 2186, 6055, 2409, 2201, 6064, 2424, 2216, 6075, 2439, 
        2231, 6088, 2454, 6199, 2246, 2469, 6212, 2261, 2484, 6223, 2276, 
        2499, 6232, 2291, 6119, 2514, 2306, 6128, 2529, 2321, 6139, 2544, 
        2336}], Line3DBox[{2131, 2351, 6151, 2132, 2365, 6162, 2157, 2380, 
        6172, 2172, 2395, 6180, 2187, 2410, 2202, 6065, 2425, 2217, 6076, 
        2440, 2232, 6089, 2455, 6200, 2247, 2470, 6213, 2262, 2485, 6224, 
        2277, 2500, 6233, 2292, 2515, 6240, 2307, 6129, 2530, 2322, 6140, 
        2545, 2337}], 
       Line3DBox[{2133, 2352, 6152, 2134, 2366, 6163, 2158, 2381, 6173, 2173, 
        2396, 6181, 2188, 2411, 6187, 2203, 2426, 2218, 6077, 2441, 2233, 
        6090, 2456, 6201, 2248, 2471, 6214, 2263, 2486, 6225, 2278, 2501, 
        6234, 2293, 2516, 6241, 2308, 2531, 6246, 2323, 6141, 2546, 2338}], 
       Line3DBox[{2135, 2353, 6153, 2136, 2367, 6164, 2159, 2382, 6174, 2174, 
        2397, 6182, 2189, 2412, 6188, 2204, 2427, 6192, 2219, 2442, 2234, 
        6091, 2457, 6202, 2249, 2472, 6215, 2264, 2487, 6226, 2279, 2502, 
        6235, 2294, 2517, 6242, 2309, 2532, 6247, 2324, 2547, 2339}], 
       Line3DBox[{2137, 2354, 6154, 2139, 2368, 6165, 2160, 2383, 6175, 2175, 
        2398, 6183, 2190, 2413, 6189, 2205, 2428, 6193, 2220, 2443, 6195, 
        2235, 6092, 2458, 6203, 2250, 2473, 6216, 2265, 2488, 6227, 2280, 
        2503, 6236, 2295, 2518, 6243, 2310, 2533, 6248, 2325, 2548, 6250, 
        2340}], Line3DBox[{2141, 2356, 6155, 2142, 6038, 2370, 2162, 6042, 
        2385, 2177, 6049, 2400, 2192, 6057, 2415, 2207, 6067, 2430, 2222, 
        6079, 2445, 2237, 6095, 2460, 6204, 2252, 6103, 2475, 2267, 6107, 
        2490, 2282, 6113, 2505, 2297, 6121, 2520, 2312, 6131, 2535, 2327, 
        6143, 2550, 2342}], 
       Line3DBox[{2143, 2357, 6156, 2144, 2371, 6166, 2163, 6043, 2386, 2178, 
        6050, 2401, 2193, 6058, 2416, 2208, 6068, 2431, 2223, 6080, 2446, 
        2238, 6096, 2461, 6205, 2253, 2476, 6217, 2268, 6108, 2491, 2283, 
        6114, 2506, 2298, 6122, 2521, 2313, 6132, 2536, 2328, 6144, 2551, 
        2343}], Line3DBox[{2145, 2358, 6157, 2146, 2372, 6167, 2164, 2387, 
        6176, 2179, 6051, 2402, 2194, 6059, 2417, 2209, 6069, 2432, 2224, 
        6081, 2447, 2239, 6097, 2462, 6206, 2254, 2477, 6218, 2269, 2492, 
        6228, 2284, 6115, 2507, 2299, 6123, 2522, 2314, 6133, 2537, 2329, 
        6145, 2552, 2344}], 
       Line3DBox[{2147, 2359, 6158, 2148, 2373, 6168, 2165, 2388, 6177, 2180, 
        2403, 6184, 2195, 6060, 2418, 2210, 6070, 2433, 2225, 6082, 2448, 
        2240, 6098, 2463, 6207, 2255, 2478, 6219, 2270, 2493, 6229, 2285, 
        2508, 6237, 2300, 6124, 2523, 2315, 6134, 2538, 2330, 6146, 2553, 
        2345}], Line3DBox[{2149, 2360, 6159, 2150, 2374, 6169, 2166, 2389, 
        6178, 2181, 2404, 6185, 2196, 2419, 6190, 2211, 6071, 2434, 2226, 
        6083, 2449, 2241, 6099, 2464, 6208, 2256, 2479, 6220, 2271, 2494, 
        6230, 2286, 2509, 6238, 2301, 2524, 6244, 2316, 6135, 2539, 2331, 
        6147, 2554, 2346}], 
       Line3DBox[{2151, 2556, 2557, 6251, 2152, 2375, 6170, 2167, 2390, 6179, 
        2182, 2405, 6186, 2197, 2420, 6191, 2212, 2435, 6194, 2227, 6084, 
        2450, 2242, 6100, 2465, 6209, 2257, 2480, 6221, 2272, 2495, 6231, 
        2287, 2510, 6239, 2302, 2525, 6245, 2317, 2540, 6249, 2332, 6252, 
        2559, 2560, 2561}], 
       Line3DBox[{2333, 2541, 6136, 2558, 2318, 2526, 6125, 2303, 2511, 6116, 
        2288, 2496, 6109, 2273, 2481, 6104, 2258, 2466, 6101, 2243, 6196, 
        2451, 6085, 2228, 2436, 6072, 2213, 2421, 6061, 2198, 2406, 6052, 
        2183, 2391, 6044, 2168, 2376, 6039, 2153, 2361, 6036, 2124, 2347, 
        2555, 2562}], 
       Line3DBox[{2341, 2549, 6142, 2326, 2534, 6130, 2311, 2519, 6120, 2296, 
        2504, 6112, 2281, 2489, 6106, 2266, 2474, 6102, 2251, 2459, 6094, 
        6093, 2236, 2444, 6078, 2221, 2429, 6066, 2206, 2414, 6056, 2191, 
        2399, 6048, 2176, 2384, 6041, 2161, 2369, 6037, 2140, 2355, 6035, 
        2138}], Line3DBox[{2564, 2787, 6366, 2565, 2801, 2593, 6258, 2816, 
        2608, 6263, 2831, 2623, 6271, 2846, 2638, 6280, 2861, 2653, 6291, 
        2876, 2668, 6304, 2891, 6415, 2683, 2906, 6428, 2698, 6323, 2921, 
        2713, 6328, 2936, 2728, 6335, 2951, 2743, 6344, 2966, 2758, 6355, 
        2981, 2773}], 
       Line3DBox[{2566, 2788, 6367, 2567, 2802, 6378, 2594, 2817, 2609, 6264, 
        2832, 2624, 6272, 2847, 2639, 6281, 2862, 2654, 6292, 2877, 2669, 
        6305, 2892, 6416, 2684, 2907, 6429, 2699, 2922, 6440, 2714, 6329, 
        2937, 2729, 6336, 2952, 2744, 6345, 2967, 2759, 6356, 2982, 2774}], 
       Line3DBox[{2568, 2789, 6368, 2569, 2803, 6379, 2595, 2818, 6389, 2610, 
        6265, 2833, 2625, 6273, 2848, 2640, 6282, 2863, 2655, 6293, 2878, 
        2670, 6306, 2893, 6417, 2685, 2908, 6430, 2700, 2923, 6441, 2715, 
        2938, 6450, 2730, 6337, 2953, 2745, 6346, 2968, 2760, 6357, 2983, 
        2775}], Line3DBox[{2570, 2790, 6369, 2571, 2804, 6380, 2596, 2819, 
        6390, 2611, 2834, 6398, 2626, 2849, 2641, 6283, 2864, 2656, 6294, 
        2879, 2671, 6307, 2894, 6418, 2686, 2909, 6431, 2701, 2924, 6442, 
        2716, 2939, 6451, 2731, 2954, 6458, 2746, 6347, 2969, 2761, 6358, 
        2984, 2776}], 
       Line3DBox[{2572, 2791, 6370, 2573, 2805, 6381, 2597, 2820, 6391, 2612, 
        2835, 6399, 2627, 2850, 6405, 2642, 2865, 2657, 6295, 2880, 2672, 
        6308, 2895, 6419, 2687, 2910, 6432, 2702, 2925, 6443, 2717, 2940, 
        6452, 2732, 2955, 6459, 2747, 2970, 6464, 2762, 6359, 2985, 2777}], 
       Line3DBox[{2574, 2792, 6371, 2575, 2806, 6382, 2598, 2821, 6392, 2613, 
        2836, 6400, 2628, 2851, 6406, 2643, 2866, 6410, 2658, 2881, 2673, 
        6309, 2896, 6420, 2688, 2911, 6433, 2703, 2926, 6444, 2718, 2941, 
        6453, 2733, 2956, 6460, 2748, 2971, 6465, 2763, 2986, 2778}], 
       Line3DBox[{2576, 2793, 6372, 2578, 2807, 6383, 2599, 2822, 6393, 2614, 
        2837, 6401, 2629, 2852, 6407, 2644, 2867, 6411, 2659, 2882, 6413, 
        2674, 6310, 2897, 6421, 2689, 2912, 6434, 2704, 2927, 6445, 2719, 
        2942, 6454, 2734, 2957, 6461, 2749, 2972, 6466, 2764, 2987, 6468, 
        2779}], Line3DBox[{2580, 2795, 6373, 2581, 6256, 2809, 2601, 6260, 
        2824, 2616, 6267, 2839, 2631, 6275, 2854, 2646, 6285, 2869, 2661, 
        6297, 2884, 2676, 6313, 2899, 6422, 2691, 6321, 2914, 2706, 6325, 
        2929, 2721, 6331, 2944, 2736, 6339, 2959, 2751, 6349, 2974, 2766, 
        6361, 2989, 2781}], 
       Line3DBox[{2582, 2796, 6374, 2583, 2810, 6384, 2602, 6261, 2825, 2617, 
        6268, 2840, 2632, 6276, 2855, 2647, 6286, 2870, 2662, 6298, 2885, 
        2677, 6314, 2900, 6423, 2692, 2915, 6435, 2707, 6326, 2930, 2722, 
        6332, 2945, 2737, 6340, 2960, 2752, 6350, 2975, 2767, 6362, 2990, 
        2782}], Line3DBox[{2584, 2797, 6375, 2585, 2811, 6385, 2603, 2826, 
        6394, 2618, 6269, 2841, 2633, 6277, 2856, 2648, 6287, 2871, 2663, 
        6299, 2886, 2678, 6315, 2901, 6424, 2693, 2916, 6436, 2708, 2931, 
        6446, 2723, 6333, 2946, 2738, 6341, 2961, 2753, 6351, 2976, 2768, 
        6363, 2991, 2783}], 
       Line3DBox[{2586, 2798, 6376, 2587, 2812, 6386, 2604, 2827, 6395, 2619, 
        2842, 6402, 2634, 6278, 2857, 2649, 6288, 2872, 2664, 6300, 2887, 
        2679, 6316, 2902, 6425, 2694, 2917, 6437, 2709, 2932, 6447, 2724, 
        2947, 6455, 2739, 6342, 2962, 2754, 6352, 2977, 2769, 6364, 2992, 
        2784}], Line3DBox[{2588, 2799, 6377, 2589, 2813, 6387, 2605, 2828, 
        6396, 2620, 2843, 6403, 2635, 2858, 6408, 2650, 6289, 2873, 2665, 
        6301, 2888, 2680, 6317, 2903, 6426, 2695, 2918, 6438, 2710, 2933, 
        6448, 2725, 2948, 6456, 2740, 2963, 6462, 2755, 6353, 2978, 2770, 
        6365, 2993, 2785}], 
       Line3DBox[{2590, 2995, 2996, 6469, 2591, 2814, 6388, 2606, 2829, 6397, 
        2621, 2844, 6404, 2636, 2859, 6409, 2651, 2874, 6412, 2666, 6302, 
        2889, 2681, 6318, 2904, 6427, 2696, 2919, 6439, 2711, 2934, 6449, 
        2726, 2949, 6457, 2741, 2964, 6463, 2756, 2979, 6467, 2771, 6470, 
        2998, 2999, 3000}], 
       Line3DBox[{2772, 2980, 6354, 2997, 2757, 2965, 6343, 2742, 2950, 6334, 
        2727, 2935, 6327, 2712, 2920, 6322, 2697, 2905, 6319, 2682, 6414, 
        2890, 6303, 2667, 2875, 6290, 2652, 2860, 6279, 2637, 2845, 6270, 
        2622, 2830, 6262, 2607, 2815, 6257, 2592, 2800, 6254, 2563, 2786, 
        2994, 3001}], 
       Line3DBox[{2780, 2988, 6360, 2765, 2973, 6348, 2750, 2958, 6338, 2735, 
        2943, 6330, 2720, 2928, 6324, 2705, 2913, 6320, 2690, 2898, 6312, 
        6311, 2675, 2883, 6296, 2660, 2868, 6284, 2645, 2853, 6274, 2630, 
        2838, 6266, 2615, 2823, 6259, 2600, 2808, 6255, 2579, 2794, 6253, 
        2577}], Line3DBox[{3003, 3226, 6584, 3004, 3240, 3032, 6476, 3255, 
        3047, 6481, 3270, 3062, 6489, 3285, 3077, 6498, 3300, 3092, 6509, 
        3315, 3107, 6522, 3330, 6633, 3122, 3345, 6646, 3137, 6541, 3360, 
        3152, 6546, 3375, 3167, 6553, 3390, 3182, 6562, 3405, 3197, 6573, 
        3420, 3212}], 
       Line3DBox[{3005, 3227, 6585, 3006, 3241, 6596, 3033, 3256, 3048, 6482, 
        3271, 3063, 6490, 3286, 3078, 6499, 3301, 3093, 6510, 3316, 3108, 
        6523, 3331, 6634, 3123, 3346, 6647, 3138, 3361, 6658, 3153, 6547, 
        3376, 3168, 6554, 3391, 3183, 6563, 3406, 3198, 6574, 3421, 3213}], 
       Line3DBox[{3007, 3228, 6586, 3008, 3242, 6597, 3034, 3257, 6607, 3049, 
        6483, 3272, 3064, 6491, 3287, 3079, 6500, 3302, 3094, 6511, 3317, 
        3109, 6524, 3332, 6635, 3124, 3347, 6648, 3139, 3362, 6659, 3154, 
        3377, 6668, 3169, 6555, 3392, 3184, 6564, 3407, 3199, 6575, 3422, 
        3214}], Line3DBox[{3009, 3229, 6587, 3010, 3243, 6598, 3035, 3258, 
        6608, 3050, 3273, 6616, 3065, 3288, 3080, 6501, 3303, 3095, 6512, 
        3318, 3110, 6525, 3333, 6636, 3125, 3348, 6649, 3140, 3363, 6660, 
        3155, 3378, 6669, 3170, 3393, 6676, 3185, 6565, 3408, 3200, 6576, 
        3423, 3215}], 
       Line3DBox[{3011, 3230, 6588, 3012, 3244, 6599, 3036, 3259, 6609, 3051, 
        3274, 6617, 3066, 3289, 6623, 3081, 3304, 3096, 6513, 3319, 3111, 
        6526, 3334, 6637, 3126, 3349, 6650, 3141, 3364, 6661, 3156, 3379, 
        6670, 3171, 3394, 6677, 3186, 3409, 6682, 3201, 6577, 3424, 3216}], 
       Line3DBox[{3013, 3231, 6589, 3014, 3245, 6600, 3037, 3260, 6610, 3052, 
        3275, 6618, 3067, 3290, 6624, 3082, 3305, 6628, 3097, 3320, 3112, 
        6527, 3335, 6638, 3127, 3350, 6651, 3142, 3365, 6662, 3157, 3380, 
        6671, 3172, 3395, 6678, 3187, 3410, 6683, 3202, 3425, 3217}], 
       Line3DBox[{3015, 3232, 6590, 3017, 3246, 6601, 3038, 3261, 6611, 3053, 
        3276, 6619, 3068, 3291, 6625, 3083, 3306, 6629, 3098, 3321, 6631, 
        3113, 6528, 3336, 6639, 3128, 3351, 6652, 3143, 3366, 6663, 3158, 
        3381, 6672, 3173, 3396, 6679, 3188, 3411, 6684, 3203, 3426, 6686, 
        3218}], Line3DBox[{3019, 3234, 6591, 3020, 6474, 3248, 3040, 6478, 
        3263, 3055, 6485, 3278, 3070, 6493, 3293, 3085, 6503, 3308, 3100, 
        6515, 3323, 3115, 6531, 3338, 6640, 3130, 6539, 3353, 3145, 6543, 
        3368, 3160, 6549, 3383, 3175, 6557, 3398, 3190, 6567, 3413, 3205, 
        6579, 3428, 3220}], 
       Line3DBox[{3021, 3235, 6592, 3022, 3249, 6602, 3041, 6479, 3264, 3056, 
        6486, 3279, 3071, 6494, 3294, 3086, 6504, 3309, 3101, 6516, 3324, 
        3116, 6532, 3339, 6641, 3131, 3354, 6653, 3146, 6544, 3369, 3161, 
        6550, 3384, 3176, 6558, 3399, 3191, 6568, 3414, 3206, 6580, 3429, 
        3221}], Line3DBox[{3023, 3236, 6593, 3024, 3250, 6603, 3042, 3265, 
        6612, 3057, 6487, 3280, 3072, 6495, 3295, 3087, 6505, 3310, 3102, 
        6517, 3325, 3117, 6533, 3340, 6642, 3132, 3355, 6654, 3147, 3370, 
        6664, 3162, 6551, 3385, 3177, 6559, 3400, 3192, 6569, 3415, 3207, 
        6581, 3430, 3222}], 
       Line3DBox[{3025, 3237, 6594, 3026, 3251, 6604, 3043, 3266, 6613, 3058, 
        3281, 6620, 3073, 6496, 3296, 3088, 6506, 3311, 3103, 6518, 3326, 
        3118, 6534, 3341, 6643, 3133, 3356, 6655, 3148, 3371, 6665, 3163, 
        3386, 6673, 3178, 6560, 3401, 3193, 6570, 3416, 3208, 6582, 3431, 
        3223}], Line3DBox[{3027, 3238, 6595, 3028, 3252, 6605, 3044, 3267, 
        6614, 3059, 3282, 6621, 3074, 3297, 6626, 3089, 6507, 3312, 3104, 
        6519, 3327, 3119, 6535, 3342, 6644, 3134, 3357, 6656, 3149, 3372, 
        6666, 3164, 3387, 6674, 3179, 3402, 6680, 3194, 6571, 3417, 3209, 
        6583, 3432, 3224}], 
       Line3DBox[{3029, 3434, 3435, 6687, 3030, 3253, 6606, 3045, 3268, 6615, 
        3060, 3283, 6622, 3075, 3298, 6627, 3090, 3313, 6630, 3105, 6520, 
        3328, 3120, 6536, 3343, 6645, 3135, 3358, 6657, 3150, 3373, 6667, 
        3165, 3388, 6675, 3180, 3403, 6681, 3195, 3418, 6685, 3210, 6688, 
        3437, 3438, 3439}], 
       Line3DBox[{3211, 3419, 6572, 3436, 3196, 3404, 6561, 3181, 3389, 6552, 
        3166, 3374, 6545, 3151, 3359, 6540, 3136, 3344, 6537, 3121, 6632, 
        3329, 6521, 3106, 3314, 6508, 3091, 3299, 6497, 3076, 3284, 6488, 
        3061, 3269, 6480, 3046, 3254, 6475, 3031, 3239, 6472, 3002, 3225, 
        3433, 3440}], 
       Line3DBox[{3219, 3427, 6578, 3204, 3412, 6566, 3189, 3397, 6556, 3174, 
        3382, 6548, 3159, 3367, 6542, 3144, 3352, 6538, 3129, 3337, 6530, 
        6529, 3114, 3322, 6514, 3099, 3307, 6502, 3084, 3292, 6492, 3069, 
        3277, 6484, 3054, 3262, 6477, 3039, 3247, 6473, 3018, 3233, 6471, 
        3016}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJztyLEJgDAARcGPbmEVJ3EHRxCss4IjO0K6gLapAveaB7df9byXJGVL1vSe
79+Dc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHPOOeecc84555xzzjnnnHM+vf/inHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnfMwbyinM1g==
     "],
    VertexTextureCoordinates->CompressedData["
1:eJztnX+oHtd5oG+FWbq7/sOwgToha7RBdZwQguO2xgTR0Rp7iZrgqiGwLbhF
pI1riuWIJNuaYDaibItJjDHXprVplhpBQyDL7odiJDt106+K44yda3t0PY7H
umNnPBqNZudOJzdsCGEpVnXPO+955zzyxU1tJ2k595/hufN9c84zP84573nn
m/lPH//kRz+xa2VlZfc7Vla2lxf+Ttz1vk//6oXlI9vLg+//1Qd/cf+xRPnL
3Yvn9+w/6Xn31972SycOfdtz9s13f3XP/nXPd7//m2uHNr7j+UN//vH2+KEN
z5e4IivPH3/4mbv37K89L2/9n2/fv9p4vuI/3valQxut5/9+6oO/tLrn/3ou
/+TfLo8f2vT8wQ8WH9k4/vee7x2/9OL589/zrL6HJ0/1VVZfZfVVVl9l9VVW
X2X1VVZfZfVVVl9l9VVWX2X1VVbfw3YcT8yP40F4cqm+yuqrrL7K6qusvsrq
q6y+yuqrrL7K6qusvsrqOztPT8zP04M4jvTkUn2V1VdZfZXVV1l9ldVXWX2V
1VdZfZXVV1l9Z9eh812b6q2+azhua/BSVl9l9VVWX2X1VVZfZfVVVl9l9VVW
X2X1VVbfNWtnTszbmYO4Dnme8jhm8ORSfZXVV1l9ldVXWX2V1VdZfZXVV1l9
Z+3oiXk7ehDtDK9DnqcZjiM9uVRfZfVVVl9l9VVWX2X1VVZfZfWd9RPOd9dU
D/XdhXZlF647ZfXdheO2C17K6qusvsrqq6y+yuqrrL7K6qusvsrqq+UeRD/B
dpTtTIbrkOcpj+Ml8ORSfZXVV1l9ldVXWX2V1XfWz5+Y9/MH0Q+yn2A7mqGd
4XXI8/QSHEd6cqm+yuqrrL7K6qusvrNxjPRH03Z9f4R+bzf6BWXfH6Fd2Y3r
Ttn3Rzhuu+Gl7Pujaen7o4l9fzSx748m9v2RjdNOzMdpBzGOYT/PfjBDP8F2
lO3MJbgOeZ7yOF4BTy7VV1l9ldV3Ng49MR+HHsQ4jeMY9vMZ+kH2E2xHL0E7
w+uQ5+kVOI705FJ9ldV3Ns52vnunz6nvXozL9mLcoqy+e9Hv7UW/oKy+e9Gu
7MV1p6y+e3Hc9sJLWX2V1XevxRHOd3X6v/quYty5inGZsvquol9fRb+nrL6r
aDdX0a4oq+8qzstVHDdl9VVWX7/9R//N2pX7jybVtFR/5VvuT+47tDH69fp9
5SU+p99X3mnJ8jVem21H4sNpPeuvnzuS/fkH3rN/NVk5JcvP/udPHz9+6Hue
df2d0/91vbKPh/n9qXz9PsvX7/vyGX+e8v9322f5ur0V/B3Zs391j8Rx7u8u
xyc9ZxdOnuMSB7i/u936dc+L7dUyjnR/ufv8hucfnd/++67ne9z3a89XbKP0
Y7PttZ6v314t7eBs+5ueb9n+uFxHs7+tizzvnTzVV1l9ldVXWX2V1VdZfZXV
V1l9ldU33F7rWX3D7W96Vt97g+O2BVbfk/A9Cd+T8D0J35PwPQnfk/A9Cd+T
8D0J35PwPQnfk/A9CV87T4vJQ32V1VdZfZXVV1l9ldVXWX2V1VdZfcPttZ7V
N9z+pmf1VVbfkPX4ruP4ruP4ruP4ruP4ruP4ruP4ruP4ruP4ruP4ruP4ruP4
ruP4ruP4ruP4Wjvz8FRP9VVWX2X1VVZfZfVVVl9l9VVWX2X1DbfXelbfcPub
ntVXWX1D1vN5A+fzBs7nDZzPGzifN3A+b+B83sD5vIHzeQPn8wbO5w2czxs4
nzdwPm/gfLZ+4h+meqivsvoqq6+y+iqrr7L6Kquvsvoqq2+4vdaz+obb3/Ss
vsrqG7JevzWu3xrXb43rt8b1W+P6rXH91rh+a1y/Na7fGtdvjeu3xvVb4/qt
cf1aP/+uqRz1VVZfZfVVVl9l9VVWX2X1VVZfZfUNt9d6Vt9w+5ue1VdZfUPW
9qpFe9WivWrRXrVor1q0Vy3aqxbtVYv2qkV71aK9atFetWivWrRXLdorG6f9
l2k76qusvsrqq6y+yuqrrL7K6qusvsrqG26v9ay+4fY3PauvsvqGrO3zJtrn
TbTPm2ifN9E+b6J93kT7vIn2eRPt8yba5020z5tonzfRPm+ifd5E+2zj7D+Y
Pqe+yuqrrL7K6qusvsrqq6y+yuqrrL7h9lrP6htuf9Oz+iqrb8j6t5WE8dFW
EsZHW0kYH20lYXy0lYTx0VYSxkdbyY/QT4Tx0VYSxkdbSRgfbSXX4zzNcRxv
gSeX4nc0eWhaqrnyMVfeiPVbnvX7D0+fC9u/0X+fzPL1e8ewnSMoV5e6vX1u
/eq0ndXpvP2eZ11/evq/rlcOy7Hv6//1+yxfvx+u178tX77+h+WH27O/GI/P
xz8xHo/x+Lx/jPF4jMfFN8bj8+3FeDzG48IxHhffGI/LdmI8Pm+fYzwe4/Gw
n4/x+PxzMR5fwV+Mx+fjnxiPx3h83j/GeDzG4+Ib4/H59mI8HuNx4RiPi2+M
x2U7MR6ft88xHo/xeNjPx3h8/rkYj6/gL8bj8/FPjMdjPD7vH2M8HuNx8Y3x
+Hx7MR6P8bhwjMfFN8bjsp0Yj8/b5xiPx3g87OdjPD7/XIzHZbmYP//rwt9y
e6nPP3Mcrk+xPsX6DOszrM+xPsf6AusLrC+xvgKX+HwFrvH5GusbrG+wvsX6
Fus7rO+wvsf6HusHrB+wfsT6EesX8+ebueMXcgrOwDm4AJfgClyDG3AL7sA9
eACP4MX8+WbON+QUnIFzcAEuwRW4BjfgFtyBe/AAHsGL+fPNnG/IKTgD5+AC
XIIrcA1uwC24A/fgATyCF/PnmznfkFNwBs7BBbgEV+Aa3IBbcAfuwQN4BC/m
zzdzviGn4AycgwtwCa7ANbgBt+AO3IMH8AhezJ9v5nxDTsEZOAcX4BJcgWtw
A27BHbgHD+ARvJg/38z5hpyCM3AOLsAluALX4AbcgjtwDx7AI3gxf76Z8w05
BWfgHFyAS3AFrsENuAV34B48gEfwYv58M+cbcgrOwDm4AJfgClyDG3AL7sA9
eACP4MX8+WbON+QUnIFzcAEuwRW4BjfgFtyBe/AAHsGL+fPNnG/IKTgD5+AC
XIIrcA1uwC24A/fgATyCF/PnmznfkFNwBs7BBbgEV+Aa3IBbcAfuwQN4BC/w
fK0lOAVn4BxcgEtwBa7BDbgFd+AePIAXWOp4+Sveb99n3nPL7Rtf8n7yHLuj
3m+Z/dUDjx76C++3cuOzr77bx5tlcuRT33/yffv/2PsdQPx14AvpNT/ny2+m
7X3F+1Wf/9q3D/vyu2n7R73fyqvf+t2v+/KHZJ8rb9V73eGu17/zfltunuNv
vd9lv/35BzeO/433u8z5/7W1v7/wl2urex71fle7/XHc++079dXz+1cf9n4P
IP6R7/+d9/vyjb/34BRXO7+D3UfXSl/+hfjwxpc+8Ygv/0I8ePT3z9/nyx+S
I+e//8Anfflj8tDNd17zYV/+Itk6+t9u2bP/Ke972Pk/6X1lnudb3veIG28+
4X1/3u2Pb3rfu77w67fsX33c+17u9s83vO9liH/E/ynve7nzf9L7in/qfa9y
+/MJ77s4Ol5T+vKH5Dq3fx/3vsvzd6xZ+Yvkl931esr7yvE+5X0fcf1x5n3F
/1nvK/7PeF/xf9r7iv+a930c8Y98/pT3/cgPhs9Z+RfiAff9zPtm7zr2kWle
xPmK/zPeV/yf9r7iv4bja/GP+D/vfcX/ee8r/rn3lfzPc9b+uvH3c95X9ofF
e0cQ/6TO3+KfS53/895X/J/3vvc6/9z75s4/975vc+fPc973N3/jj95++4bF
e4t//x+OHNo4bdev8z/tfcX/Re8r/i96X/EvvK/4v2D9jfN/wfvuRfzzP5z/
ae8r/qe9r/i/6H3F/0XvK/6F9xX/wvuK/wve97bPLB48fui73lf8X/a+4v+y
9xX/l7yv+L/kfcW/9L7ib/FemA+skxuc/3e9r/i/7H3F/2XvK/4veV/xf8n7
in/pfcW/9L73u/7oFe97rfN5xfsWbvzxCo7vK973HW78afHeY87X4r2bXfxh
8d7NiH/CZZMc/fAHPm3lt8n1bn+84n2b+r7fsvL75E/d/rF478rP/jCx8sdp
f1m89wN3/Cz+Ef8z3lf8z3hf8T+D43vG+4q/xXvib/HeY4h/Djp/i3/CZTv5
n/G+4n/G+4r/Ge8r/hbvib/Fex/9rzf8vw+tWvwj/hb/iP9Z7yv+Z72v+J/1
vuJ/1vuKv8V770D883Xnb/GP+Fv8Ey67yf+s9xX/s95X/M96X/G3eE+u1877
in/nfcW/877if877iv857yv+57yv+J/zvncg/nmn8++8r/h33lP8O+8bLvvJ
/5z3Ff9z3lf8z3nfy5avXLq6x+If8e+9r/j33lf8e+8r/hbvib/Fe+Jv8V6B
+OdO52/xj/j33lf8e+8p/r33DZfD5G/xnvhbvHe7a58t/hF/i3/Ef/C+4j94
X/EfvK/4W7wn/hbvXYv457Tzt/hH/C3+Ef/B+4r/4D3Ff/C+4XKc/C3ee+Kq
z125cdzinz9w/hb//Dvnb/HP/3b+o/c94PxH7yv+o/cVf4v37kH8c43zt/hn
3flb/POHzt/in8ud/+h9pf0bvae0/6P3W3n2Vw5e6+OTMTnydMj79HPT8uen
/6/ssHwm2F/ja8Vbs3zNAvdLalygf0usT7E+xfoM6zOsz7E+x/oC6wusL7G+
xPoK62twhc/X4Aafb7C+xfoW6zus77C+x/oe6wesH7B+xPoR6/V4Wr4t5BSc
gXNwAS7BFbgGN+AW3IF78AAewQvcD7oEp+AMnIMLcAmuwDW4AbfgDtyDB/AI
1uO7juO7juO7juO7juO7juO7juO7juO7juO7juO7juO7juO7juO7juO7juNr
8Vd4P+gSnIIzcA4uwCW4AtfgBtyCO3APHsAjWM9ny7eFnIIzcA4uwCW4Atfg
BtyCO3APHsAjeIH4bwlOwRk4BxfgEnxxvBlyA27BHbgHD+ARrNev5dtCTsEZ
OAcX4BJcgWtwA27BHbgHD+ARvMD9oEtwCs7AObgAl+AKXIMbcAvuwD14AI/g
Be4HXYJTcAbOwQW4BFfgGtyAW3AH7sEDeAQvcD/oEpyCM3AOLsAluALX4Abc
gjtwDx7AI1jbZ4s3Q07BGTgHF+ASXIFrcANuwR24Bw/gEbzA/aBLcArOwDm4
AJfgClyDG3AL7sA9eACPYI2ztrxvyCk4A+fgAlyCK3ANbsAtuAP34AF8cb6t
csfb8m1Ld31bvm0Z3HeaJ/tObH9glm/7xfn9nWVyxPEfw2+5V/12B+U3ye4T
8/LbZPft8/K7afuWb1sG5Q9TeZZv+5C7Xi3fFi7T5LA73pZv23L+lm876L5v
+bbM7Y9Zvs0VZ/m2BeLJ3wzKb5LLgvLb5KGg/C657MS8/D45EpQ/JFtB+WNy
IChfxxOWbxN/y7eFy2w6vpZvu8Nt3vJtV7vtW76tc/vH8m0PId57KCi/mfwt
33Z5UH437U/Lt90VlD9M+9fybVtB+YvkNvf5U/C1fJvcbmz5tkumpfqKv+Xb
xN/ybeJv+bYO8d5ngvKb5EBQfjt93/Jtlwbl95O/5dvuCsofk+uC8vX4Wvwj
/pZvE3/Lt4m/5dvCZZGUzsfybY+4+li890XEe18Mym+m/WX5to8F5XeTv+Xb
Lg3KH6b9afm2x4Pydfxk+Tbxt3yb+Fu+Tfwt3yb+lm8Ll+Xkb/m2xxDvPRaU
30z+lm+7Iyi/m/wt33Z1UP4w+Vu+rQvK1/GExT/ib/k28bd8m/hbvk38Ld8m
/pZvC5fV1N5bvFcF5TeTv+XbvhiU303+lm/7WFD+MPlbvu3SoPxF8qqLhyzf
Jj6Wb5PfB7yC42v5Nql+BV/Lt7mP73+9+yst/jkclN9O+8PybTcF5ffT/rF8
23uD8sfkgaB8vX4t/hF/y7eJv+XbxP8Mjq/l28Tf4j3xt3jvfsR79wfl6/2k
Fv8cDsrvJn/Lt90UlD9M/hbvvTcoX+M9i3/E3+If8bd8m/hbvk38Ld8m/pZv
E3+L965EvHdlUH4z+Vv8s2taqu/hoPx+8rd8201B+ePkz3jP8m3ib/k28bd8
m/hbvk38Ld8m/pZvE3/Ltz2CeO+RoPxm8rd82/1B+Xq/sOXbDgflD5O/5dtu
CsrXeM/iH/G3fJv4W75N/C3fJv4W74m/xXvib/HeryHe+7Wg/Gbyt3zblUH5
3eRvebZd01J9Dwflj5M/4z2Lf8Tf4h/xt3yb+Fu+Tfwt3yb+Fu+J/+z+SsR7
ZVB+M/lb/PNIUH43+Vu+7f6gfL0f3PJth4PyF4kbfs/ybVK+5dvkfLR8m1yP
lm+T9sjybdIeW75Ny1Xf2xHvfSoov5mOh+XbbgrK76br0fJt7w3KHyZ/y7fJ
79Esv7ZyZcgPuePzf/znZf7O4sVdQf3H6XeF34MX4y39i/m2mG+bc8y3xXzb
nGO+Lebb5hzzbTHfNueYb4v5tnk8FPNtMd8255hvCznm23YH5cd8W8y3zcuP
+baYb9vmmG9T35hv295+zLepr/jHfJv6xnzbvPyYb4v5tnn5Md8W823zv5hv
i/m2Ocd8W8y3zTnm22K+LebbYr4t5tvUN+bbwvgr5tvmHPNtMd8255hvC5cx
3xbzbdsbiPk29Y35tjDei/m2efkx3xbzbfPyY74t5tu2Oebb1Dfm27a/EPNt
oVfMt+n6mG+bc8y3xXzbnGO+Lebb5hzzbTHfNueYb4v5tjnHfFvMt8055ttC
jvm2qZyYb5v8Yr5tXn7Mt8V827z8mG+L+bbtCsR8m/rGfNv2BmK+TX1jvm1e
fsy3xXzbvPyf3XzbweA91u7/J+bvdfty8B7oxfRebZv3z4L3CC+Su4P37F6I
e4L30C6mca/1Qx8P3mO6SJbBez4XyRXBezAXr/Pe+kXyQbz3PPRbwm8JvyX8
lvBbwm8JvyX8lvBbwm8JvyX8lvBbwu9CP4b3uoe+KXxT+KbwTeGbwjeFbwrf
FL4pfFP4pvBN4ZvCN4VvCt8Mvhl8M/hm8M3gm8E3g28G3wy+GXwz+GbwzeCb
wTeDbw7fHL45fHP45vDN4ZvDN4dvDt8cvjl8c/jm8M3hm8O3gG8B3wK+BXwL
+BbwLeBbwLeAbwHfAr4FfAv4FvAt4FuCK/iX4Ar7owRX2D8luML+KsEV9l8J
rrA/S3CF/VuCK+zvElxh/5fgCsejBFc4PiW4wvEqwRWOXwmucDxLcIXjWeP4
1TheNY5PjeNRY//X2N819m+N/Vlj/9XYXzX2T439UcO/hm8N3wa+DXwb+Dbw
beDbwLeBbwPfBr4NfBv4NvBt4NvAt4FvC98Wvi18W/i28G3h28K3hW8L3xa+
LXxb+LbwbeHbwreDbwffDr4dfDv4dvDt4NvBt4NvB98Ovh18O/h28O3g28O3
h28P3x6+PXx7+Pbw7eHbw7eHbw/fHr49fHv49vAd4DvAd4DvAN8BvgN8B/gO
8B3gO8B3gO8A3wG+A3wH+I7wG+E3wm+E3wi/EX4j/Eb4jfAb4TfCb4TfCL8x
ucN9X/NAi2TLvcf8Kc+/7L5/yrO859ziOXkv/Gmst3hN3hPf4vOdZ3nP/Cyu
D95Dv0geD947ru8pt3yZ1P9JsOVdpP7Pe5b6nQZbvCX1tXkyqW/vWepr8dat
wXvjl1P9LJ8lxy/zLO+1t7zIda5+L3r+oauPzct9zNXH5q2OufoMni8N3lOf
Io+k8UfuWcq3vISUZ/NgUp7NE/2v4L33Gu9Yvka2X3iW7dm80gG3PZt3ke9b
vkP2v83DHMD49iGMVy/H+HQN49G7MP68AePNcJ79wvgL48mvY/z4TowX78T4
8DTGg9dh/HcPx3tfSK/5OT/fUidX/cJfrtn1V0++T3m+7Lc//6Bdf/Xka+M7
8T3t+Xecj43fHnM+Nn4Tn86z+Nj4TXxs/PZ+52Pjt8WNv/egXX/NVP8nPR/4
wfA5u/6aqf7Pe5b6W95K6mvjLamvzRO/w9W39/xZV18bb627+tp4S+qn11+b
3P+FX7/Frr92qp/lBaV+L3qW+ti8tNTH5m1l/w2e/9DVx8Y/xbuOfcSuv24q
P/cs5VteTsqzeWApz+ZJL3fljZ5l+5a3lO0XnmV7Nq/6Nbc9m3eU71ve72b3
eZuHPPLMrxy81s8zantr85Jh/7FIjqzNP+8+NxsPjMlTQfs9TvOawfzi7G+R
3BXk7RdJFuS1F8ndQd73Qn8S5EUXSR7kDRfJj3Bf4z1B3mmRXIH74ha4b+x6
3FeVB/Pei2le1fqr0O/i3ymEfkv4LeG3hN8Sfkv4LeG3hN8Sfkv4LeG3hB/v
M1rC9+LfXYS+KXxT+KbwTeGbwjeFbwrfFL4pfFP4pvDlfVQpfC/+HUnom8E3
g28G3wy+GXwz+GbwzeCbwTeDbwZf3ieWwffi38WEvjl8c/jm8M3hm8M3h28O
3xy+OXxz+Obw5X1wOXwv/p1P6FvAt4BvAd8CvgV8C/gW8C3gW8C3gG8BX97n
V8D34t8thb4lfEv4lvAt4VvCt4RvCd8SviV8S/iW8OV9jCV8K/DFv8MKucb+
qMA19k8FrrG/KnCN/VeBa+zPClxj/1bgGvu7AtfY/xW4xvGowDWOTwWucbwq
cI3jV4F53+nF96WGx/Pi38mFx6vB8WlwPBrs/wb7u8H+bbA/G+y/Bvurwf5p
sD8a+PM+2wa+F//uL/Rt4dvCt4VvC98Wvi18W/i28G3h28K3hS/vI27he/Hv
GEPfDr4dfDv4dvDt4NvBt4NvB98Ovh18O/jyPukOvhf/LjP07eHbw7eHbw/f
Hr49fHv49vDt4dvDt4cv7wPv4Xvx70xD3wG+A3wH+A7wHeA7wHeA7wDfAb4D
fAf48j73Ab4j/Eb4jfAb4TfCb4TfCL8RfiP8RviN8Bvhx/tKxmSf+77NL4qf
zS/e6r5v84viN5tfdPWx+UUpn/Hc7P6Q4L46/b7NN14f3Jel27P47bbgPpnF
VH+bX7zBsc0vSv1tflHqb/OLUv7Lnu8J7vPT+KzD522+8frgPqrldN+ZzTfu
dt+3+UWpn80vSv1sflHqZ/ft3hPcd6fxk803LoL7tvR3Ujbf+E73eZtflPJt
flHKf8nzPcF9bhq/2Hzjw8F9UtnkZ/OLsn27r/ie4L6xfPr8CNZxoI6vbb7x
suk4C9f4XUaN3y3UuK+/xn3vNe4Lr3HfdI37bOupfjZ+Ohacr/Xka+Oj7wTn
az3dF2fzc+H8eIPfWTT4HUKD+/Qb3Mfe4D7vBvfJNlP9bb7uWHD+NlP9bfwS
3qfXYL68xe8iWvxuoMV99S3uO29xH2s71c/m744F53OL+wRbzJ93+J1Ch/v4
O9zn3uE+0m4q3+bzjgfnd4f59B6/C+hx33yP+zT1d582vxfOrw+4z15/B2vz
fSuObb5PlrP7AoPfSfG+w4uf83Ar7jOM831zvzjfF+f74nzf8Tjf5znO9819
43xfnO+bc5zvC33jfF/oG+f74nzf3DfO98X5vjjfF+f74nxfyHG+L9x+nO8T
jvN9cb5v7hfn++J83/wvzvfF+b65b5zvi/N98+MT5/vifF+c74vzfXG+L/SJ
833Kcb5vPl8S5/vifF+c74vzfXG+TznO98X5vjjfF+f7wu3F+b5w+3G+L/SJ
8326Ps73zY9XnO+L831xvu94nO/zHOf74nxfnO+L833Kcb4vzvfF+b5//nzf
be55p9Ze3++eB/iKbd89n/Mr1v6554dae3mte56kvVfrz9z3z3je95n33HK7
f69iOj2f8W88/8g9L9TaO3lepb2XS56/ae+tku2f9SzP8z1q7ZGr7197ludp
PuFZtmftnTwv0977JeWfweftvVEPuPLPeT6S/dUDj/r3QubJ1e75mY96Ft9v
epb6POP5iCvf2kt5HqW9j0HqZ+/lkvrZe6ukfvZeJ6mfza8sb3j21Xf791QW
ydXueBz3/IB73uTjnqW+T3uW560+51meD2vttTxf1d6nIPW3+RGpv71XS+pv
752S+tv8iNTf5kdWPvX9J9/nz+8y2Xfqq+ftPZTl9PzYb3gWnzXPsr9t/kN8
XvB8ybRUlufH2vsLxM/mP8TP5j/Ez96bJX42/yF+Nv8hfn+P+lj/s3Tnk15v
zVR/a98f+vAHPm3XW5MsP/+1bx/211ebHOg+ulb666udns9q7e/1rjx775xs
74znyp0vej11ycEbX/rEI/566pKr3PnzhGc5X6x9ber7fsuup24qz97zJuWd
9bzy6rd+9+v++umTw0d///x9/vq5EL8cHa8p/fXTT+U/41mev2rt75+6/WXP
U5f62HvlpD723jWpzznPcr7p9XJh/H/++w980l8vQ3KdO/8e9yz1e9rz29z5
+JxneZ6rte9XfvaHiV0vw1Rfi2ekvvYeOKmvvSdN6mvxzL0333nNh/31MCbp
+TvW7HoYp/queb75N/7o7bdvWHwi9X3BszxP1t6X9ZQ7f+x55le5+lt8Iuen
xSetq7+9x03qb/HJUVd/i0+udsuFZ3nvlfU/4XuC9T3Q1t/I562/Cd8jzPfu
6nuyrX+R7Vn/8v/d9qx/kffMWv8i9bH+Rd6DZv2LxHPPepbxuPUvUr71L9If
W/8i5Vv/shK8dzif3vtq/Yv4Wf8i9bH+RcZT1p/IeM/6ExmvWn8i9bH+ROoz
609kwGL9gdu+9SdXudXWn0j9rD8J3wNbTOMv6z+kvtZ/SH2t/5D6Wv8h9bX+
Q+o76z+C8VE5lWf9hxyPb2C99R/he2r5HtdyGq9V+L71F+Jj/YX4WH8hPtZf
iI/1F+LD+fLF9F7rairf5svvxfx3gfnuezG//TDmswvMX/8D5qvD96hqvGTz
1bsxP30M89E3YP75O5hvvhXzyyvBe7obvLe1wXtNm6QKrv82ORJc/y2u/xbv
QW3xntAW7yHv8N7uDu+17nC9d3ivaof3jnZ4L2eH673He8F7vDe7x3ul++l4
Wv8Xvse1x3tOe7wHtMd7Mntc7wPeSz7gvd0D3mut7/W0/vBdwfU+4L2yA967
OuC9pAPe2zngvZZaH+sPq+D6Hqf2yfrD8PoecX2PuL7Hqf7W/z0cXN/jdPyt
/yuC63vEezdHXN/6nmKbr4v9YewPY38Y+0Pl2B/G/jD2h7E/VI79YewPY38Y
+0Pl2B/G/jD2h7E/VI794fZf7A+VY38Y+8N/zf2hLJd+vSxTcAbOwQW4BDfg
FtyBe/AAXmKZgjNwDi7AJbgFd+AePIC5X1MsM3AOLsAluAP34AE87lB+hvIz
lJ+h/AzlZSgvQ3ncfo7t59h+ju3l2B6/X+D7BT7P81KvsyU4BWfgHFyAyx2W
1Q7LGtyAW3AH7sEDeAQvUO4SnIIzcA4uwCW4AbfgDtyDB/C4Q/0b1L9B/RvU
v0H9G9S/QX0b1LdBfRvUt0F9Wb8W9WtRvxb1a1G/FvVpUZ8W9WlRH5bfofwO
5Xcov0N5HcrrUB6332P7PbbfY3s9tsfvD/j+gM9z/etdFwss2U7wuuF5uFM/
yn6A7Q6vw53Om536ZfZ7bOfZrvE653Wz03my0ziA/Sz7NfYDbFfZzvC65XWy
03m107iE/T77WfZ77GfY7rMdZLvC65jX1U7n8U7jKI5TOC5gP81+lf0k+y22
42wX2Q6xXeB1vNN1x/J53bEfZD+y0ziS4zb2o+yH2M5zHMpxH8dd7JfZr7Hf
YLvNcS7HlRzXcdzFcQD7UfZT7CfYjnOczXEtx5Uc93HcxnEJ+3X2m+y32K+w
X7D7H8P6cpzLcSjHkRwnsn/guIP9OvtV9nvst9gvjVj+U/ujN9r/vNX9DZc/
7f7mZ71/+Zfen/yk+4+fVDz3T43faix/UvHcTv0jl6/XX75e/8jlj9tf/rj9
I5dvtL98o/0jl292f/lm949cvtX95VvdP77V85M7XVdv1nzlmz0/yXbvzZ6v
fKPzk2yH3+h85Y87P8l2/8edr3y9+Un2I683X8l+k/0Oryv2Qz/p+Tv2a//S
5/MYT/6sz+9x3PDTnu/juOWtnv/juOiNzgdyXMV+huMsxmP8f4zPQo7xWcgx
PpNljM9eu9wYn4Uc4zNZxvhMljE+CznGZ6+9/RifyTLGZyHH+CzkGJ/JMsZn
YfkxPgvrF+Oz0CfGZ+HnY3wWlh/js7C+MT4L6x/js7B+MT4Ltx/jM1nG+Czc
bozPXru8GJ+Fn4/xWVh+jM/C+sb4LPSJ8Vn4vRifvfYyxmchx/gs5BifhRzj
s3C7MT57bZ8Yn4X1jfFZuP2ffnz2jyUY14Y=
     "]], {{
     {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-76.5063962, 38.9722814, 231.0958904109589}, {-81.375789, 
       28.533513, 222.94520547945206`}, {-99.3700532665052, 31.481788183144, 
       211.43835616438358`}, {-97.2964669, 33.1717156, 
       210.47945205479454`}}]}, 
     {RGBColor[0.7926498, 0.5499369, 0.1278459], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-83.1022365, 42.3830375, 172.6027397260274}, {-80.2472396, 
       26.3150829, 166.84931506849315`}, {-82.8041995, 37.8120478, 
       164.93150684931507`}, {-77.802346917939, 40.8757813645164, 
       158.6986301369863}}]}, 
     {RGBColor[0.5041629000000001, 0.6224121, 0.1753965], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-122.1819931, 39.9281988, 
       122.73972602739727`}, {-99.3700532665052, 31.481788183144, 
       118.42465753424658`}, {-115.2640448, 36.2277116, 
       101.64383561643837`}, {-96.747944, 33.0507687, 91.57534246575342}}]}, 
     {RGBColor[0.8302733999999999, 0.3470634, 0.18826110000000001`], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-106.103175196499, 34.4274140766016, 
       49.863013698630134`}, {-81.375789, 28.533513, 
       45.06849315068493}, {-88.920118, 32.829842, 40.75342465753425}}]}, 
     {RGBColor[0.47563919999999993`, 0.4235616, 0.6312158999999999], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-95.3863425, 29.7804724, 16.78082191780822}, {-89.6122696, 
       44.8741579, 9.10958904109589}}]}}, {}, {}, {}, {}}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1.2, 0.7, 2},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{334.78595129580367`, 560.3085789940145},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-130, -65}, {25, 50}, {0, 232.05479452054794`}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, {{0., 
      FormBox["\"03/03/17\"", TraditionalForm]}, {167.31150684931507`, 
      FormBox["\"02/14/18\"", TraditionalForm]}, {180.5386301369863, 
      FormBox["\"03/14/18\"", TraditionalForm]}, {185.17972602739727`, 
      FormBox["\"03/24/18\"", TraditionalForm]}, {198.40684931506848`, 
      FormBox["\"04/20/18\"", TraditionalForm]}, {232.05479452054794`, 
      FormBox["\"06/30/18\"", TraditionalForm]}}},
  ViewPoint->{-0.4, -1.1, 2.3},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.7397313161306295`*^9, 3.7397314143730574`*^9}, {
   3.7397314588218594`*^9, 3.739731504625194*^9}, 3.7397325920434985`*^9, 
   3.7397326508459344`*^9, 3.739733792053341*^9, 3.73973402429175*^9, 
   3.739734192260043*^9, 3.7397343315778027`*^9, 3.739735565119746*^9, 
   3.739758901148472*^9, 3.7397872134631033`*^9, 3.7397891631538634`*^9, {
   3.7397930978614416`*^9, 3.739793127459956*^9}, 3.7397931780303006`*^9, 
   3.7397932194932823`*^9, 3.7397934424753*^9, 3.739793498986597*^9, 
   3.7398081876237125`*^9, {3.7398091822942047`*^9, 3.7398092333248954`*^9}, 
   3.7398093318882484`*^9, 3.7398260087732944`*^9, 3.7398269849153814`*^9, 
   3.7398275361135073`*^9, 3.7398304673617907`*^9, {3.7398305095649366`*^9, 
   3.739830539381047*^9}, 3.739830598363945*^9, 3.739830920906808*^9, {
   3.739830960633234*^9, 3.7398309843417673`*^9}, 3.739831024699802*^9, 
   3.739831172160781*^9, {3.739831275093193*^9, 3.7398313236538563`*^9}, 
   3.739831380558277*^9, 3.7398314335612698`*^9, 3.739832710417898*^9, 
   3.739835980921579*^9, 3.7398360945001974`*^9, 3.7398367331264367`*^9, 
   3.739836792453904*^9, 3.739836827198123*^9, 3.739839321764964*^9, 
   3.7398393632032995`*^9},
 CellLabel->"Out[130]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvWd0nMeRLoyLwKhg2bv2eu3P9n7r9dnd6/V67Q22ZMmWbQVmMQIMYpKY
KeYgShSDKFGUmCmRBCMyiZyJnCdiAJIgcs5pwEwxB9Stqu5+p2cAan3ur/tj
ec5wgMHMO/12V1c9VfVU9bh56xYveG/euiXvzPvJG2vmrVq85J21P3l95Rp8
yed/eXn9r1VeXt6Lf+Lliz+Dl9eA/1Z7ef3Pz//z8//8/D8//8/P/+/+vIX/
9/sWvbxw4cKgiRMn0oN+97oq3vIR/z+MXkp/4403+l9/8/UHo8aMuoPP6iNH
p02bdll/9/A/yAv2f3bgs5byvgpLWV/l5UkzJz0cM3ZM65gxb9LfvLzps14+
3/LS/nXplxmhLgMVfZX06L/kLH9yqbf8TkVfRVdxvaXxdMThnpUrl3nz9XwS
Ro8ebQy/U7+Sz8VpAf7qSl6+/P+Q/vLe8scVzoqvqy6Xd1nqrVc/3PHhran+
U+TV1J3xBdrE1Ta7zxc/zndVwiUnXo+vOqL/krjq9areSueBE/uevP76a/fH
jB1F72158cUXaZD0+Rb9isOMO90deAzSLl2EosYKsLVWwsUevrofX3xkf7mz
HGbOm/noaNiRa7XOqsbzNZberds+vP3WxPH6F/ySLtqof8PIiy+//DJ/w1v+
AbAnKAzOFhRCUul5yK6+hN9WCSUd+E29lVCO9+LNX/csbNqxCV5+5WWIyYmh
r35Y6ay8V9lXfqu4wUZz37ll68Y7r776e7ouXf+zuXPnetVrXyum8jnYfToM
AubOh1HjJ8DEgOlwODoe4u0lkFZ2AfLqysHcjN/fyXdKtwcTp06E4haHt3HX
FTStt6qcFbcqestvx+REVxZYU3uXLFnQ85vf/EbdOa9Wjfj6D8VK/VJfqcgi
Oxw6G4ujwvF4jYA5S5bBRJyNxevWQ6zNAQmOEkjHuc/HEfnPnglfhgbSbLjm
vuIJiszt6r7Ka8V11gen4k/2bd3xAeAI1Chsr7766rYFCxZ4Veqj8DHm/rOv
jqL04ThwTnAkPC87Dh+D9z74iOdn3rLlsO3gIdh64BDEWsyQW3sJ56YCHB1C
EnA0QnifIeGl0dw7Ev7Vkx0HPnl4Ov50V3DU0Y5161bVTpgwRi2J2g9lYkAf
8P++hgBv/PgTGtQwHtOzPKbNew7Ai7/7Ha8VzdBXUXEQh2uVcuECZFddAlNT
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
mMzLo54iuN+Rg+bFxCpN6KmDcuKfgS+2rYYrVcmQEPw5fL51BdxvyeT99Qj3
ES9eH+IDpxlNUyGpQbENv8WXWbt8Pn9dSXYIrFwyC15BSXtnzhRIDt8LNxsy
8SNFuPYlxiLeR1fjw/dXwpGIQBEdH/lEpYUr+yp6atE0JaWGU65zsDX0+tht
EXVnTUw844Qh2tKp6VcGxzOtp0MzXxlc1SOEeiKXXpPGSi7Z3xhxgJgiEyRZ
c6Hg4hnwx2X6bN9ySC3YD6cjj7JqVHDxKxSBdLsdqhElNKOfQZiYloiWipaM
5pIszRNhdZRWU5YlYPJY+P0rL8GW9YvhWl0m77wHbTlorExwtTMVbndlMojA
VZPa8gVGb0LzFcOjrjzorU0EW9ZJ/MowtlC0qxfMmcauC30P9F2AXTs2whvo
LMcVnKNYsOJmUIKJ0vf06K7vLb8zYeLoK9MDpt3546t/0NP329yWibP3lJJ5
Gq7289hHBMAEDPM1WA8S8OkRHpmHGhDJUEhLRTMosear0AXDaUR0RQSp0TMu
SYaCsjMQm7YTteRvISh6J2SXxkOSpRAOR8YwwtiHUHoerv+06QEwd/Z0qLTE
s59I60aqkCaYfUdas14Lg2oHQ+ICRgi0rvSeBegjvjt7Km+xkvwT6Jkfgb6W
RFpnA46rrZsUvh8eduSjei1gdfrEaZO68xmpO8PczBpBC4qYpJSWQm5tOYfj
JMlA7LNhnHamnFqKNZU4KTdOR5+oPV9bVBufGtH83tJFmn9k5Mk3u62jQn4y
UzlwHT0XR9gvF0DX4tvKGCp0p4UfpVr1NfavNIjiIy/AwtXreBkJlCTbsiCr
NAEKyyLAUnES7JXHGJRv2bUZEgriIcFSAHGIONLtVlxSG5xHlHHJEu8l3NJh
wnXH6RNT+Dveho/RE8JlpP2iVpJmXK0irbRYgVCID/mCtyMp553bVmjbzo8v
TZ+52ZiFWzKPV1kAxefxf8L7Vqi1RkJXRTpEHP+MlfxLKK0U86KkYhKuZEZF
GdN7KENKNClKQ/nINBSF4vce39dvb7JTUvFBlbP8iqPefO10zInrS5ctousN
mpIRqXivVfz/cAPR7zoR7BY7Zy6VVJa+mrKkYbpslp/butJCCdkQnoHuCw+T
Pq3O+nBt2FDY8VUgwsu1CKKmwaL35kFM2udgrzqGj+PocoXAkpWz4HD4UVSy
+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
eHF4Ncck3mBal6KqBY2V5pQDf1+0lPc2grq5/yJuyd0hfKxkv7A1tv7O/79B
5+Q3XXddwYN3/27g2ScfNjf6zT4Tt1ZJg/yYpcNqy80vW/Wc0uoOpoZeYmja
DCassshWTcQNDY3JUZ7uKGQ4qdr3DyZ9ofRfsf1qsRiLBi5MqbNSC+KyhPmp
RdMljK+P4iNDywAn23Jh4eo4eScnwktLIuBAYcKgO0kLz5MevR9WfrIKsnxu
3q0X4vIuo+72mggLAukkuzw8SIjPzYV3160v+I9bbgmzZOLlrbx3KLc6dPY8
Rrd3aD/9L3/8NTx471/gk48WKd0WbhUKNMCooHqqRGE11Kqf+oy882jwtMmC
x1S8Uuomil2JLjG5wgs9QsJRXjIFEKZnUKhwk/Hh8kGLCMtcu9FU/vi04bv2
wpQFMTIEXgNzlsdBWlIE9y6DFdrprdHdaarMgepKJ7iLHZDucUFSoVMgb6/S
+xZUG+5xu8Gx38vpHlFNZTuzYOrfXxuq2Sad5oMhLC6I3ni+5SeJbLLgG9df
L7erF0J+8nY4XO8JU7t+hHKdO/P5EM0Ra5V0sPqCRds6Ul8rHzNRXdbiZFeZ
1iCVwmbaqIZZrc8qX4zVUf205Cv9OdFczaq73VrlhE/CU2DZ+mjIT9/BuJ1j
LQXiacZpWlZ6doKCD2Ade5IAg01OqMS7kud3QmKhi9aYqUVfSEyPpPlHsKLD
nQHM6WhK54aE2E9VJAslEyCt5pEQt0PkIaPNBgTz95DIC9UPpAs2CiwWQ8nt
Zjg3BZUpgSutvNGZjpGgXFPe5HyPm5k/jADDsYuvMN0EWiqi1FUhjenfjrYE
L/TaXaZaA6IXpq5YV72D5jYj5e2iTIVocFqKd8JAQzoLBqkOlVoMEdDMV/je
F+VEQXdtHnQ0eiDH64CkgkKMSxIL6fTwUJIk4Q53ZUJ/596BbRsW8ckPZRny
VkzSt2JwOvGG8Fc2JMdtP/pfzMG6ZfW7agPWLPilUtsVGfcUe7VySmajhlI+
ShnZ9/cyUbZSxbhkuHT6FWrPqbUxDBEm84vyhAYrHl9HenZqFErchHwn3+CI
9UXtHmjfv4vd4SWJqaCnN8S5jZWBdcw7P4twn2s+gs3RkeyYqOVCK6u1dX44
1u2hewBN1YkFv/zlrWGhxI++K+7B30KYg7j2Y20IgmtYa/0nUJS1i0cB1Hez
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\
\>"],ExpressionUUID->"86671b17-e435-4c7b-83e1-3ea966162484"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx13HvYlHP+wPGRwmKdclaUJrtxJVqkkg6khkQqpEgOa8NITkkOpfgVqm3W
YTcrqRxWzjTSOiTJhbX5OTPPJumX8zlJ5Plte33f93Nd78/e/nH1uu5rnu+8
n3m+M/O5Z+6Wp4047sxGhUKhcZNCYeN///9Ppx22pr7rqQtvv+n75oVCx26F
9N+UV5qcXDt+aPA1b054pdr2lOCnLNv40Erjk4MvWXX1A+Xa4OD7frXRHqVH
Tgp+8w9jpxYnDQr+S/2//xt6YvDfb3bV+bWDTgj+z21+WV799fHBD9rlin6V
lQOCz2j587Plv/cPvsneY9qXKscFP6/9ulnF4f2C1zqNblrodmxwOk/c7oe5
xRc7hc52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc52OtvpPHLq2o6lyiGh
s53Odjrb6Wyns53Odjrb6Wyns53Odjrb6Wyns53OdjqftOW6F8qDDw2d7XS2
09lOZzud7XS209lOZzud7XS209lOZzud7XS203nW4vV7l7brFjrb6Wyns53O
djrb6Wyns53Odjrb6Wyns53Odjrb6Wyn807jfxlZWxM72+lsp7OdznY62+ls
p7OdznY62+lsp7OdznY62+lsp/MN3evnl2vdQ2c7ne10ttPZTmc7ne10ttPZ
Tmc7ne10ttPZTmc7ne103mjDPxb2CJ3tdLbT2U5nO53tdLbT2U5nO53tdLbT
2U5nO53tdLbT+ZKnC70qcw7LnM52OtvpbKeznc52OtvpbKeznc52OtvpbKez
nc52Otvp/NnlG00pTjo8dLbT2U5nO53tdLbT2U5nO53tdLbT2U5nO53tdLbT
2U7nUzs3erNa7hk62+lsp7OdznY62+lsp7OdznY62+lsp7OdznY62+lsp/Ob
PzZqVjruiNDZTmc7ne10ttPZTmc7ne10ttPZTmc7ne10ttPZTmc7nY+cv/Hp
tYN6hc52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc52Otvp/Mwlje8t79Y7
dLbT2U5nO53tdLbT2U5nO53tdLbT2U5nO53tdLbT2U7n/Q9s8k19fexsp7Od
znY62+lsp7OdznY62+lsp7OdznY62+lsp7P9pNKSOeXPhi7cfsCaMyor4xzP
PqfacXDljWODc/t2bn/tht/P5Pj7tXP7eZ63fs8hOd7O8Xl9/HNnHtb/jNqu
py58b/XF3UsXNNzOwksHdShdd2xwjr+xSc+htSW9w/F2OuTdvtfP7eet37fP
8XnzW/9c1pO3fv/ccZ9//2X9mDjXrWt65jf1o+L8HPfxHTq/8V39hXGujvv4
yoZ1jhgSjsd9/BeTHllbf06cz+M+vvfDLX+qPyvO7XEfP/udP66vPz3O83Ef
P+g3IxoVhsR5Pu7jH+u7rHHhxDjnx3381pccvWlhwMBwPO7jz77tyV8Vjo3n
C3Af//zifbYs9InnEXAf3+Lz6VsVesfzC7iPH9N0820Lh8fzDriP53Ho+S2P
NzuPKzuPHzuPEzuPBzu/dzu/Xzu/Rzu/Lzu/Fzv97XS209NOT89p6Wmnp52e
dnra6Wmnp52ednra6Wmnp52ednra6Wmnp+ex9LTT005POz3t9LTT005POz3t
9LTT005POz3t9LTT03NXetrpaaennZ52etrpaaennZ52etrpaaennZ52etrp
6fkqPe30tNPTTk87Pe30tNPTTk87Pe30tNPTTk87Pe309ByVnnZ62ulpp6ed
nnZ62ulpp6ednnZ62ulpp6ednnZ6el5KTzs97fS009NOTzs97fS009NOTzs9
7fS009NOTzs9PRelp52ednra6Wmnp52ednra6Wmnp52ednra6Wmnp52enn/S
005POz3t9LTT005POz3t9LTT005POz3t9LTT005PzznpaaennZ52etrpaaen
nZ52etrpaaennZ52etrpaaen55n0tNPTTk87Pe30tNPTTk87Pe30tNPTTk87
Pe30tNPTc0t62ulpp6ednnZ62ulpp6ednnZ62ulpp6ednnZ62unp+RI97fS0
09NOTzs97fS009NOTzs97fS009NOz7z522crDtq18Mc4f+v76CUTa8fHOdvD
46trqs3jPM3z2+x1UfGg18tz4xzsXc0P6XbI8/MeLHaMcy2vk25eJ928Trp5
ndnrIq2Tbl4n3d4YevA9xUFxXtRhv0t3LLSI86LphfkTaqs6h24/v/rDt9X7
G5xuQ+/oMKxyUYPTbdHIUUvLnRucbq17PN6l1KjB6eZ10s3rpJvXSTevk25e
J928Tv5+99I66flUXceDSnvGeVGL+0fPKX7SJfQcf8UT2xUeanB6rjr6x7G1
Sxqcnr137/hVtUuD03Pul5eeXGnc4PTc6pn5L5dfjvM3r5OeXic9vU56ep30
9Drp6XXSc2utk553D+q8uPxZ19Bz8w3nfx5pcHqeu27BzOLoBqfn0pfWbVXo
1uD0bH9rpytqmzQ4PW8857LPqq/E+dsPnRcMqtwY529eJz29Tnp6nfT0Ounp
ddLT66TnWq2Tnr3P2b1N6b04L7qs/6HLq0/FedHczqfcUrwjzovqWl3ZtzIh
zou22nJGk8If4ryo6+qnniwfFedFI+v+dWFt3zgv8jrp6XXS0+ukp9dJT6+T
nl5nNh/WOrO/9zZ7nF97Os6Lvtq2629Ks+K8qMW6U5ZVr4nzouNWXHlTcXic
F41/aUafSp84L3rskac3LuwX50Wrpi9bUG4a50VeJz29Tnp6nfT0OunpddLT
66Sn10nP9h/v8Xh5do/Q84xXu55Xu7bB6XnT/KGtS2c3OD2XzLyqrnp0g9Nz
7cTb/1Tcv8Hp2WbkM0dWtm9weg4e9P5GhbWxp9dJT6+Tnl4nPb1Oenqd9PQ6
6el1ZvvnXS1+qf+fOC96d0q3eeVz4rxo81GnnlvrG+dFhwwd26rUPs6Lyr1m
vlfdIc6LZrRbOK34Y+z56k7Le1fqGjzbP7VOenqd9PQ66el10tPrpKfXSU+v
k57NzmzZs3JunBf1Pbr7z/XHxHnRVQcOe7T8uzgveqj5uLNrO8Z50Yomd7Qs
rYs9m3658J3qv+L8redby6cWn43zN68ze52pddLT66Sn10lPr5OeXic9vU56
Tmu15w3FfnFe9NwWPQ6rHBDnRau/G7aufqc4L9qrbtzD5Z9izxMW3/GH2rI4
f5t437N7lBbF+duCGz94q3pnnL95nfT0OunpddLT66Sn15mdF9Y66el10nOT
FXu+Xj0wzosOfqnHdcVd4rxo+COnda/8HHtOn3712vr34/ztH1fPerD8XJy/
rT970e9rd8X5W7v+K5qXrovzN6+Tnl4nPb1Oenqd9PQ66el10tPrpOeYma12
Le0a50X3Tzzsf6vrY89l558+sfhBnL9tM2h818riOH/r3n32mvq74/ztgjbP
3V++Ps7f5mz74Rm18+L8zeukp9dJT6+Tnl4nPb1Oenqd9PQ66fn1KcVhtV9i
zz17Hb5zaUWcv/Vvd8bS6vNx/jZhpwnXFv8W52/V+tldKjfE+dtHHz23un5E
nL/t8uqHc8v94/zN66Sn10lPr5OeXic9vU56ep309DrpeXrz1veUP4zzIn9+
iZ5Lvjhjx9K9cV7kz33Rc++n50wojozzoiF3Le5cGRDnRZOnrPy2vkOcF3md
9PQ66el10tPrpKfXSU+vk26ez9C5S45/qrkNt+P7y/FTcvw0dcDz5lp539f2
HCn73oQ8+36EPPt+hDz7foQ8+36EPPt+hDz7foQ8+36EPPt+hDz7foQ8+36E
PPt+hDz7foScnp4j0dNOTzs97fS009NOTzs97fS009NOTzs97fS009PO5yrt
dPYcic52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc52Otvp7DkSne10ttPZ
Tmc7ne10ttPZTmc7ne10ttPZTmc7ne10ttPZcyQ62+lsp7OdznY62+lsp7Od
znY62+lsp7OdznY62+lsp7PnSHS209lOZzud7XS209lOZzud7XS209lOZzud
7XS209meXc9BcyT8P//4L9+H9fG4j8+uC6HjcR+fXS9Cx+M+PruOhI7HfXx2
fQkdj/v47LoTOh738dn1KHQ87uOz61ToeNzHZ9ev0PG4j8+ua6HjcR+fXe9C
x+M+PrsOho7HfXx2fQwdj/v47LoZOh738Txu79JckcenncehncebnceVnceP
nceJnceDnd+7nd+vnd+jnd+Xnd+Lnf52Otvp3EdzRTrb6Wyns53Odjrb6Wyn
s53Odjrb6Wyns53Odjrb6Wyn87eaK9LZTmc7ne10ttPZTmc7ne10ttPZTmc7
ne10ttPZTmc7nf+suSKd7XS209lOZzud7XS209lOZzud7XS209lOZzud7XS2
0/lQzRXpbKeznc52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc4rNVeks53O
djrb6Wyns53Odjrb6Wyns53Odjrb6Wyns53Odjpfp7kfPe30tNPTTk87Pe30
tNPTTk87Pe30tNPTTk87Pe2frL5oaO24OLfst/67pdU2cW75RJMLu1UKQ4K3
3Orbh8pvx7nlpB1Htiw9EOeW3+z+9bTiNXFu+Wy7Ly+otY/zyTYHlz+s/mpg
8GndPu9fWR7nkz/2Pmdx+fE4nxzW79MDSlPifPKVQcPvLJ55bPDDm60cVusb
5433FU9/rdp6SPDt267oUfk5zhsv33De9/U4b1zZZXmr0r1x3tjshJMvru07
MPiEoXX/V20S54qfnzX4+EpdnB8OOP+9JeVH4/yQ71nbb9/wPe4jh4R516Z9
Xnuj2jLO/UYM6NezsjbO994e8uq88tI43xt15T9G1faO87r3rz3q4+pGcV7X
a+pLJ1beiXO5R24pvVh+MM7l1m0473hEnJuddmH3t6vN49zspTELe1VWx/nY
a3d2vqy2V5xrdXpgwafV9XF+xXUA7AMr+w+v9YhzpKemP/RudZc4R2r7yr2X
1/aM85xb3mzzRfXHOLd5+ImZ59QOjXOSSat3uaq2e5xLTM2ZM/yQMx8YmjMH
eCHn/X67nPf1t+S8f6/PeZ9+Vs778aU577s75Ly/vj3nffSmOe+XR+S8L67L
ef/7Wdo//X6tf9o/7X9P+6e9Vdo/7den/dP+Xdo/7c+l/dO+T9o/w/v0tH/a
f0r7p/30tH/al6b9035E2j/9PuuBtH/ad0z7p/3KtH/aV6X907572j/t16b9
0/5l2j/tx6f9074o7Z/2WWn/9PudzdP+ab8g7Z/299L+ab8s7Z/2FWn/tB+Z
9k/7vLR/2ten/dPvI85M+2d4v5P2T/ubaf+0d0n7p/2etH/aT0z7p19vP5v2
T/t+af+035r2T/u8tH/6debktH/ad+1/1P3ltvH8b3b9N3mzdLxfd/G+wP5i
+juyX7TFqrHFO+L50z5HDL2xOC6elzxr77e2Ky2J5wGXth84vnhbPN/X9cxj
9irdFc+73V3+583FK+J5N65v4+e7Rf167lBaFM9z7X3S4muKf4nnudpP6Dq/
/HI8DzX9hqd/W5oVz0M1uqnLX4qjBwbf64DBu5U2i+eD5p1/4N3lj+L5oOaj
H9up9HQ8HzRh3O8mFm8aErz17HZHVr6O53Emz31gQfmFeB7n+0fb7lOaMTD4
kCfvu7V4cTy/w/Vz/Hx9z9TWHStbxvMy2/x5zt/KH8bzLKM3fD5pwZDgy++Z
dV1xWjz/svOiPeqqO8TzKWM3fM7483je5OPXmj9Vfm5g8H61v7YtTY/nU+Z/
uNuM4sh4PoW/I8+Z//rADi9X94/nRxo/fmPnymbxvMa5zzS9r/z+kOBvvFBp
VqrG8xSHvLrt5OLkeD5iDtf9kG/5wdbn1TrF8wsXfTJlWXXbeB6h7ptfH1P5
eGDww9fd8Ez5mXhe4L5GW+5XujnO/7ff4vqZxXKc81/OdT/kV6fPsfj596T0
uSD7JWk/8fPX++lzTfa+aZ+xP54+X2QfnvYfP7+8lvYfe6f0uSl797Qv2e9N
+5J9u/S5JvvJab/y88vzab+yt037lf2m9Dku+4FpH7PflvYxe5O0j9nL6fNX
9t+m/c3PX0+k/c3eMu1v9klpf7N/kz6HZm+T9j37tLTv2X9M+559WNr37C+m
z5XZZ6X90M+/96X90L592g/tl6f90L4y7Yf2Pulzd/ZmaZ+0T0j7pP3ztE/a
B6R90v5k2iftxfT5OvvtaZ/064RN0z5pH5H2SfvbaZ+0d0v7pP3utE/at077
pH1U2ift76d90t4r7ZP2B9M+ad857ZN29km/Hrsi7ZM+fmw63p5dp0K3k12n
Qp5dp0KeXadCnl2nQp5dpyLne6z27HoU8ux6FPLsehTy7HoU8jE5Peng1590
sNPBTgc7HfK+f2rn/tq5v3bur537m3e//Ho4+x6ZnPtl537lfd/Tnn3/S876
7aw/b51+/cw67awz7/uSdtZjZz15P9evh7Pv1eZ8f9DO7efdTt734+x8Hvg/
//gv11Oy8/i38zix099OBzvrt/N5bzv7g52/FzuPNzu/Xzv97fS0082vP+lm
p5udbna62elmp4+dPnb62Oljp4+dPnkd/PqZDnY62Olgp4Od+2vn/tq5v3bu
r537m3e//Pqc+2Xnftm5X3bWb2f9dtZvZ/156/Trc9ZpZ53hfUdaj5312FlP
3s/162d+rp3bt3P7ebfj158cb2f/9PMm+5Wd4/08xb5h53bs/F3buX0/73D7
dv4e7fxcOz/Xzt+XnfX4eYr12FmPnb8jO+u0s04767Tzd2Rn/X7eZP121m9n
/Xb+vuzcLzv3y879snO/7Pw95r0eCHMerk8rz65PK8+uTyvPrk8rz65PK5+d
M6fKrk8rz65PK8+uTyvPrk8rz65PK8+uTysfkzOnGpczpxqUM6fieD+P1OXM
qbgd+2M5cypu3/s8t2/vkDOn4ufa+bn2rXPmVKzH+zzrsbMeeyVnTsU67azT
zjrtZ+fMqVi/n0dYv53121m//YucORX3y879snO/7Nwv+/M5cyrur58Hub92
7q+d+2vn/tp758yp6GCng50OdjrY6WBvkTOnGpczb6GPnT52+tjpY6ePfXbO
/IpudrqFeVfqZqebnW52utnH5Myj/h+xoozo
    "], {{
      {Texture[
        FormBox[
         GraphicsBox[
          TagBox[
           RasterBox[CompressedData["
1:eJzsvV1rI13XJvbm4yCH+Qv5FznNYU4n5AfMkMmQkzcwEwj5CzlJIISZYWYI
w/MO79N0N3033U276TbdxjaWsYUkJCEJSUiiJKqKqqKqKAlJSGJlXWvXVpU+
LcmS7b4f9826JUul+tx7XXt9Xeu/+Wf/6z/5n//zv/u7v/tX/xX/75/80//9
v/uX//Kf/h//w3/Nf/yPf/+v/pd/8ff//H/67//+f/vn/+Kf/8v/9p/9F/zh
/8nyD//Z3/3df8mvRSJKSyH1vsRSjmVEm/91WBosLZYmi71l27/dfwHLJPV3
77lO5PXfgf+qLIMdt8X8aZN66tv+TahLr2Ph9d/rP/VvGY/WCTAK2FShh+fX
8f/tqgGe89/vcI6v/47xT6/RHnriwK7hTnt0H3lGr/9e//15/u2CR2nBfIQ9
NJX/wkcde/yoXy//6x91b/v9g/WY1isOqTUvxHuWM3r999L/jXnURDxqHzeH
nvKfQZj3r/9e/x32D1pyxmKRWq/VWWrx+0r8ui8eFePfNmKB5j10heeTGuOd
A3//+u/13+/7b8CI5LMN9XvYR1bqtfmcJ/L677f6BwyCjodPoZR63YQt5+4j
xGbhAfqTXy/47+6W84J/w6PJip8DPvZLBqZMpMY6BFGWdX5BWECwqeAHiWLB
6jK9Znvc+k3ved0/2Dmzpc9GpL0y2365+7/n8vsd11J9Wf+Wn9mu/zCyTokV
Ic/THLVneb77LxuTEA/GHM321es1T876q6H0+m/LP3iGMFZ+efthyl+L4SMl
UJKz6W3BpfdFjz4UXWp4bfJGBnWiKpW8LBVDg8p9nyp9j6qDiIyRQpQZSy+K
6KLl04eyT2c1j76wfKoGlDECsvshY0xAFSegouNRMLHIm7TJGjao6hcp7+XJ
6APVfNmfz/udztFqF3FiAQKGsSxvg++81DZpNFR/h5MO1YJbaoZV6vUNRiqD
r80kpdMeOoeQxv0WdepXNOo39zj3Y0hIo+ipj/l0MpaxYe+wLZ6vv/bZnuq+
43hjniNNo0pVy6F2EFGLpelFZPUjisZ8/i/gHlo8P0t2RJ+rId12I/rZiqgb
bf/NfnPw5clshNX1LnP3YQn5OYajLcdKyWjGz3ym3uN1cuLrHE3VMWbxM9t1
vG17vriGdxoX9pbH4tESLuU9wab3RZvxhXGl1KNfrTbddx0ewwH5Y5OGM6Bn
sPAs9N/6+VW9kM6bIeNSSB8rIb0v4W+PnGHA20NvePF4AZbg70R/jNmSGsm+
gGUemcMK40SGvHE13j6Mf6P3oV/t1L6W77NF3X6enFFl6fMw9ap+O5p5jE8W
Leq3ZQlpVf+5NGRssIwsmyy9PcaVG1/bIfrzcXg045XQYLbu96fU5bvLZNCJ
n/nydx4Nph4/q23P6DGix2NA6bG9LL5fo3I9S/lmlf748ZmuS0WqeQqXLF63
2QOFS899H//W5Jh49OCxtnyusem578e6c4MdkTFC+lLVejoQ+VBexZk3LJ/Z
xrjm7QtWSEWWshOx3RJRnaXqRlTkNc8bxpLjCx+/4NGbPMSlN9kufSwZdGf0
6N7wqOZ6fC0eNX2H9cFmvYVngev9WlOY9LFg0E2zQ7meRUao17OJzBhPhvzq
TfvUHvB6s9+hetikolenrHVN99YZ49wl21ZFagYZylnfKWt/JyPKUn/ajO2Z
NLYleDWjLmMMtrFS36clirfXeKf1UJj6XL+6G/bhy3duv0s1p8N2YEjhrE/R
LKJFnab3Gc2PO5q11ny/bM+tE/5+3N1wPsu/3XzOSvTxgvheekv72LbvNec1
0+uDx8wdO3Uei8fEs4zkuSfro4evd4vMLCVL9wX3YirebP1MkmMZbpcuynW6
apr09tcV/by7pm4YkLdlPf20YvHarrNy72AfQR9pO+7Yx30O+yp9zKfEo99J
Ah6XwJGMoezld6VY38fyNsadTFfhTsVVY2VXTD2efbTJZuLXgs+4ZNO7AgQ+
PZc+lR0qOT2KJl0KJm22aZZ1gprjwKSGb9Nl26WvZZPeZ5v0nvcDfCrZIU1m
ybWwZUVNvl/VwYClL37BCs+XEt+PYmhT1s3QnfWVMehMXm+tL5R1vsW2xbI+
CtmOa/G51fjcDOoN81T1L6m/1hbQYtNsrV3jxDp/l2fik8/3oxi0qDYcKOFr
6Y4e0uEvwx45powi+Nq8Ex/neH656bAT25p6LHms44zUOmfb8X3qOVUqFM6p
Xr0k163E2JZsizlt8njuBE/5HBbvT84MZS2blzVuRFkzorN6KIK1IzAKtl3d
C2Xd240xa9/jPrVNYISRXA98TdEkItfn5zY7HI8eOv9tNtFgqs7j0GP3J4/7
/Topi782oD/Y/nlfUrjzJrZ9PvBnd10em3vgziY5LR6t8edBGJ/Ep5fv0h95
g6VDZ+UWXbcMHr+eYFByjg7ZQ4M6bA99L7XovNqly5Yv4x/+vJaf3tajcGqw
TeGw/rapyrqhGFQZjywq+CWxhe4Zi+7tr9SKbskeFQVjWlGGf2vO9wMdEjIO
eaMKGf0staM7agS8buX3ai294X7yen4weCweqetwxw0+zwzl2barCLYyJsk6
dLPv588m41Rc8HeQCeNR5Ndo2XaFjYFxg9rXwazD0hKbA+JPqjK+RjNdPauz
erTdz/ayVaTLi79S5uYDVSsXZJklsuw65SsZurh4R+ff/0LNxtXCcaexJP7w
w8QZRuI/hF8F8+17Q2EPdJIWvTZGzAC+mvcpwd/QV9+b+2P+KTBp1/sxZp0z
m57OPkqfA7AD9jBwEFgCTAc+DqeH7Rvrgct2RL9aoWDEsp9kn/uKeDz8cXjO
Wn8jto8xsbyfYzyvp8OjNfjEmPTXgvLpXbdtynUtKpo23Rkej32fMh2fSqZJ
OaNL36psW+UtHvOujHsVT1LzJD33zUGeyt4FFb1Ltn3OWa4o71co57FtJHbR
mWBS2ftF0bTO+FUXO2jVr4RnqGNMWh7QjbPN9tFsLzwK2Q5rUcH9xed/w+de
oUJQE3zdbp/9ueR3w6PpyKC+Bzxa1mN6POlx5MhzdHm9Y49K1OT1UCO85XUR
48ygxbi1HO/yY1vJjvftz/c34mNavTwV8mf069c/0o+Lf6DL2/dUKv+ibq9I
ev0ynfHcYFzrGfcUeMsx0PUCuwa654+SS1dNS80/zNciYsQO/ZXnLebvLnFq
4FUnfP5ntPPYYzyiR9hH+wjyCeDz1DYN/tZriVP5LYF/wDzEJ9O4pzGlz+eC
/BqsP7CuuO6EYgvDNj7OOmG932MdVrw5ap7DFsGYhi+PJW912S7yqNdn7LCv
GDcYU9wsNYMKVb0G34s2VR3GK9uj+15AN4ayj26MxVyfaNagCuNR1v5BWfeS
7h0W+1xwCP65W37NmIgb/aSSxJLAPrFL/tUOgnjHJMGjcD7G9rWPsFbyJUev
FWUpY/3ka/ghknN/UD285v12nmSuPKcoPFoct5ifmK+4rzoX6STH5v26Q6Un
dtcJLttI7SU/27acTWUDwSdw13N5LHs834MDfC3Yj03RsElN745K1jWVe5d0
nnlLn7/8ezr/9Z/ox89/oB+Zv9Jl+Qt9O/+PdH6Bz/5CP87/Qr8u2fa6fkfN
+iWZ3Sx1rRrdGy59rjDeZE16X2yzTdTk+VZlW8de8HHg+79mLYVND2ASYt3m
A3l5j5Vj2VR95MiOH8ajdc/qJeYf7COID2Edguf1oxls8bf6SudNLSUr66iA
1+EmDYYmdWyDqrAteh5dtjy2uTy6aZhk+B5N2A4djj1qe84z2kehWlvlHXn9
WLYZjx0azLqyZoQPo+CyfWN/Yz38nfGE8cU+F6l6Vd4W+RDKLl28XwE5/PuC
+5Ntiwu2iX7EOPRVsEi9fuX16B2FE1RqHTE+sYRH6ec243Wsii2sy/VaFPiP
sQ4ZS66HI/dDXcMXse2a4l/88/vt1uHRJoFfaXCgf+OYMpXn3KJ97Loh67TB
EbA1moaM1ci9QaWfS16/RWUzQyXzgjHqgtdzGZ4rFfKiOttVXRryubphj5pO
j7KdHp3XLfpUsulj0ab3JZ/eFaE3mvzeobf8/h3bSW+KfgpjfDWHgU14D0zK
WQqjBJ/S2yaY9KUWML6tym2vQ/5ov3t3Kpnw/dklfvS7Y8+ywF4CFmG9v/na
fMkDTnxGSf7XIKhTyPoZ+i7J7dL+AZXv3I1qZPLcvm1Z9EfFp6+MTec1h/I9
73nxaAGTsB5zKBipNWM4qVOR7RzYNcg9gEAXF9wrtpk6ZESh4BBsyN7Smgu+
+ArbPrdWkrcgdpLzUzCuFlzHfq8j5wAwHg2Hm+JLgdhI6jk+fNyFXB/qUt5V
uJpzv7OtXX72cfsUMpqP+Ye3hS7XfocxPWfdTiDn3V+II6VtpN3HnPbZPO58
dI6oyhP1R77UXWANDP+CztVFnOetxpcU3gCH3qzBFcg7xLVLAS3iU7wPjU14
zes5vn4/Ws7becrxGtKR8W098rof9wwHfZ0PuWV8blk//G44hfUccrAvWiFV
nPQYdchzSos2/4zthqCxYV86xrEptxdrJZV7O5yElO/ymBx68/v17HgkmOTL
eH3DmFT3gvl9QM5BzvnB8p3yLO0oS9agxzgUyv2DFKxoITcWuXDN8FbsKuWj
O6MMS867p6x3w/aSymWYnWS82zQebasb4ucY1iUPaz8s9CRHHecOfEXOuop/
P/84PqUoO+PU+XXHl9CtUqeeideI6e+SGrVNvwUGwc6DzWQcIV8pLahpneMP
2z9v5vih7ZyHY0Gwb1AnAl808ufuump/b1a29RO7SeMc/Hoao9Zg3Hu2zb7W
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
B4fbGAk3M3wSwCJlY3jyGfx09eCazGFe6nAxvsCHd2t8oevaR2q7t7SfPtJr
0VTPWvjw/sT9W7cJeuae0id/TO67wSzth1DPbcR4injD8a9BzV/41KKw9Yzj
wyXbzMd+HpcyXUM4hlDj9Imx6E3MlTzHkBQW6Zxy4BRqYGDHwFe2fAzoNORb
I2ake1u81TVTy/nicQ0TcvlQt/u15ov9tSkf/Z3UVqEvnC819ttz8C3hFzP6
BeEiq/l3POfX+RqW53u6P5ia1wMeE1Go48QeJfM9ySUV3qm+4qjEfUFsC3Vf
/YPzxG3GvCpZ3SzdXL+n8/P/ROc//iI1RUcZC4zDwLd3f/2/yEbd0obtcO7u
XK8HFAxdumm59KsJbqpn5q9bi0e2jLVvPJZGa+sB09ii/FmI3dSCK+EazTqX
jBsV6o2qFEz3yasLhOdb+d5uJa8NGGMOVN+jovdT9o/vtf8C+XyobUI+OTjF
sR1so7p5SdGgLjw/R9E9bB8t9tXZfx+qbgeS2HMi0x4l9uHDMpy0dth+sw9r
HxlFp4qlaR1zajvJU/66ma6/1td2jH0jPmGxjtk3RrW/THncqFxz6Me0DzqQ
a7PYpr9uWYwBrsRu7ruB+DfmHA0xJgGr4JsDPqAXAnADNVLo5b0rhyxiQNed
SH67UMcktbXWCscEOJCypi92G2p3N9X74nx0Ttpq/WqYuhfIJURdvRnX7e45
l9O5tCvz2RXevBHbUF2rTtVmiTyvRp7fINNtkeMxjond1KYhr9UGiFf1m/y+
KX+PBm3GujaFIb5vy9/4zujcSr+SQvUbNa0M20QZsWuX7aL9rmP18+GwS/d3
X+nu9ov0QilagWCpNwqoarlUNh26YNwRG7bD0groez3miy8Gca32gbVsp5K8
6kGRMfw1umI53qveI78AMR3wu4FTJ+lLvsvcD8T31h1kxd5BrtyQ8Q29KIA9
8/2CQ4/33ZScV70uMqnHv0M+NrYDr3jTueExU9v4zA7Va9A5KhZxCCah1xtf
i3lORUPLD/Xa/kGWl1P7Ru4A6qcmphL+G58jh30Wv3f9Is+ZDl/nNY8xxmDr
ktygRONRW207MlYE/EgQ9f16oZTo3/lSv/Ob9+icWSl/6zHjgZGMcdTcnrae
OpR6imjakB4oy3MKOWjXTVviveA/Q43GWS32j82xSGET8Oi8afDcNsUn97mq
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
OSxLon+RP5D0GFr016GGcrWv5uMEuQa/ijU6LzWobHvCg1BxAuFEA4eenEvK
7zbPHYv1I+Jd2O68ZlG+61A7CKQXoNRVeVWJwQTggGQdgvmEng0O5m1Yldoe
PQcXdMOoo3L14/k3iefqbK4z4rm9lMePbUdxTEdzPqHmEf4DxMLdUU18Oena
fRUDTPpc4xlO5vvQfZZsiR2pWoNeXEeguc7UnOtFAf1RUfcENa7vS+jL7Tw+
lqQx6Xf23cXcDLCZz6tlyrS+s3ykTPsj3bQSybQ/UdZAjfI36vlZmrDd6oRF
qtmXVLZ+CS9u2VRSZckydt20PjG2faKrxh/8+pHxLEOmy+t0vy1zMfJZ3496
89if6ruQ9FmQv5fi4vjcC8tU4+N1vSyNRq3kt6mYO8aeExSp0P0u/Lwmb4vt
8TvDuWfsrCvbeylWj/wD31F8eOiDO+8Ty9/hXMOoR1G/p2r/pyr+DuwKGOvg
R8Z9yrS/UNOuyviNdsr1fXpdve37P4d9FMk1+KzjoOcOj12eIu4ZqPE1OdRv
rfneQ7pqWhKDgU4Dh+ZNx6OK5VLT3cT1rnVn6nPWq+Arn+dBznMjkxzLwG9S
lTHoS8UVP5u2f97lrXn96TyGFccBVC+JkJqe4r8Dnx3sqZ5r0HCoe7Kq+6Fz
poFBPZ6nDftK+qrkWY+gLwt0OuYj+AHB528FBfKisuq3ItzajF/DptL9cW7M
XI9MFufrPG9Gfzbndbbn9fir/htH6Yjl5zDTPESp+mjeP3KCUB8wHFpU77ZF
b+B79Go3Il/qUO96Pt11Vb+Nb3XN+7Oak3IwJv2OuDTP8wBGW3Tby1LW/i55
cogDIYcb9a/gYAKPHPw9Kv/OIWeEnIZr2T6pj13k2MjaP4SrsOpfUThRteqo
rwvwfFbypHabi4jRw/ek8is2rfPDmA/kZ8ynZwu3DX47W9tfMtn/pjxh9C+D
T2K51g/xMPDEIi4jXH7u95i7e9/8updRy/PnwSN1LZaRfUR8cTkefui5xL9n
/Ydzmg4OjW3p/GEVr7CshtQAdYJQ6nDAAb09N2LVpwRu8tCtxr6ARX+Bln7U
Iafvi2+uZIOXwaOPvKZ/E/MIvC04YvtouWiHwvGzzocMP6Xi9/NT16S+w5wG
V0s25n6BXkFer+KlUnXlsGF0vwB8p+KhCZfxjNIY88CcYjyZLthJQeqc0r+1
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
xT6Ql0Pb4fv+zkn1LgrEdhjsaBdPZ4/lK3qMqLXZbKq4IINxXepWK51zqjcv
yQt0TcQudQS7Hu/w3yM+NpxFkmuXMTw6q7nS3w1c0a/5dX9iiXHpY6VNGbap
B7N9fEK6h1Z67JnzOBJ8T85a2wbiSn1SLuW/g95V8SZlHyEXSGo7RA/7qWMq
vpP1PCqecGQDB81BYcOxAzkOeLRxjvCNrfaE2F8OxaOafzm3FcVeZDyHXvDG
5YU87dVYtZKEm3W9Djg2HqnYxrH01iF6Tq/DVR8shUeb6lyW84+PpWtduQ9G
83ZD7dEh9sXxZYL4I59fNGxIzWCp+oOGPK8SG1nFiPxJPe5Ddgyu/cfwRMHG
9ak/tRmP0AvWprLTYkzq0JeKS++Lr/0l/vQiuSuO1D7XXO+Razhf+ueVWNcn
tTSbdKHiEEVf9EpcM4o4CdZtwAjgGnx4qkZC+6NUjFd4w6bb5s4uXNGeHL/N
Nkg00Tbc4fpqPzxK7BjJm5d7cCECOxH3DTnh8OFJ3qL1lQ6tJVZxtePaR0kN
2ak5B1bHTDRt81peY7CVsqf1uWju+FOdgycxoXbthtb7t5GXYqypwT6+TFZ8
gAqjJ/x8hqMm2VGRir0fdJl/SyVDc04lYxD+YMQtZwsYv+vxN6x/Dr4elXse
TXrUCovUifLUCJrUDruUMx16X/LpbdFP+IKeW2++yskxCf2tCpYvPexXc1Ef
HqvwkyE/ADUu3Xk/1H1zlC3BpEZ4rThGvSsyrSw1jRsajBOur2G0rY/f7sfK
s87HccCRemjOAGQxn0HXwC7jgC12jsq1XX9Pxqm6EHUvM+JfPHTtenw86j6j
fRStOe7hPSfgE9q33gH4B65uy1iXB6PWQTMyDn5eu8l6/kJrUKOKdUnX+fd0
mX1DmeIf1AKnKq+7VHxY5cesq1uFP3i6po/r+vWprlk6Te3aeOpRN2Jc8k26
NTx6V1J66o304HvFo78JkTwHJ66ZtRkH0OtB9Xvo9O/jOM5DPgjNhxfnhQI3
5pyMu41FzAlgGXIcdF2FxFY6n6nWvpjn0fpu4whxDFtxxPL+YYt4o/X1I+uv
c/Gz0dw+Cub9C5G/kebbxufVlV4V6Tm+eD2Is9WED1DXxe9vj/y540eRjDHV
93T1u1X74bHiSr5hFGziPQ2XXo8tep3oU5LT4Srenn6Bsp2vVO1ekT0sCxei
ijkqnwLGEPwPiDOCXyvJ3U/nc6fXn5v9btMHfMSrsjtvgz2IGIN8yhhdOm/2
6F2cvwBu1Te6x8QrHv1tSPy8v1RdqjgBDafIVzIEG6C3VX7p8jjchUdtd14B
4N/dMg9pnIdXtn+SYd+LjpV+QzvVQuoen3pdqPW+LfYceEzR/w6i6lAf0t2u
1NQuY0raXwd/G/xuEKkdmlTFBkN++XpsDqV/GXxz64+/Kw/7Gt3xKDxa1Ucv
EY+epiZWrbMCt0rTkeaRXxat05d/99D9178Plt6n+XNd4Q3G++nMi2uEfOHC
KjrnlK1+lR5k8CH0J4rbR/nLGa9mJo2mBjn82YTHfM/MUq38k9rNa8n9V/n/
OXKtAvl2WeqWwEk+mfekWDd/l3XAvuPTp8Svnvh+q25In6r+HIf+GuPQ24IT
c9i9xo/+pkSvQdhWqthqjM3ivqVY30Ovaj/cJOacVz6mx+URK3HFptC52PO8
bNbTRbZf4AfUcaSR7kPz4D4tyV1AjAY5d9g//F/IFdA9bsENe2f9iHPPdX3J
+jkYjGuCM6pPXvLd+vojpU92sQ+xDfDq2H6ep7ePNOY/VWxpXzzSuLGP/lS9
+CK/ybq6EdfVJrWd41Gb+sOm+JY99FhBzSvFwt+bRnHp+Jq31InFlrpasfPi
Glq819Jneww1OqN+S/Io0t+hjhYCv2y/35XvUfswhp92agp2otYMHEbTmX4u
u8xRhYmzef5KQKs4GVDim173vDfzqUZs+4NzpBf7pPvCH+ZLv72ybdNZzU76
HKE+5RWD/nYlxqM7w1uIT8J2ASZpPZ62X1Anju8Vr8ChvGi+9O3Bvmr+lWAI
8A++BmCfytezSdWe1ynw6jvMLUv4SmH7jOM+YeGkPucxXbTDvlLG+i42jcLc
dXoriHPJF48z3KsedlV0Paxa0x7P33OS/LotuSSC+cKj2zrqdWyWZTxK68wj
HYP1cbX4c8N99GS8YE6U164nQuofmHuZltGB+/DtSpyLGsR1xPvuw1fPe6Iw
UmpkGRellxMLalpncv+Xn7Uf+wsXewEuzqeAHMbOkpOjBs/liuPRRSugP0qe
ih284tCrzPHIppsO1ivJGBvOXLIGTV7Hg9v72zyvW8T9LnYHBDkCKnai46fa
j7GvftI9KtetZQOZH+PBw7x1qDvV/jPkUcNPV/Eu43qfsxXfoMZa1KEib1z5
y9f5YlL3Zqu+0H2Y3I37Qc65ylvQ3x0HQ46NR4rXpjmvsU3kOPtf0IM77deO
9WFEuu4aayKPbZZuYJM3fGzedSj6WHGlrvvemfuTlT979feDlXiTvrbN57ac
p9b3DqxJYPvL6mSlVmoyPc5z0lx3GvMxJtQzWOUiWlwXaN+ly88noKLl01nV
oTc5a74GfpONuYGyXYVHz60LX+X5RcaGqod+V/Qk7/9d0eZXi8ePRecNi646
FSq7WQrHbcltHc3zwhRfHXpUalsKWIX87aS+aFk3H6ozHMUJNtmtp7n0/47X
seB9SPPtzX13yJ+wzuJaoG9SLws7CteifHne2nMerfB767kfzO3KguznW7yO
XtYNKldX/w0b8Rg5TMfGIyW28Mb0mrfUqV0Ljw6t1UePER2z37bPMOHYO+r1
Jc8RerxnsD7vr657BtJn2RVfckXyVNZxbYXCtZP+DOMBPmTFVbVaR+ePVu9F
4D3WbvbIdjSP3WPuyYZzmPbi3Ptt+4dusKnmWfS9HseDgDnAn1zq/StX3ass
i/Txs2J72Z+L5LkUVQ/7dzyeypaOGS1y9QxjTMrH+lz5zM5FF6u+59+FWwj6
Wfnh0jnmi5w/6+NSsV+GdVHoVrfMgWR7+Ot0jzz4x3B+K3x6qbpUT/dlYD2D
nA78DueOV0v6c/Tm56xqd9XaT+psY/45+BqBa7h+9NLUcSvvAS4M2EuIJ+F8
H4Mnp8GjRYEeAh8cYhxJfehyrP8Uxw4SjtSj79tTvHi4prXPKX1daZ7TZT9h
uBJbhP2mxtmZ+I4fOhf0P/H8h/qix/uebv8+CnaNux4iDvWRZzTR+R6r29wZ
foJDK/w/Pr3yAb3KigCDZLy49JYx6W3eYvvIERvpI9tIn4o9epdXvt23LF8q
FtvepvT6awW6r9KS3ljAFF/mpKqBvZf5gfoI7VNzUv2BpDY2zCxx+vjCCR6C
726679pYxduBJfdzX92afD7GEBULW/699rU4kiMuNav2N8o0P4n9c28n+8Ia
GP7GaFqbH7fLa2LkzwOvVB+ibbpa25CH64jR4Lj1R9slidWPwgZN+m3JAxDb
cbbcb31RZiLpe7H0/cyjycynxdjQCfGIz7fXyW/Yt1rbrPJM+fHY9Re2XcYj
cEzBF5y1rna/r7PegdxIi9KPjK1jAjVZ6D/0mGOM+blPB+l1kFpTGkFAX6ve
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
tXXTapzMjtILY7EX73jQpo55u2YNcyzxKLDKMQ9rcs1FK6CPlVSNx2tN6/MJ
bNLnPoffXWI8gt/uj0pADW8/HQG/9mTQmn82mxlUML7R+d0/0KdP/1rwqVFF
/ag//w3iP6izHe2c55DEEVT9zw+qBrqOXu1Xc7LM5vWsgeJJeZS+2TWG4Atn
BfyGwL0ZreNWTuR3xCPEjgap/K3Z0t/rxY79WMfozeSQ2b4js5Pdsk0onE7w
NcNeVn69xe9Pdu95/VWq/qBmkKHjcgYmouuO0aOi5Ud0VveEy/KVc/uFSPYV
j44mkvtg05dqQEa46xyxqB3cUbH7I5VTa0uOuNQAWZ/59bN6b3yii9Jb+nz+
7+j9p/+HPv38d5Rrn9H+vYVUn1ul8yPRLabEt7SeNAUXkO+Q9tdt02GLf6t6
dsx7m20+xeHfkrpO5BDivZLmXGw3T3eNT2TZeYlZpb/zvBYN5r/R0j6ZznqM
TDfwgkeTiKy+T/3Jtr4668SX612XP4DvrFGVbcsfMe/8Q/oePYtya57Xuue5
uV/d4bVH28Vo5RgnDDoO9q6XThDwPPLpYwmc2+arPfQqf15B3DOvcnLelwLK
WbvV4yPmD6zJtL5Q0b4WvgfUCW2s+TE/U8n+ScNBk3rGHf388Rfx89Wr6/i1
F3HCG2uuniDmddBx8TSmqV4DOfsb1XvL6+NI/IqIkYl8+ffxa/w+JV8+/RuJ
o11d/FViZA/p3VPlEv7+wjjWNyjqL8Y+YMd2B0Xh4MYzrYm9uy4+4kmv1GZV
5zAEEjuEHbT/uaTx6LjPyrWrJ33+4Be/7oS8XlScya820av86SXmH/pYCam5
k99O+Ueueuf0tVamD0WD50uDLo0r4fe56l7z+5s5Z7jK01vmCo+5PllPNGuX
dM74dJf5IFwzWm+AwwhYBOwDzoEvCJ9JTGG26PMDRiG/ADkJHeuWlmM6rcZV
zLGnY2XbxBE7KXf/lX43/9pLkvHYItNppT4zZSzMYg5Ab6Q4qlZjPgENgwZ1
mhnVc1A+c6QvZCvM7Hh8xfOheyqeyj6yEds5ca/Dku2reqJXLHqVvwXR9Uj8
/lszZJ3x8BwZsg657F7RH1WD7SqL3hdN+lDp0sdqmz/r0vtKj362eH082aUX
T9xXe2IKL9j93Sf6+OVf05fL/0j37a+CNXem4g1CXkMz0r3S0z0UNFd4l2rG
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
RAhcO8wv8DkOjf8HkUY89g==
            "], {{0, 138}, {420, 0}}, {0, 255}, ColorFunction -> RGBColor], 
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> False], Selectable -> 
           False], DefaultBaseStyle -> "ImageGraphics", 
          ImageSizeRaw -> {420, 138}, PlotRange -> {{0, 420}, {0, 138}}], 
         TraditionalForm]], EdgeForm[None], GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
D8tcwygGbMl/Yz02NnMcWMIzjMk85oofL2eOFYoBE+HD4R+Tx0Lfvyqfj435
PG7Pn29F/q5/5s+/Pmetq0GZ+5cn+OdxbCn8Md/fF14Gz4OnZo5dirVTMse0
pcoj8LHwT8o1mePVMuWFzDFK+/iDzPFZ+2xu5pi8knt+zmO48toM+Hj4Z3gZ
fGnB+WtO5ri3QnlHew5eDi/P84Ly9S3wHPgVrSu4XsG57BO4hsYD/gqupfeF
v868r5Wv52eOJ6vhTzPHHMXObzLHirVcX5g5PihffZ85nihvzsscl1ZpDWeO
P8qtSzLHXuWTxZljlPLyijx/KbeWSO6tVJ/smdxDqT75g3uuLji/74CvLbg2
257nGtVaWzP3Sqpb/s7zkXLuX3neVL7elOc75eg+yiXwJ8oLmXsr1Wa3JceN
8+ANeR5Ufu+Xr+H53L82zy+qVVbmOVq1xC957lYOPJr/31Nw3ZiSe0DVYEcl
97+qS/eFby64llPMv63gWm52Zk3gKa4Vk3tG1ZC/5Xlcdddq+PKCa4zdmXtJ
1Xu/5nlc9c+aPPepNluX53H1pudgPeBOvMvMfH61Jmdl1jH6c/+tyXH1HL6z
a3KcPBsembmeV167JTmWnsn1Lsmx6Cy4c3LcPkO1eXIfXQ5+NrO2oFq3SXKf
W5brneDP4JrwTckx/HT45uRcUAMekbkvUI6ujj1VcK1+anKPr/q/YXIvfwx8
cXKPXxq+JFlPKKP6PVkHOFo1O/wSfJRqfPi5gnuEKsl9ver5E5L7etX5pyT3
3eoXqsKPF9wLlE/WDdRTlMtzt3qQ85Nz7pHwC5n7HeX34Xm8Unxrn7xPlTev
1X6GTw7XVcqVqnvbwe8VXCe3Te5VT4TbJGsmJ8Ct4XfhqnDtzDVDV77/6mT9
pIqeh+u94W5cl/il35oEd878/S/Dz2XWiFTztErWWCrx2WbJGshx8JDMWpPq
n6GZe1XVUcPy2Kva6fnM+pLqpRuTc6tq/o7JuV69QIfkGkD1fEv4LbgC3DRZ
DykPX5Ws+VRW/5GsF1VUn5Gs+RwP103uB4+Az0nuE9WDnJ3cn6onejVzb65a
65U8DitfjMtjuPLI9MzaXT89S2YtTj3XtMw6Xl+t2cw9uGo51amqV1XLvZi5
p1btNzlzv6/+7s08zitHvA5XK7in25ZZVxmtNZi5N1ffNyGzbqAe4ePMmuFA
rYXMGuAA1QV57FXuWJBZD3xG+w++BH42j/OK+YO0FzNrd4PhSZn1B/Ua4zPr
A+r7Jua5Rv3IZ3msVsyfkeeLJ7j+b2ZdaAy8JbNuMxL+J7OmNAr+MY8zivOL
8nioHPFtZs3zOe5ZCl8FD83jmOL5MHhVHs8VP0dl1gRUV5+ZrOmp9/wuj3vP
c60x9ip8rNY8/ELBPWOd5L7jcPVbmTXbIVyLZL1rPH6PZC1oAn5jZt1pBLwz
cxweC6+Hb4KHw5sz60UvwL9nzk2Kpe9m1mmf5PquzBraOHi/5Bj7Cn6vZB1p
Il5inbS4F/Elsbu17/D7J9fMk/BZsp72ksY2XMsqJpRKrqVfw/8XrgUVGweE
tbaPuD4wrNd8DA8K61OfwM2T+6+vFcPCetmH8PVhbVrj2T6sZWstdQhrzZqj
G8L6r8awf1hTm6t9HdbENT7PhLWh+fCzYb3sU/i6sH6teT9D+4RnmIevrPvg
OfgG2ifwF/h+Ye3vPbh+ssa4AN8oWTP8Ev9kWKd7H66XrEl+jh8c1ub0/Q/n
fcgMuAX2Afd8g78p1wo01+cla5V6zqfCeuIHcM1kTUzjVitZt9R71UjWxzS2
pyfrXRrz6vna03ielKwTanyqJWtles5OuT6g/dIxfAagNX9zriFoXbUOnwFo
j7cM63eKRW3CZwmKA+3CZwOD8/WvmP8V/sqw5qh92iqsM2pNtg2fSSgOXB3W
EFVXXBXWK5XrrwlrlKrtT07W/TQOj4Q1uLfhR8O93Dsaj3BvqRqvdr4HP8Mf
m6zH6v5xYa1B9fDYcK+uenhMuIdXfT40rD9q3oeFNWLN7/Cwjqz3mhTuaVWL
PhSuXaZrHYV7YNXGE8N9rOrnl8L9sOrtIWFNU+vn+bBGqXUyPty7qmaeEO5p
VUv3DWvNs+GyyXqy3lc5XfXGTHyZZD1Z6+rlcC+tWrpSsiasdVsxWS+dpXvD
erTW+fXJ+smi5Hytmmch/pDkvDwlWVd5ivu3ao0ka91v4A9L1sCn4o9I1rff
wh+JPQZPwx+erJm/ib+Wz6uBUS4YEdbutfcfCOv+uufVsGak+v/4ZB1b714h
Wbd/F/94XjeISydr4xr/kWEdX8//WF5zaHxGhbUevePosNajfu2F8JmB9mDv
sLauZ34urDVr/fQJ6/sat25hDVMx8Iqwfq38e3tYU1UMvyOsbSqGvxbWxaRd
vB7WztSnrA33QqoldoZ7b9WW6ntXFtzf3RbWZhWT14VrI9U56tlXFdyX3hs+
O1Hs/T2sZahW6RE+I5E+82D4jEHz0j18nqH43yt8BqN5vD98XqJ57Bk+a5HO
c1dYj1UuuDOs0ypfPJ25X1fvLB1AvanWx61hjVq55pawxqhaomtYf1b+6hLW
cpWv14c1F9VOG8Kai2qnNeH6T/V5sYT7ItXwOjxS36va/q+w1qCaMyvhHli9
wOawnqL6M5Vwj6R+YXdYK1H9vyuslai2vyd83iMdqXNYR1XNECX8nuq57g6f
zSgPbgprQKppV4XP/1TP/xY+s1HvsDp8Rqja/s+wfqRa94+wHqS6cWNY31Ed
+0v47FA9wn3hcy/tu2XhczjVkL+GzyNVV6wMny+qX1gRPrNUv7A8fC6o2v7n
8Hmh6o3/AXG92IM=
           "]], Polygon3DBox[CompressedData["
1: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
G/P+j4B3L9GHm4AfBe9RoldXqdGvW5fom03dA+A9S/TnduBXwEPBv4O3B78K
PgT8h1wMfhk8BPwbeNUa/bpNib6Tk+Sm/5ToRTnpKvD2JVw1P/hk8Lrgk7p6
dRJ4HfCJXT09Grwq+FjwSjV6d6sSfTgX+Di5DnxCmz00apM16d7qy/wx9Fej
f5y1B3ysXAk+HrxcjV7askQv7gh+HXyY2gN8jL+L3E47mf4Aawb9wfR/ZH4X
8FvgYW5qNtpA8HN0DwD/1IazbgTvWsJPy9Toy81L9Od0NfV86RK/Y026ATyo
hP+2BD8N3q9E7/cHPwPev8RPbAF+Crxvid/YFvwS+GDwr3I5+E3wEdZ2uRb8
Bvhw8N9dfR0JPtDa3aYmWZv2LvEbJ3L9FPwZ7ST6y9b4iS1K9HI/8OPgvUr8
i39v7dmnhF9Xq/E325bo/xlquH858JFtNGh/a0WJ332/xH+MX+Jvd1dv8Dz3
YEyieq/EP49X4rflPLnulSZcuCNtc/o7Mfa9z5S2Of1xS/z121w3s7aV+NOP
S/TNxFzvkP9K9M0kXO8Ev8p1A/AYXG+w/nFdHzw61+vBB9AG8XkHeU/c32DX
RBNOGxe8B3gb8J7uYb1WzWuX4u+PaKMh1BI+A5/Fkm36jrWjxG9bm5fl9cOY
W8IaD94UfGqbfOIs8Cbg4eAFwcOtleBTwAuATwGvBz4ZvAL4IvBA8JngmWq0
8Argo8Ebgh8G71biH2esqd3Lg48Cz1yjjVYEH9OtV7WUoYl+Y13wfeCdS/zm
8uALwQPAZ1ibXSN8tx0Z+5qx7dtkF2YY34LXqvG3O5T4x7Vr/POOJX7V/XoB
uL+1Dbwk+BxwP/BpHd9cCd6uRButA74XvFOJn/sBvJ733+R5397xweAm/Ptb
zfpYE3xfmz2n1/Ye3IvuOb287+ledM/p9b1n96KccGWT30Cu2J32VS976LUa
/fQx/U9or9ZoquPcG71oLTn0+iYcLbeqifTWc5ZoJT2CXlgPq3fQU+ot9Rhm
I3povbQeZLFO7/lbz1GijfSoelXXjGvHPaz31SO4t+UkvfGIXrhKTtRL+5v7
2+sh9JJytFxtTbihSc2wVsg51zWpOXKRHvjObn3rjc1U7mjCkWYtctAtTThM
bjITub0Jx5qVyFm3NuFAucw9pVedu2Svybm3NeFEuVjPcFOnr/USw61DvXD4
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
           "]], Polygon3DBox[CompressedData["
1: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
9x0byv4Fd/Xc0Q==
           "]]},
         Annotation[#, "Charting`Private`Tag$7877#1"]& ]]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0skrRlEYwOFr/HxmWUmRnRRbKbZSrJQUO9mwoKxYW7Am/AFiLbE0zxvJ
PA9JMkVmSTy3LH73OXVut/d0bkFTe21bTBAE3XpXuH7WpQZigyCTw8znOEs4
xwpusIZnbOQjn9RqnRoXBF3MZS+LOMQyjrKKk6znIvd5zU9t6VX3mjLQNqe5
wxnucpZ74Szc5zwPuMBDLvKISzzmMk+4wlOu8oxrPGefuW/4pQu96UEd5tpk
MxdYxwlWcoSlHGQhe5jDTiYzqpbwHL7dwBNWc53l4VlYzDHmcdf7V/xQhl50
p2wzpjOLaeEeU5nGFKYwmVFGGWESExhhHBPDu2UCfxWvn3BP3zJC0O9x+/8f
/AEIP0i4
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{661, 981, 458, 660, 1087, 883, 662, 1088, 884, 663, 1089, 
        885, 664, 1090, 886, 665, 1091, 887, 666, 1092, 888, 667, 465, 668, 
        1093, 889, 669, 1094, 890, 670, 1095, 891, 671, 1096, 892, 672, 1097, 
        893, 673, 1084, 1098, 894, 982}], 
       Line3DBox[{675, 986, 1185, 674, 472, 676, 1099, 895, 677, 1100, 896, 
        678, 1101, 897, 679, 1102, 898, 680, 1103, 899, 681, 987, 1186, 682, 
        479, 683, 1104, 900, 684, 1105, 901, 685, 1106, 902, 686, 1107, 903, 
        687, 1108, 904, 688}], 
       Line3DBox[{690, 988, 1187, 689, 989, 1188, 691, 487, 692, 1109, 905, 
        693, 1110, 906, 694, 1111, 907, 695, 1112, 908, 696, 990, 1189, 697, 
        991, 1190, 698, 494, 699, 1113, 909, 700, 1114, 910, 701, 1115, 911, 
        702, 1116, 912, 703}], 
       Line3DBox[{705, 992, 1191, 704, 993, 1192, 706, 994, 1193, 707, 502, 
        708, 1117, 913, 709, 1118, 914, 710, 1119, 915, 711, 995, 1194, 712, 
        996, 1195, 713, 997, 1196, 714, 509, 715, 1120, 916, 716, 1121, 917, 
        717, 1122, 918, 718}], 
       Line3DBox[{720, 998, 1197, 719, 999, 1198, 721, 1000, 1199, 722, 1001, 
        1200, 723, 517, 724, 1123, 919, 725, 1124, 920, 726, 1002, 1201, 727, 
        1003, 1202, 728, 1004, 1203, 729, 1005, 1204, 730, 524, 731, 1125, 
        921, 732, 1126, 922, 733}], 
       Line3DBox[{735, 1006, 1205, 734, 1007, 1206, 736, 1008, 1207, 737, 
        1009, 1208, 738, 1010, 1209, 739, 532, 740, 1127, 923, 741, 1011, 
        1210, 742, 1012, 1211, 743, 1013, 1212, 744, 1014, 1213, 745, 1015, 
        1214, 746, 539, 747, 1128, 924, 748}], 
       Line3DBox[{752, 1129, 925, 750, 1130, 926, 754, 1131, 927, 756, 1132, 
        928, 758, 1133, 929, 760, 1134, 930, 762, 1135, 931, 764, 1136, 932, 
        766, 1137, 933, 768, 1138, 934, 770, 1139, 935, 772, 1140, 936, 774, 
        1141, 937, 776, 1142, 938, 778}], 
       Line3DBox[{777, 1228, 1029, 775, 1227, 1028, 773, 1226, 1027, 771, 
        1225, 1026, 769, 1224, 1025, 767, 1223, 1024, 765, 1222, 1023, 763, 
        1221, 1022, 761, 1220, 1021, 759, 1219, 1020, 757, 1218, 1019, 755, 
        1217, 1018, 753, 1216, 1017, 749, 1215, 1016, 751}], 
       Line3DBox[{780, 1030, 1229, 779, 1143, 939, 781, 1144, 940, 782, 1145, 
        941, 783, 1146, 942, 784, 1147, 943, 785, 1148, 944, 786, 1031, 1230, 
        787, 1149, 945, 788, 1150, 946, 789, 1151, 947, 790, 1152, 948, 791, 
        1153, 949, 792, 1154, 950, 793}], 
       Line3DBox[{795, 1032, 1231, 794, 1033, 1232, 796, 1155, 951, 797, 1156,
         952, 798, 1157, 953, 799, 1158, 954, 800, 1159, 955, 801, 1034, 1233,
         802, 1035, 1234, 803, 1160, 956, 804, 1161, 957, 805, 1162, 958, 806,
         1163, 959, 807, 1164, 960, 808}], 
       Line3DBox[{810, 1036, 1235, 809, 1037, 1236, 811, 1038, 1237, 812, 
        1165, 961, 813, 1166, 962, 814, 1167, 963, 815, 1168, 964, 816, 1039, 
        1238, 817, 1040, 1239, 818, 1041, 1240, 819, 1169, 965, 820, 1170, 
        966, 821, 1171, 967, 822, 1172, 968, 823}], 
       Line3DBox[{825, 1042, 1241, 824, 1043, 1242, 826, 1044, 1243, 827, 
        1045, 1244, 828, 1173, 969, 829, 1174, 970, 830, 1175, 971, 831, 1046,
         1245, 832, 1047, 1246, 833, 1048, 1247, 834, 1049, 1248, 835, 1176, 
        972, 836, 1177, 973, 837, 1178, 974, 838}], 
       Line3DBox[{840, 1050, 1249, 839, 1051, 1250, 841, 1052, 1251, 842, 
        1053, 1252, 843, 1054, 1253, 844, 1179, 975, 845, 1180, 976, 846, 
        1055, 1254, 847, 1056, 1255, 848, 1057, 1256, 849, 1058, 1257, 850, 
        1059, 1258, 851, 1181, 977, 852, 1182, 978, 853}], 
       Line3DBox[{855, 1060, 1259, 854, 1061, 1260, 856, 1062, 1261, 857, 
        1063, 1262, 858, 1064, 1263, 859, 1065, 1264, 860, 1183, 979, 861, 
        1066, 1265, 862, 1067, 1266, 863, 1068, 1267, 864, 1069, 1268, 865, 
        1070, 1269, 866, 1071, 1270, 867, 1184, 980, 868}], 
       Line3DBox[{882, 985, 1284, 1086, 881, 1283, 1083, 880, 1282, 1082, 879,
         1281, 1081, 878, 1280, 1080, 877, 1279, 1079, 876, 1278, 1078, 875, 
        1277, 1077, 874, 1276, 1076, 873, 1275, 1075, 872, 1274, 1074, 871, 
        1273, 1073, 870, 1272, 1072, 869, 1085, 1271, 983, 984}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{251, 459, 1087, 252, 472, 278, 1188, 486, 292, 1192, 500, 
        306, 1198, 514, 320, 1206, 528, 334, 1216, 542, 1130, 348, 556, 1143, 
        362, 1232, 570, 376, 1236, 584, 390, 1242, 598, 404, 1250, 612, 418, 
        1260, 626, 432, 1272, 640, 446}], 
       Line3DBox[{253, 460, 1088, 254, 473, 1099, 279, 487, 293, 1193, 501, 
        307, 1199, 515, 321, 1207, 529, 335, 1217, 543, 1131, 349, 557, 1144, 
        363, 571, 1155, 377, 1237, 585, 391, 1243, 599, 405, 1251, 613, 419, 
        1261, 627, 433, 1273, 641, 447}], 
       Line3DBox[{255, 461, 1089, 256, 474, 1100, 280, 488, 1109, 294, 502, 
        308, 1200, 516, 322, 1208, 530, 336, 1218, 544, 1132, 350, 558, 1145, 
        364, 572, 1156, 378, 586, 1165, 392, 1244, 600, 406, 1252, 614, 420, 
        1262, 628, 434, 1274, 642, 448}], 
       Line3DBox[{257, 462, 1090, 258, 475, 1101, 281, 489, 1110, 295, 503, 
        1117, 309, 517, 323, 1209, 531, 337, 1219, 545, 1133, 351, 559, 1146, 
        365, 573, 1157, 379, 587, 1166, 393, 601, 1173, 407, 1253, 615, 421, 
        1263, 629, 435, 1275, 643, 449}], 
       Line3DBox[{259, 463, 1091, 260, 476, 1102, 282, 490, 1111, 296, 504, 
        1118, 310, 518, 1123, 324, 532, 338, 1220, 546, 1134, 352, 560, 1147, 
        366, 574, 1158, 380, 588, 1167, 394, 602, 1174, 408, 616, 1179, 422, 
        1264, 630, 436, 1276, 644, 450}], 
       Line3DBox[{261, 464, 1092, 262, 477, 1103, 283, 491, 1112, 297, 505, 
        1119, 311, 519, 1124, 325, 533, 1127, 339, 1221, 547, 1135, 353, 561, 
        1148, 367, 575, 1159, 381, 589, 1168, 395, 603, 1175, 409, 617, 1180, 
        423, 631, 1183, 437, 1277, 645, 451}], 
       Line3DBox[{8, 667, 23, 681, 38, 696, 53, 711, 68, 726, 83, 741, 98, 
        763, 764, 113, 786, 128, 801, 143, 816, 158, 831, 173, 846, 188, 861, 
        203, 875, 218}], 
       Line3DBox[{263, 465, 264, 1186, 478, 284, 1189, 492, 298, 1194, 506, 
        312, 1201, 520, 326, 1210, 534, 340, 1222, 548, 1136, 354, 1230, 562, 
        368, 1233, 576, 382, 1238, 590, 396, 1245, 604, 410, 1254, 618, 424, 
        1265, 632, 438, 1278, 646, 452}], 
       Line3DBox[{265, 466, 1093, 266, 479, 285, 1190, 493, 299, 1195, 507, 
        313, 1202, 521, 327, 1211, 535, 341, 1223, 549, 1137, 355, 563, 1149, 
        369, 1234, 577, 383, 1239, 591, 397, 1246, 605, 411, 1255, 619, 425, 
        1266, 633, 439, 1279, 647, 453}], 
       Line3DBox[{267, 467, 1094, 268, 480, 1104, 286, 494, 300, 1196, 508, 
        314, 1203, 522, 328, 1212, 536, 342, 1224, 550, 1138, 356, 564, 1150, 
        370, 578, 1160, 384, 1240, 592, 398, 1247, 606, 412, 1256, 620, 426, 
        1267, 634, 440, 1280, 648, 454}], 
       Line3DBox[{269, 468, 1095, 270, 481, 1105, 287, 495, 1113, 301, 509, 
        315, 1204, 523, 329, 1213, 537, 343, 1225, 551, 1139, 357, 565, 1151, 
        371, 579, 1161, 385, 593, 1169, 399, 1248, 607, 413, 1257, 621, 427, 
        1268, 635, 441, 1281, 649, 455}], 
       Line3DBox[{271, 469, 1096, 272, 482, 1106, 288, 496, 1114, 302, 510, 
        1120, 316, 524, 330, 1214, 538, 344, 1226, 552, 1140, 358, 566, 1152, 
        372, 580, 1162, 386, 594, 1170, 400, 608, 1176, 414, 1258, 622, 428, 
        1269, 636, 442, 1282, 650, 456}], 
       Line3DBox[{273, 470, 1097, 274, 483, 1107, 289, 497, 1115, 303, 511, 
        1121, 317, 525, 1125, 331, 539, 345, 1227, 553, 1141, 359, 567, 1153, 
        373, 581, 1163, 387, 595, 1171, 401, 609, 1177, 415, 623, 1181, 429, 
        1270, 637, 443, 1283, 651, 457}], 
       Line3DBox[{275, 653, 654, 1098, 276, 484, 1108, 290, 498, 1116, 304, 
        512, 1122, 318, 526, 1126, 332, 540, 1128, 346, 1228, 554, 1142, 360, 
        568, 1154, 374, 582, 1164, 388, 596, 1172, 402, 610, 1178, 416, 624, 
        1182, 430, 638, 1184, 444, 1284, 656, 657, 658}], 
       Line3DBox[{445, 639, 655, 1271, 431, 625, 1259, 417, 611, 1249, 403, 
        597, 1241, 389, 583, 1235, 375, 569, 1231, 361, 555, 1229, 347, 1129, 
        541, 1215, 333, 527, 1205, 319, 513, 1197, 305, 499, 1191, 291, 485, 
        1187, 277, 471, 1185, 250, 458, 652, 659}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJztyLEJgDAARcGPmkGcxB0cQbDOCo7sCOkCCinS32se3H7V816SbCVZ03u+
fw/OOeecc84555xzzjnnnA/9F+ecc84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPO+bw3oH3qzg==
     "],
    VertexTextureCoordinates->CompressedData["
1:eJx9m83P3NQVh0dVilDVBX9AF5SmFUII9T+YLFgEVKEo6oJlVakSi0BRVVUs
o/4FUYSiKrCoukBILDqqqrdQAjVToIYCNcZpnOAkjt/xx2Q+Mssuqn7E9/6O
dR7UZsHoea99z3l8fTw+9vDtH//07E++NpvNTnx9Nrv/yX+/PvnUxZNP/W4u
/tXIS+Ph6Pkvj57/K8Zz4+T+8Jd/N16N239p/MD43xr7N8aP38eLK8zXGZ+9
P3xybdyN82+MX7q/+dHOOPw7gGezC9FTvmL5iuXrx3Nj+YrlK5av378xlq+f
rzOWr1i+YvlecOt2AMt3Cd8lfJfwXcJ3Cd8lfJfwXcJ3Cd8lfJfwXcJ3Cd8l
fKfztIwe8hXLVyxfP54by1csX7F8/f6NsXz9fJ2xfMXyFctXLF/PWt8c65tj
fXOsb471zbG+OdY3x/rmWN8c65tjfXOsb471zbG+OdZ3us68GfOUr1i+Yvn6
8dxYvmL5iuXr92+M5evn64zlK5avWL5i+XqezaqYl3zF8hXL14/nxvIVy1cs
X79/YyxfP19nLF+xfMXyFcvXs76bavMVy1csXz+eG8tXLF+xfP3+jbF8/Xyd
sXzF8hXLVyxfz7PZpRhXvmL5iuXrx3Nj+YrlK5av378xlq+frzOWr1i+YvmK
5et5Nns0xpGvWL5i+frx3Fi+YvmK5ev3b4zl6+frjOUrlq9YvmL5ep7NrsR5
5SuWr1i+fjw3lq9YvmL5+v0bY/n6+Tpj+YrlK5avWL6eZ7Nn4jzyFctXLF8/
nhvLVyxfsXz9/o2xfP18nbF8xfIVy1csX8+zWRP3k69YvmL5+vHcWL5i+Yrl
6/dvjOXr5+uM5SuWr1i+Yvl6ns1+HreTr1i+Yvn68dxYvmL5iuXr92+M5evn
64zlK5avWL5i+XrWv8Pc90cH8xX7/uhgvmLfHx3mvj86zH1/dDBfse+PDnPf
Hx3mZ3GedljHl+DJz+D3G/uUufjdMd4e41/d749xO+0v1v5kzqP93sU8jKtP
zZeM4xft89bof+8rf6/i3zUuVhzuz78zfoU4M/fv8JW/M762e2j8XFj/9mCI
avuJ/XiK8RTjGcYzjBcYLzBeYry08W8GGxsX+/53+t4X+/lXmH+F8Q7jHcYH
jA82/o2R79q42I9vMb7F+B7jexv367Wc+/VZzv16LOf++C/n/ngv5/74Luf+
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
+BxH/Hh87uFZ90Vl9N0b+//Pb/r/7sQ17ldfxv3pFdyP1rj/PBE/xby/fAz3
k+/i/vEM7hdXuD/8xf+9H6zje0jV3/TeT3zO1Z+ea0/3d2+6+mui323jS67+
pufG4iuu/qbnkuLG1V9jz5HEei+p+x29xxPrvZdY74nEeq8ivhTrT6znvn77
u8Z6rii+EetP/HCsP92fPBnrT3wu1p/4Qqw/8cux/sSPxvoTX4n1Jz4d60/8
cKw/3S+cjvUnfi7Wn/hSrD/xo7H+xEex/sQnY/3p+/nJWH/iS7H+xCdj/Ym/
FetP33cXY/2J9RwyrPcC5+9ifv6RMO6/X3Q/oO+fe9P4H+4LvGHXx/D9cgfX
19fs+nV+HH/HOJyPd4zD/sfG/vfz2fwwbv+2cZj/Q+Nw/twxDvMfG4f6bY1P
jfm/YtevH437v2UcfD8wzsZ4nxmH68f0/CTEPzYO148W8/XG/nf2et5wZByu
x+8bh/r71DjM/4VxqK/p+UbIb3q+EfJrjcPx6Y3D8Zmeb/jzZfrdhli/OxDr
Pb041FOO7a8ZPxg/xXrPKA4+Deabng8En95Y70nEwWeDeHvj8Kk6aOL3x9Q/
h9/JvGHXn/Cc/k+4Ht4xDu9hp/7zfDz/df04E89/8WH8/Iux3tOKX4j1IA7z
T/3dqVgf1g/F+hC/HutD/I/x82/GT8d6EVexXsQvxnoRh/iD8amjUD+6/jwc
60f8bKwf8euxfsQhny+Mj2I9iU/HehJXsZ7EL8R6Eof87hon3wn1Zde/WF/i
h2J9iZ+N9SUuYn2JQ77XjB+J9SY+ivUmPh3rTVzFehO/EOtNHPLfGh9Oh3rT
9TaN9SZ+KNabeBHrTZzFehP/c/yc+pULsd7EJ2O9iY9ivYmfjvUmrmK9iV+I
9Sb29baYn4mf/vtlj+0T297/Hmth7/s8F+DS2P8ecPq9nOcOPPUv/vc7C/y+
ZYH3b8w3Qb4J8k2Qb4J8E+SXIL8E+SXIL0F+zCdFPinySZFPivgp4qeInyI+
42WIlyFehvkzzJ9hfs5XYL4C+xfYn9uXGC/xfrXG+Vpj/Wsc7xr+NfKtEX/6
fY/ffgXuwIOxP341/Gv40aeBTwOfBj4NfBr4NMi/Qf4N8m+Qf4P8G+Q/5avv
X+XruQCXxsrXj3fgqX9Rfp634P3/yKdFPi3yaZFPi/gt4reI3yI+4/WI1yNe
j/l7zN9jfs63xnxr7L/G/tx+g/EN6i9BfSQYT3E+p9g+xfmYYv8M+2eohwzz
ZZgvw/mdYf4C8xeYv0C9FYhXIF6BeAXqqUD8EvFLxC8Rv7TzR+zzKZFPiXxK
5FOivnl9rZBfhfwq5Fchv8rOR7G/HlXIv0L+FfKvkH+F/Ctcnypcnyr4NYg/
/f7QXy8SY23vx6d+w+/fYv/Wjp/Yz9divtb8xX7+HvP3mL+39RH7eD3i9YjX
2/EW+/hrxF8j/hrxp/+/SezzWSOfNfJZI581ro9r5LdBfhvkt0F+G+Q3/f9J
Yp/vBvlukO8G+W6Q7wbX4w3y3yH/HfLfIf8d8t8h/x2u7zv47OCzg88OPjv4
7OCzw/fHbv4f+uDfxg==
     "]], {{
     {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-76.5063962, 38.9722814, 231.0958904109589}, {-81.375789, 
       28.533513, 222.94520547945206`}, {-99.3700532665052, 31.481788183144, 
       211.43835616438358`}, {-97.2964669, 33.1717156, 
       210.47945205479454`}}]}, 
     {RGBColor[0.7926498, 0.5499369, 0.1278459], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-83.1022365, 42.3830375, 172.6027397260274}, {-80.2472396, 
       26.3150829, 166.84931506849315`}, {-82.8041995, 37.8120478, 
       164.93150684931507`}, {-77.802346917939, 40.8757813645164, 
       158.6986301369863}}]}, 
     {RGBColor[0.5041629000000001, 0.6224121, 0.1753965], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-122.1819931, 39.9281988, 
       122.73972602739727`}, {-99.3700532665052, 31.481788183144, 
       118.42465753424658`}, {-115.2640448, 36.2277116, 
       101.64383561643837`}, {-96.747944, 33.0507687, 91.57534246575342}}]}, 
     {RGBColor[0.8302733999999999, 0.3470634, 0.18826110000000001`], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-106.103175196499, 34.4274140766016, 
       49.863013698630134`}, {-81.375789, 28.533513, 
       45.06849315068493}, {-88.920118, 32.829842, 40.75342465753425}}]}, 
     {RGBColor[0.47563919999999993`, 0.4235616, 0.6312158999999999], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-95.3863425, 29.7804724, 16.78082191780822}, {-89.6122696, 
       44.8741579, 9.10958904109589}}]}}, {}, {}, {}, {}}, 
   GraphicsComplex3DBox[{{-76.5063962, 38.9722814, 
    231.0958904109589}, {-81.375789, 28.533513, 
    222.94520547945206`}, {-99.3700532665052, 31.481788183144, 
    211.43835616438358`}, {-97.2964669, 33.1717156, 210.47945205479454`}}, 
    {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], FaceForm[{RGBColor[
     0.368417, 0.506779, 0.709798], Opacity[0.5]}], 
     TagBox[Polygon3DBox[{{1, 3, 2}, {2, 3, 4}, {3, 1, 4}, {1, 2, 4}}],
      Annotation[#, "Geometry"]& ]}], 
   GraphicsComplex3DBox[{{-83.1022365, 42.3830375, 
    172.6027397260274}, {-80.2472396, 26.3150829, 
    166.84931506849315`}, {-82.8041995, 37.8120478, 
    164.93150684931507`}, {-77.802346917939, 40.8757813645164, 
    158.6986301369863}}, 
    {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], FaceForm[{RGBColor[
     0.880722, 0.611041, 0.142051], Opacity[0.5]}], 
     TagBox[Polygon3DBox[{{1, 3, 2}, {2, 3, 4}, {3, 1, 4}, {1, 2, 4}}],
      Annotation[#, "Geometry"]& ]}], 
   GraphicsComplex3DBox[{{-122.1819931, 39.9281988, 
    122.73972602739727`}, {-99.3700532665052, 31.481788183144, 
    118.42465753424658`}, {-115.2640448, 36.2277116, 
    101.64383561643837`}, {-96.747944, 33.0507687, 91.57534246575342}}, 
    {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], FaceForm[{RGBColor[
     0.560181, 0.691569, 0.194885], Opacity[0.5]}], 
     TagBox[Polygon3DBox[{{1, 3, 2}, {2, 3, 4}, {3, 1, 4}, {1, 2, 4}}],
      Annotation[#, "Geometry"]& ]}], 
   GraphicsComplex3DBox[{{-106.103175196499, 34.4274140766016, 
    49.863013698630134`}, {-81.375789, 28.533513, 
    45.06849315068493}, {-88.920118, 32.829842, 40.75342465753425}}, 
    {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[Hue[
     0.6, 0.3, 0.75]], 
     TagBox[Polygon3DBox[{{1, 2, 3}}],
      Annotation[#, "Geometry"]& ]}], 
   GraphicsComplex3DBox[{{-95.3863425, 29.7804724, 
    16.78082191780822}, {-89.6122696, 44.8741579, 9.10958904109589}}, 
    {Hue[0.6, 0.3, 0.75], 
     TagBox[Line3DBox[{{1, 2}}],
      Annotation[#, "Geometry"]& ], Point3DBox[{1, 2}]}]},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1.2, 0.7, 2},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{334.78595129580367`, 560.3085789940145},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-130, -65}, {25, 50}, {0, 232.05479452054794`}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, {{0., 
      FormBox["\"03/03/17\"", TraditionalForm]}, {167.31150684931507`, 
      FormBox["\"02/14/18\"", TraditionalForm]}, {180.5386301369863, 
      FormBox["\"03/14/18\"", TraditionalForm]}, {185.17972602739727`, 
      FormBox["\"03/24/18\"", TraditionalForm]}, {198.40684931506848`, 
      FormBox["\"04/20/18\"", TraditionalForm]}, {232.05479452054794`, 
      FormBox["\"06/30/18\"", TraditionalForm]}}},
  ViewPoint->{-0.4, -1.1, 2.3},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.7397313161306295`*^9, 3.7397314143730574`*^9}, {
   3.7397314588218594`*^9, 3.739731504625194*^9}, 3.7397325920434985`*^9, 
   3.7397326508459344`*^9, 3.739733792053341*^9, 3.73973402429175*^9, 
   3.739734192260043*^9, 3.7397343315778027`*^9, 3.739735565119746*^9, 
   3.739758901148472*^9, 3.7397872134631033`*^9, 3.7397891631538634`*^9, {
   3.7397930978614416`*^9, 3.739793127459956*^9}, 3.7397931780303006`*^9, 
   3.7397932194932823`*^9, 3.7397934424753*^9, 3.739793498986597*^9, 
   3.7398081876237125`*^9, {3.7398091822942047`*^9, 3.7398092333248954`*^9}, 
   3.7398093318882484`*^9, 3.7398260087732944`*^9, 3.7398269849153814`*^9, 
   3.7398275361135073`*^9, 3.7398304673617907`*^9, {3.7398305095649366`*^9, 
   3.739830539381047*^9}, 3.739830598363945*^9, 3.739830920906808*^9, {
   3.739830960633234*^9, 3.7398309843417673`*^9}, 3.739831024699802*^9, 
   3.739831172160781*^9, {3.739831275093193*^9, 3.7398313236538563`*^9}, 
   3.739831380558277*^9, 3.7398314335612698`*^9, 3.739832710417898*^9, 
   3.739835980921579*^9, 3.7398360945001974`*^9, 3.7398367331264367`*^9, 
   3.739836792453904*^9, 3.739836827198123*^9, 3.739839321764964*^9, 
   3.7398393632711706`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"1e79bfa4-3e29-43a1-b494-ba0550f0477d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BubbleChart3D", "@", 
  RowBox[{"cts", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "All", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}], ",", "1", ",", "3"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739839485453147*^9, 3.7398394855714073`*^9}, {
  3.7398395906146607`*^9, 3.7398396204463844`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"25fdd327-e00d-4aa1-999f-6b7c89675d6d"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
    GrayLevel[0.5]], 
    StyleBox[{{{}, 
       {RGBColor[0.4947336, 0.6054231999999999, 0.7678384], 
        {RGBColor[0.4947336, 0.6054231999999999, 0.7678384], EdgeForm[
         GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{3.669486690720902, 0., 0.}, {0., 
                 1.4909992058492634`, 0.}, {0., 0., 17.833938332157203`}}, {
                 0., 0., 0.}}], {-76.5063962, 38.9722814, 231.0958904109589}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 5.]& ,
            TagBoxNote->"5."],
           StyleBox["5.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.4947336, 0.6054231999999999, 0.7678384], EdgeForm[
         GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{3.669486690720902, 0., 0.}, {0., 
                 1.4909992058492616`, 0.}, {0., 0., 17.83393833215723}}, {0., 
                 0., 0.}}], {-81.375789, 28.533513, 222.94520547945206`}]},
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 5.]& ,
            TagBoxNote->"5."],
           StyleBox["5.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.4947336, 0.6054231999999999, 0.7678384], EdgeForm[
         GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{4.623263523948346, 0., 0.}, {0., 
                 1.8785412848260243`, 0.}, {0., 0., 22.469354307211944`}}, {
                 0., 0., 0.}}], {-99.37005326650521, 31.481788183144, 
               211.43835616438358`}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 10.]& ,
            TagBoxNote->"10."],
           StyleBox["10.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[10., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.4947336, 0.6054231999999999, 0.7678384], EdgeForm[
         GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{3.669486690720902, 0., 0.}, {0., 
                 1.4909992058492616`, 0.}, {0., 0., 17.833938332157217`}}, {
                 0., 0., 0.}}], {-97.29646690000001, 33.1717156, 
               210.47945205479454`}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 5.]& ,
            TagBoxNote->"5."],
           StyleBox["5.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5., {"Graphics3DLabel"}], "Tooltip"]& ]}}, {}}, {{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
         EdgeForm[GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{3.669486690720902, 0., 0.}, {0., 
                 1.4909992058492634`, 0.}, {0., 0., 17.833938332157217`}}, {
                 0., 0., 0.}}], {-83.1022365, 42.3830375, 
               172.60273972602738`}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 5.]& ,
            TagBoxNote->"5."],
           StyleBox["5.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
         EdgeForm[GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{5.5177873076830934`, 0., 0.}, {0., 
                 2.242007448781443, 0.}, {0., 0., 26.816796699117575`}}, {0., 
                 0., 0.}}], {-80.24723960000001, 26.3150829, 
               166.84931506849313`}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 17.]& ,
            TagBoxNote->"17."],
           StyleBox["17.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[17., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
         EdgeForm[GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{3.669486690720902, 0., 0.}, {0., 
                 1.4909992058492634`, 0.}, {0., 0., 17.833938332157203`}}, {
                 0., 0., 0.}}], {-82.8041995, 37.8120478, 
               164.93150684931507`}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 5.]& ,
            TagBoxNote->"5."],
           StyleBox["5.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
         EdgeForm[GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{3.6694866907208947`, 0., 0.}, {0., 
                 1.4909992058492634`, 0.}, {0., 0., 17.833938332157217`}}, {
                 0., 0., 0.}}], {-77.80234691793902, 40.8757813645164, 
               158.6986301369863}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 5.]& ,
            TagBoxNote->"5."],
           StyleBox["5.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5., {"Graphics3DLabel"}], "Tooltip"]& ]}}, {}}, {{}, 
       {RGBColor[0.6481448000000001, 0.7532552, 0.355908], 
        {RGBColor[0.6481448000000001, 0.7532552, 0.355908], EdgeForm[
         GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{3.8994114763961107`, 0., 0.}, {0., 
                 1.5844230827401873`, 0.}, {0., 0., 18.951387390941115`}}, {
                 0., 0., 0.}}], {-122.1819931, 39.9281988, 
               122.73972602739727`}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 6.]& ,
            TagBoxNote->"6."],
           StyleBox["6.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[6., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.6481448000000001, 0.7532552, 0.355908], EdgeForm[
         GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{6.437786504282364, 0., 0.}, {0., 
                 2.6158248753387223`, 0.}, {0., 0., 31.288051215253248`}}, {
                 0., 0., 0.}}], {-99.37005326650521, 31.481788183143998`, 
               118.42465753424658`}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 27.]& ,
            TagBoxNote->"27."],
           StyleBox["27.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[27., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.6481448000000001, 0.7532552, 0.355908], EdgeForm[
         GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{8.35409326244283, 0., 0.}, {0., 
                 3.3944656214152538`, 0.}, {0., 0., 40.60142374687996}}, {0., 
                 0., 0.}}], {-115.2640448, 36.227711600000006`, 
               101.64383561643837`}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 59.]& ,
            TagBoxNote->"59."],
           StyleBox["59.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[59., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.6481448000000001, 0.7532552, 0.355908], EdgeForm[
         GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{4.463711854606537, 0., 0.}, {0., 
                 1.8137116690429487`, 0.}, {0., 0., 21.693923062555918`}}, {
                 0., 0., 0.}}], {-96.74794399999999, 33.050768700000006`, 
               91.57534246575341}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 9.]& ,
            TagBoxNote->"9."],
           StyleBox["9.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[9., {"Graphics3DLabel"}], "Tooltip"]& ]}}, {}}, {{}, 
       {RGBColor[0.9380208, 0.5085008, 0.3673432], 
        {RGBColor[0.9380208, 0.5085008, 0.3673432], EdgeForm[GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{3.669486690720902, 0., 0.}, {0., 
                 1.4909992058492634`, 0.}, {0., 0., 17.83393833215721}}, {0., 
                 0., 0.}}], {-106.10317519649901`, 34.4274140766016, 
               49.863013698630134`}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 5.]& ,
            TagBoxNote->"5."],
           StyleBox["5.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.9380208, 0.5085008, 0.3673432], EdgeForm[GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{3.8994114763961036`, 0., 0.}, {0., 
                 1.5844230827401873`, 0.}, {0., 0., 18.951387390941104`}}, {
                 0., 0., 0.}}], {-81.375789, 28.533513, 45.06849315068493}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 6.]& ,
            TagBoxNote->"6."],
           StyleBox["6.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[6., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.9380208, 0.5085008, 0.3673432], EdgeForm[GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{4.291857669521569, 0., 0.}, {0., 
                 1.7438832502258137`, 0.}, {0., 0., 20.85870081016883}}, {0., 
                 0., 0.}}], {-88.920118, 32.829842, 40.753424657534254`}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 8.]& ,
            TagBoxNote->"8."],
           StyleBox["8.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[8., {"Graphics3DLabel"}], "Tooltip"]& ]}}, {}}, {{}, 
       {RGBColor[0.6227904, 0.5764992, 0.7610808], 
        {RGBColor[0.6227904, 0.5764992, 0.7610808], EdgeForm[GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{3.669486690720902, 0., 0.}, {0., 
                 1.4909992058492616`, 0.}, {0., 0., 17.833938332157217`}}, {
                 0., 0., 0.}}], {-95.38634250000001, 29.7804724, 
               16.78082191780822}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 5.]& ,
            TagBoxNote->"5."],
           StyleBox["5.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5., {"Graphics3DLabel"}], "Tooltip"]& ]}, 
        {RGBColor[0.6227904, 0.5764992, 0.7610808], EdgeForm[GrayLevel[0.5]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                Specularity[
                 GrayLevel[1], 20]], {}, {}], 
              GeometricTransformation3DBox[
               GeometricTransformation3DBox[{
                 SphereBox[{0, 0, 0}]}, {{{3.669486690720902, 0., 0.}, {0., 
                 1.4909992058492634`, 0.}, {0., 0., 17.833938332157214`}}, {
                 0., 0., 0.}}], {-89.6122696, 44.8741579, 9.10958904109589}]},
             
             ImageSizeCache->{{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}],
            StatusArea[#, 5.]& ,
            TagBoxNote->"5."],
           StyleBox["5.`", {"Graphics3DLabel"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5., {"Graphics3DLabel"}], "Tooltip"]& ]}}, {}}},
     FontColor->GrayLevel[
      0.4]]}, {{{}, {}, {}, {}}, {{}, {}, {}, {}}, {{}, {}, {}, {}}, {{}, {}, \
{}}, {{}, {}}}},
  Axes->True,
  AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 1},
  Boxed->{Left, Bottom, Back},
  FaceGrids->{{{0, 1, 0}, {Automatic, Automatic}}, {{-1, 0, 0}, {
     Automatic, Automatic}}, {{0, 0, -1}, {Automatic, Automatic}}},
  FaceGridsStyle->Automatic,
  Lighting->"Neutral",
  PlotRange->{{-126.8905924920396, -72.02772159363559}, {24.073075451218557`, 
   46.36515710584926}, {-13.21577847454149, 253.4212579265963}},
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.73983943334226*^9, 3.739839485864855*^9, {3.7398396078072305`*^9, 
   3.7398396458289957`*^9}},
 CellLabel->
  "Out[169]=",ExpressionUUID->"c82034f9-62ed-4be7-9e36-b766b93dcedd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plot4", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"colCts", ",", 
          RowBox[{"Point", "/@", "ctsSel"}]}], "}"}], "]"}], ",", 
       RowBox[{"Opacity", "[", "0.25", "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"colCts", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"BoundingRegion", "[", 
             RowBox[{"#", ",", "\"\<FastEllipsoid\>\""}], "]"}], "&"}], "/@", 
           "ctsSel"}]}], "}"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"plot1B", ",", "plot4"}], "}"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.737891278069851*^9, 3.7378913026607156`*^9}, {
   3.737891391964906*^9, 3.737891432638107*^9}, {3.737891511901888*^9, 
   3.7378915557078648`*^9}, {3.737891697192785*^9, 3.737891697494539*^9}, {
   3.737891798948846*^9, 3.7378917990895333`*^9}, {3.737892044198992*^9, 
   3.737892051491848*^9}, {3.7378924534789453`*^9, 3.737892453729739*^9}, {
   3.7378925161452813`*^9, 3.737892562554273*^9}, {3.7378926321975737`*^9, 
   3.737892656279852*^9}, {3.7378926932135153`*^9, 3.7378927181731668`*^9}, 
   3.73789294116617*^9, {3.737892990012801*^9, 3.73789301318081*^9}, {
   3.73797068425418*^9, 3.7379706844103827`*^9}, {3.7379783144602947`*^9, 
   3.7379783542728224`*^9}, {3.7379783956208134`*^9, 
   3.7379783996772537`*^9}, {3.737979134899632*^9, 3.73797913502859*^9}, {
   3.737979341165285*^9, 3.737979350787061*^9}, {3.7382384703075066`*^9, 
   3.7382384926945686`*^9}, {3.7383214131495523`*^9, 3.7383214657978153`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"534ee1a0-7c24-4626-a208-3f886321a5f2"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx13HvYlHP+wPGRwmKdclaUJrtxJVqkkg6khkQqpEgOa8NITkkOpfgVqm3W
YTcrqRxWzjTSOiTJhbX5OTPPJumX8zlJ5Plte33f93Nd78/e/nH1uu5rnu+8
n3m+M/O5Z+6Wp4047sxGhUKhcZNCYeN///9Ppx22pr7rqQtvv+n75oVCx26F
9N+UV5qcXDt+aPA1b054pdr2lOCnLNv40Erjk4MvWXX1A+Xa4OD7frXRHqVH
Tgp+8w9jpxYnDQr+S/2//xt6YvDfb3bV+bWDTgj+z21+WV799fHBD9rlin6V
lQOCz2j587Plv/cPvsneY9qXKscFP6/9ulnF4f2C1zqNblrodmxwOk/c7oe5
xRc7hc52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc52OtvpPHLq2o6lyiGh
s53Odjrb6Wyns53Odjrb6Wyns53Odjrb6Wyns53OdjqftOW6F8qDDw2d7XS2
09lOZzud7XS209lOZzud7XS209lOZzud7XS203nW4vV7l7brFjrb6Wyns53O
djrb6Wyns53Odjrb6Wyns53Odjrb6Wyn807jfxlZWxM72+lsp7OdznY62+ls
p7OdznY62+lsp7OdznY62+lsp/MN3evnl2vdQ2c7ne10ttPZTmc7ne10ttPZ
Tmc7ne10ttPZTmc7ne103mjDPxb2CJ3tdLbT2U5nO53tdLbT2U5nO53tdLbT
2U5nO53tdLbT+ZKnC70qcw7LnM52OtvpbKeznc52OtvpbKeznc52OtvpbKez
nc52Otvp/NnlG00pTjo8dLbT2U5nO53tdLbT2U5nO53tdLbT2U5nO53tdLbT
2U7nUzs3erNa7hk62+lsp7OdznY62+lsp7OdznY62+lsp7OdznY62+lsp/Ob
PzZqVjruiNDZTmc7ne10ttPZTmc7ne10ttPZTmc7ne10ttPZTmc7nY+cv/Hp
tYN6hc52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc52Otvp/Mwlje8t79Y7
dLbT2U5nO53tdLbT2U5nO53tdLbT2U5nO53tdLbT2U7n/Q9s8k19fexsp7Od
znY62+lsp7OdznY62+lsp7OdznY62+lsp7P9pNKSOeXPhi7cfsCaMyor4xzP
PqfacXDljWODc/t2bn/tht/P5Pj7tXP7eZ63fs8hOd7O8Xl9/HNnHtb/jNqu
py58b/XF3UsXNNzOwksHdShdd2xwjr+xSc+htSW9w/F2OuTdvtfP7eet37fP
8XnzW/9c1pO3fv/ccZ9//2X9mDjXrWt65jf1o+L8HPfxHTq/8V39hXGujvv4
yoZ1jhgSjsd9/BeTHllbf06cz+M+vvfDLX+qPyvO7XEfP/udP66vPz3O83Ef
P+g3IxoVhsR5Pu7jH+u7rHHhxDjnx3381pccvWlhwMBwPO7jz77tyV8Vjo3n
C3Af//zifbYs9InnEXAf3+Lz6VsVesfzC7iPH9N0820Lh8fzDriP53Ho+S2P
NzuPKzuPHzuPEzuPBzu/dzu/Xzu/Rzu/Lzu/Fzv97XS209NOT89p6Wmnp52e
dnra6Wmnp52ednra6Wmnp52ednra6Wmnp+ex9LTT005POz3t9LTT005POz3t
9LTT005POz3t9LTT03NXetrpaaennZ52etrpaaennZ52etrpaaennZ52etrp
6fkqPe30tNPTTk87Pe30tNPTTk87Pe30tNPTTk87Pe309ByVnnZ62ulpp6ed
nnZ62ulpp6ednnZ62ulpp6ednnZ6el5KTzs97fS009NOTzs97fS009NOTzs9
7fS009NOTzs9PRelp52ednra6Wmnp52ednra6Wmnp52ednra6Wmnp52enn/S
005POz3t9LTT005POz3t9LTT005POz3t9LTT005PzznpaaennZ52etrpaaen
nZ52etrpaaennZ52etrpaaen55n0tNPTTk87Pe30tNPTTk87Pe30tNPTTk87
Pe30tNPTc0t62ulpp6ednnZ62ulpp6ednnZ62ulpp6ednnZ62unp+RI97fS0
09NOTzs97fS009NOTzs97fS009NOz7z522crDtq18Mc4f+v76CUTa8fHOdvD
46trqs3jPM3z2+x1UfGg18tz4xzsXc0P6XbI8/MeLHaMcy2vk25eJ928Trp5
ndnrIq2Tbl4n3d4YevA9xUFxXtRhv0t3LLSI86LphfkTaqs6h24/v/rDt9X7
G5xuQ+/oMKxyUYPTbdHIUUvLnRucbq17PN6l1KjB6eZ10s3rpJvXSTevk25e
J928Tv5+99I66flUXceDSnvGeVGL+0fPKX7SJfQcf8UT2xUeanB6rjr6x7G1
Sxqcnr137/hVtUuD03Pul5eeXGnc4PTc6pn5L5dfjvM3r5OeXic9vU56ep30
9Drp6XXSc2utk553D+q8uPxZ19Bz8w3nfx5pcHqeu27BzOLoBqfn0pfWbVXo
1uD0bH9rpytqmzQ4PW8857LPqq/E+dsPnRcMqtwY529eJz29Tnp6nfT0Ounp
ddLT66TnWq2Tnr3P2b1N6b04L7qs/6HLq0/FedHczqfcUrwjzovqWl3ZtzIh
zou22nJGk8If4ryo6+qnniwfFedFI+v+dWFt3zgv8jrp6XXS0+ukp9dJT6+T
nl5nNh/WOrO/9zZ7nF97Os6Lvtq2629Ks+K8qMW6U5ZVr4nzouNWXHlTcXic
F41/aUafSp84L3rskac3LuwX50Wrpi9bUG4a50VeJz29Tnp6nfT0OunpddLT
66Sn10nP9h/v8Xh5do/Q84xXu55Xu7bB6XnT/KGtS2c3OD2XzLyqrnp0g9Nz
7cTb/1Tcv8Hp2WbkM0dWtm9weg4e9P5GhbWxp9dJT6+Tnl4nPb1Oenqd9PQ6
6el1ZvvnXS1+qf+fOC96d0q3eeVz4rxo81GnnlvrG+dFhwwd26rUPs6Lyr1m
vlfdIc6LZrRbOK34Y+z56k7Le1fqGjzbP7VOenqd9PQ66el10tPrpKfXSU+v
k57NzmzZs3JunBf1Pbr7z/XHxHnRVQcOe7T8uzgveqj5uLNrO8Z50Yomd7Qs
rYs9m3658J3qv+L8redby6cWn43zN68ze52pddLT66Sn10lPr5OeXic9vU56
Tmu15w3FfnFe9NwWPQ6rHBDnRau/G7aufqc4L9qrbtzD5Z9izxMW3/GH2rI4
f5t437N7lBbF+duCGz94q3pnnL95nfT0OunpddLT66Sn15mdF9Y66el10nOT
FXu+Xj0wzosOfqnHdcVd4rxo+COnda/8HHtOn3712vr34/ztH1fPerD8XJy/
rT970e9rd8X5W7v+K5qXrovzN6+Tnl4nPb1Oenqd9PQ66el10tPrpOeYma12
Le0a50X3Tzzsf6vrY89l558+sfhBnL9tM2h818riOH/r3n32mvq74/ztgjbP
3V++Ps7f5mz74Rm18+L8zeukp9dJT6+Tnl4nPb1Oenqd9PQ66fn1KcVhtV9i
zz17Hb5zaUWcv/Vvd8bS6vNx/jZhpwnXFv8W52/V+tldKjfE+dtHHz23un5E
nL/t8uqHc8v94/zN66Sn10lPr5OeXic9vU56ep309DrpeXrz1veUP4zzIn9+
iZ5Lvjhjx9K9cV7kz33Rc++n50wojozzoiF3Le5cGRDnRZOnrPy2vkOcF3md
9PQ66el10tPrpKfXSU+vk26ez9C5S45/qrkNt+P7y/FTcvw0dcDz5lp539f2
HCn73oQ8+36EPPt+hDz7foQ8+36EPPt+hDz7foQ8+36EPPt+hDz7foQ8+36E
PPt+hDz7foScnp4j0dNOTzs97fS009NOTzs97fS009NOTzs97fS009PO5yrt
dPYcic52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc52Otvp7DkSne10ttPZ
Tmc7ne10ttPZTmc7ne10ttPZTmc7ne10ttPZcyQ62+lsp7OdznY62+lsp7Od
znY62+lsp7OdznY62+lsp7PnSHS209lOZzud7XS209lOZzud7XS209lOZzud
7XS209meXc9BcyT8P//4L9+H9fG4j8+uC6HjcR+fXS9Cx+M+PruOhI7HfXx2
fQkdj/v47LoTOh738dn1KHQ87uOz61ToeNzHZ9ev0PG4j8+ua6HjcR+fXe9C
x+M+PrsOho7HfXx2fQwdj/v47LoZOh738Txu79JckcenncehncebnceVnceP
nceJnceDnd+7nd+vnd+jnd+Xnd+Lnf52Otvp3EdzRTrb6Wyns53Odjrb6Wyn
s53Odjrb6Wyns53Odjrb6Wyn87eaK9LZTmc7ne10ttPZTmc7ne10ttPZTmc7
ne10ttPZTmc7nf+suSKd7XS209lOZzud7XS209lOZzud7XS209lOZzud7XS2
0/lQzRXpbKeznc52OtvpbKeznc52OtvpbKeznc52OtvpbKeznc4rNVeks53O
djrb6Wyns53Odjrb6Wyns53Odjrb6Wyns53Odjpfp7kfPe30tNPTTk87Pe30
tNPTTk87Pe30tNPTTk87Pe2frL5oaO24OLfst/67pdU2cW75RJMLu1UKQ4K3
3Orbh8pvx7nlpB1Htiw9EOeW3+z+9bTiNXFu+Wy7Ly+otY/zyTYHlz+s/mpg
8GndPu9fWR7nkz/2Pmdx+fE4nxzW79MDSlPifPKVQcPvLJ55bPDDm60cVusb
5433FU9/rdp6SPDt267oUfk5zhsv33De9/U4b1zZZXmr0r1x3tjshJMvru07
MPiEoXX/V20S54qfnzX4+EpdnB8OOP+9JeVH4/yQ71nbb9/wPe4jh4R516Z9
Xnuj2jLO/UYM6NezsjbO994e8uq88tI43xt15T9G1faO87r3rz3q4+pGcV7X
a+pLJ1beiXO5R24pvVh+MM7l1m0473hEnJuddmH3t6vN49zspTELe1VWx/nY
a3d2vqy2V5xrdXpgwafV9XF+xXUA7AMr+w+v9YhzpKemP/RudZc4R2r7yr2X
1/aM85xb3mzzRfXHOLd5+ImZ59QOjXOSSat3uaq2e5xLTM2ZM/yQMx8YmjMH
eCHn/X67nPf1t+S8f6/PeZ9+Vs778aU577s75Ly/vj3nffSmOe+XR+S8L67L
ef/7Wdo//X6tf9o/7X9P+6e9Vdo/7den/dP+Xdo/7c+l/dO+T9o/w/v0tH/a
f0r7p/30tH/al6b9035E2j/9PuuBtH/ad0z7p/3KtH/aV6X907572j/t16b9
0/5l2j/tx6f9074o7Z/2WWn/9PudzdP+ab8g7Z/299L+ab8s7Z/2FWn/tB+Z
9k/7vLR/2ten/dPvI85M+2d4v5P2T/ubaf+0d0n7p/2etH/aT0z7p19vP5v2
T/t+af+035r2T/u8tH/6debktH/ad+1/1P3ltvH8b3b9N3mzdLxfd/G+wP5i
+juyX7TFqrHFO+L50z5HDL2xOC6elzxr77e2Ky2J5wGXth84vnhbPN/X9cxj
9irdFc+73V3+583FK+J5N65v4+e7Rf167lBaFM9z7X3S4muKf4nnudpP6Dq/
/HI8DzX9hqd/W5oVz0M1uqnLX4qjBwbf64DBu5U2i+eD5p1/4N3lj+L5oOaj
H9up9HQ8HzRh3O8mFm8aErz17HZHVr6O53Emz31gQfmFeB7n+0fb7lOaMTD4
kCfvu7V4cTy/w/Vz/Hx9z9TWHStbxvMy2/x5zt/KH8bzLKM3fD5pwZDgy++Z
dV1xWjz/svOiPeqqO8TzKWM3fM7483je5OPXmj9Vfm5g8H61v7YtTY/nU+Z/
uNuM4sh4PoW/I8+Z//rADi9X94/nRxo/fmPnymbxvMa5zzS9r/z+kOBvvFBp
VqrG8xSHvLrt5OLkeD5iDtf9kG/5wdbn1TrF8wsXfTJlWXXbeB6h7ptfH1P5
eGDww9fd8Ez5mXhe4L5GW+5XujnO/7ff4vqZxXKc81/OdT/kV6fPsfj596T0
uSD7JWk/8fPX++lzTfa+aZ+xP54+X2QfnvYfP7+8lvYfe6f0uSl797Qv2e9N
+5J9u/S5JvvJab/y88vzab+yt037lf2m9Dku+4FpH7PflvYxe5O0j9nL6fNX
9t+m/c3PX0+k/c3eMu1v9klpf7N/kz6HZm+T9j37tLTv2X9M+559WNr37C+m
z5XZZ6X90M+/96X90L592g/tl6f90L4y7Yf2Pulzd/ZmaZ+0T0j7pP3ztE/a
B6R90v5k2iftxfT5OvvtaZ/064RN0z5pH5H2SfvbaZ+0d0v7pP3utE/at077
pH1U2ift76d90t4r7ZP2B9M+ad857ZN29km/Hrsi7ZM+fmw63p5dp0K3k12n
Qp5dp0KeXadCnl2nQp5dpyLne6z27HoU8ux6FPLsehTy7HoU8jE5Peng1590
sNPBTgc7HfK+f2rn/tq5v3bur537m3e//Ho4+x6ZnPtl537lfd/Tnn3/S876
7aw/b51+/cw67awz7/uSdtZjZz15P9evh7Pv1eZ8f9DO7efdTt734+x8Hvg/
//gv11Oy8/i38zix099OBzvrt/N5bzv7g52/FzuPNzu/Xzv97fS0082vP+lm
p5udbna62elmp4+dPnb62Oljp4+dPnkd/PqZDnY62Olgp4Od+2vn/tq5v3bu
r537m3e//Pqc+2Xnftm5X3bWb2f9dtZvZ/156/Trc9ZpZ53hfUdaj5312FlP
3s/162d+rp3bt3P7ebfj158cb2f/9PMm+5Wd4/08xb5h53bs/F3buX0/73D7
dv4e7fxcOz/Xzt+XnfX4eYr12FmPnb8jO+u0s04767Tzd2Rn/X7eZP121m9n
/Xb+vuzcLzv3y879snO/7Pw95r0eCHMerk8rz65PK8+uTyvPrk8rz65PK5+d
M6fKrk8rz65PK8+uTyvPrk8rz65PK8+uTysfkzOnGpczpxqUM6fieD+P1OXM
qbgd+2M5cypu3/s8t2/vkDOn4ufa+bn2rXPmVKzH+zzrsbMeeyVnTsU67azT
zjrtZ+fMqVi/n0dYv53121m//YucORX3y879snO/7Nwv+/M5cyrur58Hub92
7q+d+2vn/tp758yp6GCng50OdjrY6WBvkTOnGpczb6GPnT52+tjpY6ePfXbO
/IpudrqFeVfqZqebnW52utnH5Myj/h+xoozo
    "], {{
      {Texture[
        FormBox[
         GraphicsBox[
          TagBox[
           RasterBox[CompressedData["
1:eJzsvV1rI13XJvbm4yCH+Qv5FznNYU4n5AfMkMmQkzcwEwj5CzlJIISZYWYI
w/MO79N0N3033U276TbdxjaWsYUkJCEJSUiiJKqKqqKqKAlJSGJlXWvXVpU+
LcmS7b4f9826JUul+tx7XXt9Xeu/+Wf/6z/5n//zv/u7v/tX/xX/75/80//9
v/uX//Kf/h//w3/Nf/yPf/+v/pd/8ff//H/67//+f/vn/+Kf/8v/9p/9F/zh
/8nyD//Z3/3df8mvRSJKSyH1vsRSjmVEm/91WBosLZYmi71l27/dfwHLJPV3
77lO5PXfgf+qLIMdt8X8aZN66tv+TahLr2Ph9d/rP/VvGY/WCTAK2FShh+fX
8f/tqgGe89/vcI6v/47xT6/RHnriwK7hTnt0H3lGr/9e//15/u2CR2nBfIQ9
NJX/wkcde/yoXy//6x91b/v9g/WY1isOqTUvxHuWM3r999L/jXnURDxqHzeH
nvKfQZj3r/9e/x32D1pyxmKRWq/VWWrx+0r8ui8eFePfNmKB5j10heeTGuOd
A3//+u/13+/7b8CI5LMN9XvYR1bqtfmcJ/L677f6BwyCjodPoZR63YQt5+4j
xGbhAfqTXy/47+6W84J/w6PJip8DPvZLBqZMpMY6BFGWdX5BWECwqeAHiWLB
6jK9Znvc+k3ved0/2Dmzpc9GpL0y2365+7/n8vsd11J9Wf+Wn9mu/zCyTokV
Ic/THLVneb77LxuTEA/GHM321es1T876q6H0+m/LP3iGMFZ+efthyl+L4SMl
UJKz6W3BpfdFjz4UXWp4bfJGBnWiKpW8LBVDg8p9nyp9j6qDiIyRQpQZSy+K
6KLl04eyT2c1j76wfKoGlDECsvshY0xAFSegouNRMLHIm7TJGjao6hcp7+XJ
6APVfNmfz/udztFqF3FiAQKGsSxvg++81DZpNFR/h5MO1YJbaoZV6vUNRiqD
r80kpdMeOoeQxv0WdepXNOo39zj3Y0hIo+ipj/l0MpaxYe+wLZ6vv/bZnuq+
43hjniNNo0pVy6F2EFGLpelFZPUjisZ8/i/gHlo8P0t2RJ+rId12I/rZiqgb
bf/NfnPw5clshNX1LnP3YQn5OYajLcdKyWjGz3ym3uN1cuLrHE3VMWbxM9t1
vG17vriGdxoX9pbH4tESLuU9wab3RZvxhXGl1KNfrTbddx0ewwH5Y5OGM6Bn
sPAs9N/6+VW9kM6bIeNSSB8rIb0v4W+PnGHA20NvePF4AZbg70R/jNmSGsm+
gGUemcMK40SGvHE13j6Mf6P3oV/t1L6W77NF3X6enFFl6fMw9ap+O5p5jE8W
Leq3ZQlpVf+5NGRssIwsmyy9PcaVG1/bIfrzcXg045XQYLbu96fU5bvLZNCJ
n/nydx4Nph4/q23P6DGix2NA6bG9LL5fo3I9S/lmlf748ZmuS0WqeQqXLF63
2QOFS899H//W5Jh49OCxtnyusem578e6c4MdkTFC+lLVejoQ+VBexZk3LJ/Z
xrjm7QtWSEWWshOx3RJRnaXqRlTkNc8bxpLjCx+/4NGbPMSlN9kufSwZdGf0
6N7wqOZ6fC0eNX2H9cFmvYVngev9WlOY9LFg0E2zQ7meRUao17OJzBhPhvzq
TfvUHvB6s9+hetikolenrHVN99YZ49wl21ZFagYZylnfKWt/JyPKUn/ajO2Z
NLYleDWjLmMMtrFS36clirfXeKf1UJj6XL+6G/bhy3duv0s1p8N2YEjhrE/R
LKJFnab3Gc2PO5q11ny/bM+tE/5+3N1wPsu/3XzOSvTxgvheekv72LbvNec1
0+uDx8wdO3Uei8fEs4zkuSfro4evd4vMLCVL9wX3YirebP1MkmMZbpcuynW6
apr09tcV/by7pm4YkLdlPf20YvHarrNy72AfQR9pO+7Yx30O+yp9zKfEo99J
Ah6XwJGMoezld6VY38fyNsadTFfhTsVVY2VXTD2efbTJZuLXgs+4ZNO7AgQ+
PZc+lR0qOT2KJl0KJm22aZZ1gprjwKSGb9Nl26WvZZPeZ5v0nvcDfCrZIU1m
ybWwZUVNvl/VwYClL37BCs+XEt+PYmhT1s3QnfWVMehMXm+tL5R1vsW2xbI+
CtmOa/G51fjcDOoN81T1L6m/1hbQYtNsrV3jxDp/l2fik8/3oxi0qDYcKOFr
6Y4e0uEvwx45powi+Nq8Ex/neH656bAT25p6LHms44zUOmfb8X3qOVUqFM6p
Xr0k163E2JZsizlt8njuBE/5HBbvT84MZS2blzVuRFkzorN6KIK1IzAKtl3d
C2Xd240xa9/jPrVNYISRXA98TdEkItfn5zY7HI8eOv9tNtFgqs7j0GP3J4/7
/Topi782oD/Y/nlfUrjzJrZ9PvBnd10em3vgziY5LR6t8edBGJ/Ep5fv0h95
g6VDZ+UWXbcMHr+eYFByjg7ZQ4M6bA99L7XovNqly5Yv4x/+vJaf3tajcGqw
TeGw/rapyrqhGFQZjywq+CWxhe4Zi+7tr9SKbskeFQVjWlGGf2vO9wMdEjIO
eaMKGf0staM7agS8buX3ai294X7yen4weCweqetwxw0+zwzl2barCLYyJsk6
dLPv588m41Rc8HeQCeNR5Ndo2XaFjYFxg9rXwazD0hKbA+JPqjK+RjNdPauz
erTdz/ayVaTLi79S5uYDVSsXZJklsuw65SsZurh4R+ff/0LNxtXCcaexJP7w
w8QZRuI/hF8F8+17Q2EPdJIWvTZGzAC+mvcpwd/QV9+b+2P+KTBp1/sxZp0z
m57OPkqfA7AD9jBwEFgCTAc+DqeH7Rvrgct2RL9aoWDEsp9kn/uKeDz8cXjO
Wn8jto8xsbyfYzyvp8OjNfjEmPTXgvLpXbdtynUtKpo23Rkej32fMh2fSqZJ
OaNL36psW+UtHvOujHsVT1LzJD33zUGeyt4FFb1Ltn3OWa4o71co57FtJHbR
mWBS2ftF0bTO+FUXO2jVr4RnqGNMWh7QjbPN9tFsLzwK2Q5rUcH9xed/w+de
oUJQE3zdbp/9ueR3w6PpyKC+Bzxa1mN6POlx5MhzdHm9Y49K1OT1UCO85XUR
48ygxbi1HO/yY1vJjvftz/c34mNavTwV8mf069c/0o+Lf6DL2/dUKv+ibq9I
ev0ynfHcYFzrGfcUeMsx0PUCuwa654+SS1dNS80/zNciYsQO/ZXnLebvLnFq
4FUnfP5ntPPYYzyiR9hH+wjyCeDz1DYN/tZriVP5LYF/wDzEJ9O4pzGlz+eC
/BqsP7CuuO6EYgvDNj7OOmG932MdVrw5ap7DFsGYhi+PJW912S7yqNdn7LCv
GDcYU9wsNYMKVb0G34s2VR3GK9uj+15AN4ayj26MxVyfaNagCuNR1v5BWfeS
7h0W+1xwCP65W37NmIgb/aSSxJLAPrFL/tUOgnjHJMGjcD7G9rWPsFbyJUev
FWUpY/3ka/ghknN/UD285v12nmSuPKcoPFoct5ifmK+4rzoX6STH5v26Q6Un
dtcJLttI7SU/27acTWUDwSdw13N5LHs834MDfC3Yj03RsElN745K1jWVe5d0
nnlLn7/8ezr/9Z/ox89/oB+Zv9Jl+Qt9O/+PdH6Bz/5CP87/Qr8u2fa6fkfN
+iWZ3Sx1rRrdGy59rjDeZE16X2yzTdTk+VZlW8de8HHg+79mLYVND2ASYt3m
A3l5j5Vj2VR95MiOH8ajdc/qJeYf7COID2Edguf1oxls8bf6SudNLSUr66iA
1+EmDYYmdWyDqrAteh5dtjy2uTy6aZhk+B5N2A4djj1qe84z2kehWlvlHXn9
WLYZjx0azLqyZoQPo+CyfWN/Yz38nfGE8cU+F6l6Vd4W+RDKLl28XwE5/PuC
+5Ntiwu2iX7EOPRVsEi9fuX16B2FE1RqHTE+sYRH6ec243Wsii2sy/VaFPiP
sQ4ZS66HI/dDXcMXse2a4l/88/vt1uHRJoFfaXCgf+OYMpXn3KJ97Loh67TB
EbA1moaM1ci9QaWfS16/RWUzQyXzgjHqgtdzGZ4rFfKiOttVXRryubphj5pO
j7KdHp3XLfpUsulj0ab3JZ/eFaE3mvzeobf8/h3bSW+KfgpjfDWHgU14D0zK
WQqjBJ/S2yaY9KUWML6tym2vQ/5ov3t3Kpnw/dklfvS7Y8+ywF4CFmG9v/na
fMkDTnxGSf7XIKhTyPoZ+i7J7dL+AZXv3I1qZPLcvm1Z9EfFp6+MTec1h/I9
73nxaAGTsB5zKBipNWM4qVOR7RzYNcg9gEAXF9wrtpk6ZESh4BBsyN7Smgu+
+ArbPrdWkrcgdpLzUzCuFlzHfq8j5wAwHg2Hm+JLgdhI6jk+fNyFXB/qUt5V
uJpzv7OtXX72cfsUMpqP+Ye3hS7XfocxPWfdTiDn3V+II6VtpN3HnPbZPO58
dI6oyhP1R77UXWANDP+CztVFnOetxpcU3gCH3qzBFcg7xLVLAS3iU7wPjU14
zes5vn4/Ws7becrxGtKR8W098rof9wwHfZ0PuWV8blk//G44hfUccrAvWiFV
nPQYdchzSos2/4zthqCxYV86xrEptxdrJZV7O5yElO/ymBx68/v17HgkmOTL
eH3DmFT3gvl9QM5BzvnB8p3yLO0oS9agxzgUyv2DFKxoITcWuXDN8FbsKuWj
O6MMS867p6x3w/aSymWYnWS82zQebasb4ucY1iUPaz8s9CRHHecOfEXOuop/
P/84PqUoO+PU+XXHl9CtUqeeideI6e+SGrVNvwUGwc6DzWQcIV8pLahpneMP
2z9v5vih7ZyHY0Gwb1AnAl808ufuump/b1a29RO7SeMc/Hoao9Zg3Hu2zb7W
m9TtN040P3eT8dgiP3yc70TXtiI/2hvu/xwxDvpTleNwytx32EM/sC6pqRhR
2kafTXpUzLP+vH7Pr99pEBnkuXVq1q+pWjyndvOaoqC2w70A/qT9QpvH/7Nj
0VyUP/pjySWnr88XazorJTYNZp7YRvDVIfd1cY3iSd54p5+jrPM9to2+ynuT
9fmEv1O1FObWe3K42DvUseq8Kbal2LZVdQ677NtbuhfP79M4tfxu+QxaYB91
m3c0Geg1Q9o22u5nhT7A2Eb+Uv8I/kes2S7bIX2rB/QBtk5B+UTmdYI6FgQb
Zg1GvInzqZCzhXMLGIeQ04ocO9SfIP/37a6192nfnsanbE9hVIyFt10vrnd/
zvqFkPVsm/WxiitrLNk3VxHbTuI456l5FvYeozNwDqjneNcL5W99bdNxl6rl
c3KsAtHUpNGgRUYzI3kzKu+QddfIoinfnynru1Lxu/joNh/v4TpI5BWiVvb5
cSglkrPj0Y+GL+uuYKnOzh9XyR5VeL2w3q+LNVVv7FK171LBL0qs6Tb28/UG
OUr8mad6zpviR+vHPM4H/AFK7z7/GH1pshg/siWOpvLtX3atFXCoU7+haMsc
3abXoBtgIyXbBJLb0oly4mtuhDdyL7ZhNeZ3tgfM8OktcuIYB/4oB3TZCnk9
7NOHijfP1f5rfhWHgDGwpZBf4Y1QR6V4ULyRL+tp5G8j5gOsWrWN9sEnL86L
sOT1sh2QM1B5xk/5zFbzVjyK2B6Iho6sC47p/8VzHU5P6dPbzjGAvDnYuMCh
9nIt27RH9epFnIOZ1rPpmvfFY4HjrFo6f/wzmLjPj0FpyavxCR481F6tcmRp
X3hyvx3JfbgXPTWcdajRb1Ex7FDOy0oehLKPvom/6/S+n13so2VRubwDv0aR
W1X8NhOtcy3yxhVqRjfkTar0O9oKj5FF+0jh9++QxzHhNWSzekWeVVr5bh/f
y3Bu+6tYMdZbw5nBa6sKj+cSLdePj0cmtYwKGVaLqo7K99F5xFrAQQQsAecJ
MAd8k7CdsqYneX41v0olt0h31i0VnRxjYFFy0evBjXBuTeQcAtbPIRlRg3HD
lmPc9bb7+hBrOm8yHrY9+tV26EvdoG+NHhWsHttwFh+/Su+QR5E36RdvV3VP
u+YY7sTD49Ogb5DvNSUH7Gjj+onspWGcIwo/Euzk4QP5MrOxQY3aBeujbfXb
68ShQu7sCOf8AjAoLfM4qE1nNV/u5S73AmtHxFOAOSXvivHnJ+XdS6r6Vzyf
7uPchSeoJWBc2a/OKHkO8/XHxEzxyYE/tiq1Un8L8aJl+V39dXiOvl2mwEZc
ftEm39Xno+MPi5+Bh8mliDFpQsuxKY8mI/58pHtubd43dCF0otd3qFJjzDHr
5A3Bf1yTtV13UBb7C3kFnSgrsVjEcRuMRzOp7VX+4pnUSVhyveABLFo+441P
Fy2HbShLYkHfGh3+rMfYxTjK62ifzy+amvy+wfO1RfawLvvo8Jj/UmvRx3KN
ip0mtbtVPrdbymbPaPpEdUDrxZP1xWzC1z3VnF/PPb42C9Y7iDntZ1965NlF
6jRvyLHyBxzXoVz2GHj0kuJHaTxy6GOhR7etLhW6JrXdLrkBYw6v/xSn2eIa
2YPPfRhQJerENUc/2UZqUHvkxP1lTrGmtsgaFXj+3gqPg8xLtmvGg8fghquw
aKF+RceNXr5dcGz5ffFIPbdh0FjLVbuIR+v54tMCXAKXjcp7UhwOCo/S2/px
/sQ+ujvm3Jta1AePL+ukaueKKuY1VaxLKlm/KNc7j/HoXPBI5UeBZwJcX03G
lTzbawXGrzL54w4ZjDMO629wqhTdO7rpXdKteSE8J4jfTgl8yhb/lufKzBCb
qxXd8doxQ5neBWWtGwpGLQoYp6ygSWc/P0ntSq7r0n3Pl/p31NWGE7Xeh20G
3+SYtue7DR6wDWA/KB4kxZmJ4yQ+ujj+wbpn1O9Q4DF+OzWJ7Udhm8bDrtTZ
PAdWTWL/G873MJvLI6uXpW9n/0HyE5avYbd92pS9/3SU63l2DFoQtu2zXcUl
VLCpG3g0mqr8wRlwaObIOmUitdOJjg74u0rUpTyPX+R1g4ehOWhSf8/nIjVd
WAfx2JpOVnFPiSNcQqgBQt5fyfvJc03ZYMMRr/+C8uHjkq9pGDZONK41l+vT
zpfHyChsqjpizVN6JBmNlMjzTn833fLZ8nfbto3/Ri3Gftzpm7n0ogm48RNe
hqSGO1DPlY833cE2WiezeHyMJ7x+G/O94WuYzNhOn7BN45Soad2yrVSd8/BN
+XM/qjIO5cUHgbgueGlRozGZdQWvOlFe8kBRNwgsq/p5xif4GXkdNwSfsk0l
26Yro86YlaWr7i1ddy8pY15S3QfOmYwRHmUbdTrLluiPXIc+3FXoU7Yq9ZTA
DC3I10As/L4HDgHFawlfJTjX6nHvDogfc/Ikfqskzg4sG84Szp5ED7MOYhw1
+mVqBHfUCrLU8hg/7StqerdkRkVyBiXBzyhq0Wig8/JC1lk673n1nh8jZw7n
DBwN96rZXtU5uexnev/u/yajndkwNh4QtnevLt9sHLvrznvTd8+PQUsitd4e
fSh5vPZZxy8dyPX3A92dNlJxoyhLRe+actY5r3F+kDvQ9R/p8eDFOKZ6Hk0n
XRlDgcdziXXfZKLns0/rxxF45cp8nHPGoV+SIwEuVs1xh8/yve9UM8CHWaT9
aih8yW8OHOCZXuPuws+9q7jkSl2HeaT9nV5UvreOGR1b/BML63fWTbvnT+rx
vev3KqaEeraJ2EXb+1ocKpOZxr5FTr7A43Fv3VHd1lwhOrYbsD73qczj/7LT
oIt2l3GpST+l9tGis7oX17/6kmOMnjQf+PP3FZP/Nnm7Hv1ouvw7n741Avpc
8ehNnCP+Brl4923hYwaHDfItUH+I2s1sT/G0QGAvII8ZOVH3PVVnpWtuvzUU
B1/RRm3mw3MLGGz0URf1k26tc+GNuWe7McOCfKk8Y23R/cV4e836qilr5n7U
JsuqkGEUJSfiuefRZgnIsYr09cu/o0b9UvK71TXvZ2th/H369G9pl/Wu7rW0
6ftnx59lievm3hd9wf7189GXmBvib5iPDo/9OmNAtnPG9v4vtl14vSbcC9C9
VmoupftA6HWm7qG0eS2jxBb+VdhFwCDkjU/m3M0qB3vMn9nDIhXAJcHn0rIz
tDsXkSc1Zm6vKK8DsZNs5YPZOWfvIV12jP4NTyf78DPsK6etV3Ro1G/F/rNj
YsSS/cR2jNsrxDXWT/181NrO9yrkB4oPzxs16bYbCsfM5ypjTNmljxXVX/N9
aTG/4Y3wQid1S7BrsM4HjgBTdAwe9k9S36TrdVV++tu8LX0CPvExkP/0I8Ya
2Evwb0LwGXoiLOdXgOP1JvbLTbb68gLxMzaCDN2a52y//RC+sap/S/6kSf2p
IboGeSYzfu5jxqOxxJoUj86ob9CA8Wk6Mlm6KV48hfNYr/R5LRyxTah8fkov
Dfk3/ciYY8Oxa5CAk8jpbkkNUZ3SWDKhaM9+Jx41m3d0ff2OLn/9VWJR2+bY
KtaptRVijM+OP8sSc9qBryTYeE/S/JSOYJPH9nTVu6GiX6XawKN6v0Odfkl8
B4fbGAk3M3wSwCJlY3jyGfx09eCazGFe6nAxvsCHd2t8oevaR2q7t7SfPtJr
0VTPWvjw/sT9W7cJeuae0id/TO67wSzth1DPbcR4injD8a9BzV/41KKw9Yzj
wyXbzMd+HpcyXUM4hlDj9Imx6E3MlTzHkBQW6Zxy4BRqYGDHwFe2fAzoNORb
I2ake1u81TVTy/nicQ0TcvlQt/u15ov9tSkf/Z3UVqEvnC819ttz8C3hFzP6
BeEiq/l3POfX+RqW53u6P5ia1wMeE1Go48QeJfM9ySUV3qm+4qjEfUFsC3Vf
/YPzxG3GvCpZ3SzdXL+n8/P/ROc//iI1RUcZC4zDwLd3f/2/yEbd0obtcO7u
XK8HFAxdumm59KsJbqpn5q9bi0e2jLVvPJZGa+sB09ii/FmI3dSCK+EazTqX
jBsV6o2qFEz3yasLhOdb+d5uJa8NGGMOVN+jovdT9o/vtf8C+XyobUI+OTjF
sR1so7p5SdGgLjw/R9E9bB8t9tXZfx+qbgeS2HMi0x4l9uHDMpy0dth+sw9r
HxlFp4qlaR1zajvJU/66ma6/1td2jH0jPmGxjtk3RrW/THncqFxz6Me0DzqQ
a7PYpr9uWYwBrsRu7ruB+DfmHA0xJgGr4JsDPqAXAnADNVLo5b0rhyxiQNed
SH67UMcktbXWCscEOJCypi92G2p3N9X74nx0Ttpq/WqYuhfIJURdvRnX7e45
l9O5tCvz2RXevBHbUF2rTtVmiTyvRp7fINNtkeMxjond1KYhr9UGiFf1m/y+
KX+PBm3GujaFIb5vy9/4zujcSr+SQvUbNa0M20QZsWuX7aL9rmP18+GwS/d3
X+nu9ov0QilagWCpNwqoarlUNh26YNwRG7bD0groez3miy8Gca32gbVsp5K8
6kGRMfw1umI53qveI78AMR3wu4FTJ+lLvsvcD8T31h1kxd5BrtyQ8Q29KIA9
8/2CQ4/33ZScV70uMqnHv0M+NrYDr3jTueExU9v4zA7Va9A5KhZxCCah1xtf
i3lORUPLD/Xa/kGWl1P7Ru4A6qcmphL+G58jh30Wv3f9Is+ZDl/nNY8xxmDr
ktygRONRW207MlYE/EgQ9f16oZTo3/lSv/Ob9+icWSl/6zHjgZGMcdTcnrae
OpR6imjakB4oy3MKOWjXTVviveA/Q43GWS32j82xSGET8Oi8afDcNsUn97mq
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
OSxLon+RP5D0GFr016GGcrWv5uMEuQa/ijU6LzWobHvCg1BxAuFEA4eenEvK
7zbPHYv1I+Jd2O68ZlG+61A7CKQXoNRVeVWJwQTggGQdgvmEng0O5m1Yldoe
PQcXdMOoo3L14/k3iefqbK4z4rm9lMePbUdxTEdzPqHmEf4DxMLdUU18Oena
fRUDTPpc4xlO5vvQfZZsiR2pWoNeXEeguc7UnOtFAf1RUfcENa7vS+jL7Tw+
lqQx6Xf23cXcDLCZz6tlyrS+s3ykTPsj3bQSybQ/UdZAjfI36vlZmrDd6oRF
qtmXVLZ+CS9u2VRSZckydt20PjG2faKrxh/8+pHxLEOmy+t0vy1zMfJZ3496
89if6ruQ9FmQv5fi4vjcC8tU4+N1vSyNRq3kt6mYO8aeExSp0P0u/Lwmb4vt
8TvDuWfsrCvbeylWj/wD31F8eOiDO+8Ty9/hXMOoR1G/p2r/pyr+DuwKGOvg
R8Z9yrS/UNOuyviNdsr1fXpdve37P4d9FMk1+KzjoOcOj12eIu4ZqPE1OdRv
rfneQ7pqWhKDgU4Dh+ZNx6OK5VLT3cT1rnVn6nPWq+Arn+dBznMjkxzLwG9S
lTHoS8UVP5u2f97lrXn96TyGFccBVC+JkJqe4r8Dnx3sqZ5r0HCoe7Kq+6Fz
poFBPZ6nDftK+qrkWY+gLwt0OuYj+AHB528FBfKisuq3ItzajF/DptL9cW7M
XI9MFufrPG9Gfzbndbbn9fir/htH6Yjl5zDTPESp+mjeP3KCUB8wHFpU77ZF
b+B79Go3Il/qUO96Pt11Vb+Nb3XN+7Oak3IwJv2OuDTP8wBGW3Tby1LW/i55
cogDIYcb9a/gYAKPHPw9Kv/OIWeEnIZr2T6pj13k2MjaP4SrsOpfUThRteqo
rwvwfFbypHabi4jRw/ek8is2rfPDmA/kZ8ynZwu3DX47W9tfMtn/pjxh9C+D
T2K51g/xMPDEIi4jXH7u95i7e9/8updRy/PnwSN1LZaRfUR8cTkefui5xL9n
/Ydzmg4OjW3p/GEVr7CshtQAdYJQ6nDAAb09N2LVpwRu8tCtxr6ARX+Bln7U
Iafvi2+uZIOXwaOPvKZ/E/MIvC04YvtouWiHwvGzzocMP6Xi9/NT16S+w5wG
V0s25n6BXkFer+KlUnXlsGF0vwB8p+KhCZfxjNIY88CcYjyZLthJQeqc0r+1
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
xT6Ql0Pb4fv+zkn1LgrEdhjsaBdPZ4/lK3qMqLXZbKq4IINxXepWK51zqjcv
yQt0TcQudQS7Hu/w3yM+NpxFkmuXMTw6q7nS3w1c0a/5dX9iiXHpY6VNGbap
B7N9fEK6h1Z67JnzOBJ8T85a2wbiSn1SLuW/g95V8SZlHyEXSGo7RA/7qWMq
vpP1PCqecGQDB81BYcOxAzkOeLRxjvCNrfaE2F8OxaOafzm3FcVeZDyHXvDG
5YU87dVYtZKEm3W9Djg2HqnYxrH01iF6Tq/DVR8shUeb6lyW84+PpWtduQ9G
83ZD7dEh9sXxZYL4I59fNGxIzWCp+oOGPK8SG1nFiPxJPe5Ddgyu/cfwRMHG
9ak/tRmP0AvWprLTYkzq0JeKS++Lr/0l/vQiuSuO1D7XXO+Razhf+ueVWNcn
tTSbdKHiEEVf9EpcM4o4CdZtwAjgGnx4qkZC+6NUjFd4w6bb5s4uXNGeHL/N
Nkg00Tbc4fpqPzxK7BjJm5d7cCECOxH3DTnh8OFJ3qL1lQ6tJVZxtePaR0kN
2ak5B1bHTDRt81peY7CVsqf1uWju+FOdgycxoXbthtb7t5GXYqypwT6+TFZ8
gAqjJ/x8hqMm2VGRir0fdJl/SyVDc04lYxD+YMQtZwsYv+vxN6x/Dr4elXse
TXrUCovUifLUCJrUDruUMx16X/LpbdFP+IKeW2++yskxCf2tCpYvPexXc1Ef
HqvwkyE/ADUu3Xk/1H1zlC3BpEZ4rThGvSsyrSw1jRsajBOur2G0rY/f7sfK
s87HccCRemjOAGQxn0HXwC7jgC12jsq1XX9Pxqm6EHUvM+JfPHTtenw86j6j
fRStOe7hPSfgE9q33gH4B65uy1iXB6PWQTMyDn5eu8l6/kJrUKOKdUnX+fd0
mX1DmeIf1AKnKq+7VHxY5cesq1uFP3i6po/r+vWprlk6Te3aeOpRN2Jc8k26
NTx6V1J66o304HvFo78JkTwHJ66ZtRkH0OtB9Xvo9O/jOM5DPgjNhxfnhQI3
5pyMu41FzAlgGXIcdF2FxFY6n6nWvpjn0fpu4whxDFtxxPL+YYt4o/X1I+uv
c/Gz0dw+Cub9C5G/kebbxufVlV4V6Tm+eD2Is9WED1DXxe9vj/y540eRjDHV
93T1u1X74bHiSr5hFGziPQ2XXo8tep3oU5LT4Srenn6Bsp2vVO1ekT0sCxei
ijkqnwLGEPwPiDOCXyvJ3U/nc6fXn5v9btMHfMSrsjtvgz2IGIN8yhhdOm/2
6F2cvwBu1Te6x8QrHv1tSPy8v1RdqjgBDafIVzIEG6C3VX7p8jjchUdtd14B
4N/dMg9pnIdXtn+SYd+LjpV+QzvVQuoen3pdqPW+LfYceEzR/w6i6lAf0t2u
1NQuY0raXwd/G/xuEKkdmlTFBkN++XpsDqV/GXxz64+/Kw/7Gt3xKDxa1Ucv
EY+epiZWrbMCt0rTkeaRXxat05d/99D9178Plt6n+XNd4Q3G++nMi2uEfOHC
KjrnlK1+lR5k8CH0J4rbR/nLGa9mJo2mBjn82YTHfM/MUq38k9rNa8n9V/n/
OXKtAvl2WeqWwEk+mfekWDd/l3XAvuPTp8Svnvh+q25In6r+HIf+GuPQ24IT
c9i9xo/+pkSvQdhWqthqjM3ivqVY30Ovaj/cJOacVz6mx+URK3HFptC52PO8
bNbTRbZf4AfUcaSR7kPz4D4tyV1AjAY5d9g//F/IFdA9bsENe2f9iHPPdX3J
+jkYjGuCM6pPXvLd+vojpU92sQ+xDfDq2H6ep7ePNOY/VWxpXzzSuLGP/lS9
+CK/ybq6EdfVJrWd41Gb+sOm+JY99FhBzSvFwt+bRnHp+Jq31InFlrpasfPi
Glq819Jneww1OqN+S/Io0t+hjhYCv2y/35XvUfswhp92agp2otYMHEbTmX4u
u8xRhYmzef5KQKs4GVDim173vDfzqUZs+4NzpBf7pPvCH+ZLv72ybdNZzU76
HKE+5RWD/nYlxqM7w1uIT8J2ASZpPZ62X1Anju8Vr8ChvGi+9O3Bvmr+lWAI
8A++BmCfytezSdWe1ynw6jvMLUv4SmH7jOM+YeGkPucxXbTDvlLG+i42jcLc
dXoriHPJF48z3KsedlV0Paxa0x7P33OS/LotuSSC+cKj2zrqdWyWZTxK68wj
HYP1cbX4c8N99GS8YE6U164nQuofmHuZltGB+/DtSpyLGsR1xPvuw1fPe6Iw
UmpkGRellxMLalpncv+Xn7Uf+wsXewEuzqeAHMbOkpOjBs/liuPRRSugP0qe
ih284tCrzPHIppsO1ivJGBvOXLIGTV7Hg9v72zyvW8T9LnYHBDkCKnai46fa
j7GvftI9KtetZQOZH+PBw7x1qDvV/jPkUcNPV/Eu43qfsxXfoMZa1KEib1z5
y9f5YlL3Zqu+0H2Y3I37Qc65ylvQ3x0HQ46NR4rXpjmvsU3kOPtf0IM77deO
9WFEuu4aayKPbZZuYJM3fGzedSj6WHGlrvvemfuTlT979feDlXiTvrbN57ac
p9b3DqxJYPvL6mSlVmoyPc5z0lx3GvMxJtQzWOUiWlwXaN+ly88noKLl01nV
oTc5a74GfpONuYGyXYVHz60LX+X5RcaGqod+V/Qk7/9d0eZXi8ePRecNi646
FSq7WQrHbcltHc3zwhRfHXpUalsKWIX87aS+aFk3H6ozHMUJNtmtp7n0/47X
seB9SPPtzX13yJ+wzuJaoG9SLws7CteifHne2nMerfB767kfzO3KguznW7yO
XtYNKldX/w0b8Rg5TMfGIyW28Mb0mrfUqV0Ljw6t1UePER2z37bPMOHYO+r1
Jc8RerxnsD7vr657BtJn2RVfckXyVNZxbYXCtZP+DOMBPmTFVbVaR+ePVu9F
4D3WbvbIdjSP3WPuyYZzmPbi3Ptt+4dusKnmWfS9HseDgDnAn1zq/StX3ass
i/Txs2J72Z+L5LkUVQ/7dzyeypaOGS1y9QxjTMrH+lz5zM5FF6u+59+FWwj6
Wfnh0jnmi5w/6+NSsV+GdVHoVrfMgWR7+Ot0jzz4x3B+K3x6qbpUT/dlYD2D
nA78DueOV0v6c/Tm56xqd9XaT+psY/45+BqBa7h+9NLUcSvvAS4M2EuIJ+F8
H4Mnp8GjRYEeAh8cYhxJfehyrP8Uxw4SjtSj79tTvHi4prXPKX1daZ7TZT9h
uBJbhP2mxtmZ+I4fOhf0P/H8h/qix/uebv8+CnaNux4iDvWRZzTR+R6r29wZ
foJDK/w/Pr3yAb3KigCDZLy49JYx6W3eYvvIERvpI9tIn4o9epdXvt23LF8q
FtvepvT6awW6r9KS3ljAFF/mpKqBvZf5gfoI7VNzUv2BpDY2zCxx+vjCCR6C
726679pYxduBJfdzX92afD7GEBULW/699rU4kiMuNav2N8o0P4n9c28n+8Ia
GP7GaFqbH7fLa2LkzwOvVB+ibbpa25CH64jR4Lj1R9slidWPwgZN+m3JAxDb
cbbcb31RZiLpe7H0/cyjycynxdjQCfGIz7fXyW/Yt1rbrPJM+fHY9Re2XcYj
cEzBF5y1rna/r7PegdxIi9KPjK1jAjVZ6D/0mGOM+blPB+l1kFpTGkFAX6ve
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
tXXTapzMjtILY7EX73jQpo55u2YNcyzxKLDKMQ9rcs1FK6CPlVSNx2tN6/MJ
bNLnPoffXWI8gt/uj0pADW8/HQG/9mTQmn82mxlUML7R+d0/0KdP/1rwqVFF
/ag//w3iP6izHe2c55DEEVT9zw+qBrqOXu1Xc7LM5vWsgeJJeZS+2TWG4Atn
BfyGwL0ZreNWTuR3xCPEjgap/K3Z0t/rxY79WMfozeSQ2b4js5Pdsk0onE7w
NcNeVn69xe9Pdu95/VWq/qBmkKHjcgYmouuO0aOi5Ud0VveEy/KVc/uFSPYV
j44mkvtg05dqQEa46xyxqB3cUbH7I5VTa0uOuNQAWZ/59bN6b3yii9Jb+nz+
7+j9p/+HPv38d5Rrn9H+vYVUn1ul8yPRLabEt7SeNAUXkO+Q9tdt02GLf6t6
dsx7m20+xeHfkrpO5BDivZLmXGw3T3eNT2TZeYlZpb/zvBYN5r/R0j6ZznqM
TDfwgkeTiKy+T/3Jtr4668SX612XP4DvrFGVbcsfMe/8Q/oePYtya57Xuue5
uV/d4bVH28Vo5RgnDDoO9q6XThDwPPLpYwmc2+arPfQqf15B3DOvcnLelwLK
WbvV4yPmD6zJtL5Q0b4WvgfUCW2s+TE/U8n+ScNBk3rGHf388Rfx89Wr6/i1
F3HCG2uuniDmddBx8TSmqV4DOfsb1XvL6+NI/IqIkYl8+ffxa/w+JV8+/RuJ
o11d/FViZA/p3VPlEv7+wjjWNyjqL8Y+YMd2B0Xh4MYzrYm9uy4+4kmv1GZV
5zAEEjuEHbT/uaTx6LjPyrWrJ33+4Be/7oS8XlScya820av86SXmH/pYCam5
k99O+Ueueuf0tVamD0WD50uDLo0r4fe56l7z+5s5Z7jK01vmCo+5PllPNGuX
dM74dJf5IFwzWm+AwwhYBOwDzoEvCJ9JTGG26PMDRiG/ADkJHeuWlmM6rcZV
zLGnY2XbxBE7KXf/lX43/9pLkvHYItNppT4zZSzMYg5Ab6Q4qlZjPgENgwZ1
mhnVc1A+c6QvZCvM7Hh8xfOheyqeyj6yEds5ca/Dku2reqJXLHqVvwXR9Uj8
/lszZJ3x8BwZsg657F7RH1WD7SqL3hdN+lDp0sdqmz/r0vtKj362eH082aUX
T9xXe2IKL9j93Sf6+OVf05fL/0j37a+CNXem4g1CXkMz0r3S0z0UNFd4l2rG
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
RAhcO8wv8DkOjf8HkUY89g==
            "], {{0, 138}, {420, 0}}, {0, 255}, ColorFunction -> RGBColor], 
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> False], Selectable -> 
           False], DefaultBaseStyle -> "ImageGraphics", 
          ImageSizeRaw -> {420, 138}, PlotRange -> {{0, 420}, {0, 138}}], 
         TraditionalForm]], EdgeForm[None], GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
D8tcwygGbMl/Yz02NnMcWMIzjMk85oofL2eOFYoBE+HD4R+Tx0Lfvyqfj435
PG7Pn29F/q5/5s+/Pmetq0GZ+5cn+OdxbCn8Md/fF14Gz4OnZo5dirVTMse0
pcoj8LHwT8o1mePVMuWFzDFK+/iDzPFZ+2xu5pi8knt+zmO48toM+Hj4Z3gZ
fGnB+WtO5ri3QnlHew5eDi/P84Ly9S3wHPgVrSu4XsG57BO4hsYD/gqupfeF
v868r5Wv52eOJ6vhTzPHHMXObzLHirVcX5g5PihffZ85nihvzsscl1ZpDWeO
P8qtSzLHXuWTxZljlPLyijx/KbeWSO6tVJ/smdxDqT75g3uuLji/74CvLbg2
257nGtVaWzP3Sqpb/s7zkXLuX3neVL7elOc75eg+yiXwJ8oLmXsr1Wa3JceN
8+ANeR5Ufu+Xr+H53L82zy+qVVbmOVq1xC957lYOPJr/31Nw3ZiSe0DVYEcl
97+qS/eFby64llPMv63gWm52Zk3gKa4Vk3tG1ZC/5Xlcdddq+PKCa4zdmXtJ
1Xu/5nlc9c+aPPepNluX53H1pudgPeBOvMvMfH61Jmdl1jH6c/+tyXH1HL6z
a3KcPBsembmeV167JTmWnsn1Lsmx6Cy4c3LcPkO1eXIfXQ5+NrO2oFq3SXKf
W5brneDP4JrwTckx/HT45uRcUAMekbkvUI6ujj1VcK1+anKPr/q/YXIvfwx8
cXKPXxq+JFlPKKP6PVkHOFo1O/wSfJRqfPi5gnuEKsl9ver5E5L7etX5pyT3
3eoXqsKPF9wLlE/WDdRTlMtzt3qQ85Nz7pHwC5n7HeX34Xm8Unxrn7xPlTev
1X6GTw7XVcqVqnvbwe8VXCe3Te5VT4TbJGsmJ8Ct4XfhqnDtzDVDV77/6mT9
pIqeh+u94W5cl/il35oEd878/S/Dz2XWiFTztErWWCrx2WbJGshx8JDMWpPq
n6GZe1XVUcPy2Kva6fnM+pLqpRuTc6tq/o7JuV69QIfkGkD1fEv4LbgC3DRZ
DykPX5Ws+VRW/5GsF1VUn5Gs+RwP103uB4+Az0nuE9WDnJ3cn6onejVzb65a
65U8DitfjMtjuPLI9MzaXT89S2YtTj3XtMw6Xl+t2cw9uGo51amqV1XLvZi5
p1btNzlzv6/+7s08zitHvA5XK7in25ZZVxmtNZi5N1ffNyGzbqAe4ePMmuFA
rYXMGuAA1QV57FXuWJBZD3xG+w++BH42j/OK+YO0FzNrd4PhSZn1B/Ua4zPr
A+r7Jua5Rv3IZ3msVsyfkeeLJ7j+b2ZdaAy8JbNuMxL+J7OmNAr+MY8zivOL
8nioHPFtZs3zOe5ZCl8FD83jmOL5MHhVHs8VP0dl1gRUV5+ZrOmp9/wuj3vP
c60x9ip8rNY8/ELBPWOd5L7jcPVbmTXbIVyLZL1rPH6PZC1oAn5jZt1pBLwz
cxweC6+Hb4KHw5sz60UvwL9nzk2Kpe9m1mmf5PquzBraOHi/5Bj7Cn6vZB1p
Il5inbS4F/Elsbu17/D7J9fMk/BZsp72ksY2XMsqJpRKrqVfw/8XrgUVGweE
tbaPuD4wrNd8DA8K61OfwM2T+6+vFcPCetmH8PVhbVrj2T6sZWstdQhrzZqj
G8L6r8awf1hTm6t9HdbENT7PhLWh+fCzYb3sU/i6sH6teT9D+4RnmIevrPvg
OfgG2ifwF/h+Ye3vPbh+ssa4AN8oWTP8Ev9kWKd7H66XrEl+jh8c1ub0/Q/n
fcgMuAX2Afd8g78p1wo01+cla5V6zqfCeuIHcM1kTUzjVitZt9R71UjWxzS2
pyfrXRrz6vna03ielKwTanyqJWtles5OuT6g/dIxfAagNX9zriFoXbUOnwFo
j7cM63eKRW3CZwmKA+3CZwOD8/WvmP8V/sqw5qh92iqsM2pNtg2fSSgOXB3W
EFVXXBXWK5XrrwlrlKrtT07W/TQOj4Q1uLfhR8O93Dsaj3BvqRqvdr4HP8Mf
m6zH6v5xYa1B9fDYcK+uenhMuIdXfT40rD9q3oeFNWLN7/Cwjqz3mhTuaVWL
PhSuXaZrHYV7YNXGE8N9rOrnl8L9sOrtIWFNU+vn+bBGqXUyPty7qmaeEO5p
VUv3DWvNs+GyyXqy3lc5XfXGTHyZZD1Z6+rlcC+tWrpSsiasdVsxWS+dpXvD
erTW+fXJ+smi5Hytmmch/pDkvDwlWVd5ivu3ao0ka91v4A9L1sCn4o9I1rff
wh+JPQZPwx+erJm/ib+Wz6uBUS4YEdbutfcfCOv+uufVsGak+v/4ZB1b714h
Wbd/F/94XjeISydr4xr/kWEdX8//WF5zaHxGhbUevePosNajfu2F8JmB9mDv
sLauZ34urDVr/fQJ6/sat25hDVMx8Iqwfq38e3tYU1UMvyOsbSqGvxbWxaRd
vB7WztSnrA33QqoldoZ7b9WW6ntXFtzf3RbWZhWT14VrI9U56tlXFdyX3hs+
O1Hs/T2sZahW6RE+I5E+82D4jEHz0j18nqH43yt8BqN5vD98XqJ57Bk+a5HO
c1dYj1UuuDOs0ypfPJ25X1fvLB1AvanWx61hjVq55pawxqhaomtYf1b+6hLW
cpWv14c1F9VOG8Kai2qnNeH6T/V5sYT7ItXwOjxS36va/q+w1qCaMyvhHli9
wOawnqL6M5Vwj6R+YXdYK1H9vyuslai2vyd83iMdqXNYR1XNECX8nuq57g6f
zSgPbgprQKppV4XP/1TP/xY+s1HvsDp8Rqja/s+wfqRa94+wHqS6cWNY31Ed
+0v47FA9wn3hcy/tu2XhczjVkL+GzyNVV6wMny+qX1gRPrNUv7A8fC6o2v7n
8Hmh6o3/AXG92IM=
           "]], Polygon3DBox[CompressedData["
1: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
G/P+j4B3L9GHm4AfBe9RoldXqdGvW5fom03dA+A9S/TnduBXwEPBv4O3B78K
PgT8h1wMfhk8BPwbeNUa/bpNib6Tk+Sm/5ToRTnpKvD2JVw1P/hk8Lrgk7p6
dRJ4HfCJXT09Grwq+FjwSjV6d6sSfTgX+Di5DnxCmz00apM16d7qy/wx9Fej
f5y1B3ysXAk+HrxcjV7askQv7gh+HXyY2gN8jL+L3E47mf4Aawb9wfR/ZH4X
8FvgYW5qNtpA8HN0DwD/1IazbgTvWsJPy9Toy81L9Od0NfV86RK/Y026ATyo
hP+2BD8N3q9E7/cHPwPev8RPbAF+Crxvid/YFvwS+GDwr3I5+E3wEdZ2uRb8
Bvhw8N9dfR0JPtDa3aYmWZv2LvEbJ3L9FPwZ7ST6y9b4iS1K9HI/8OPgvUr8
i39v7dmnhF9Xq/E325bo/xlquH858JFtNGh/a0WJ332/xH+MX+Jvd1dv8Dz3
YEyieq/EP49X4rflPLnulSZcuCNtc/o7Mfa9z5S2Of1xS/z121w3s7aV+NOP
S/TNxFzvkP9K9M0kXO8Ev8p1A/AYXG+w/nFdHzw61+vBB9AG8XkHeU/c32DX
RBNOGxe8B3gb8J7uYb1WzWuX4u+PaKMh1BI+A5/Fkm36jrWjxG9bm5fl9cOY
W8IaD94UfGqbfOIs8Cbg4eAFwcOtleBTwAuATwGvBz4ZvAL4IvBA8JngmWq0
8Argo8Ebgh8G71biH2esqd3Lg48Cz1yjjVYEH9OtV7WUoYl+Y13wfeCdS/zm
8uALwQPAZ1ibXSN8tx0Z+5qx7dtkF2YY34LXqvG3O5T4x7Vr/POOJX7V/XoB
uL+1Dbwk+BxwP/BpHd9cCd6uRButA74XvFOJn/sBvJ733+R5397xweAm/Ptb
zfpYE3xfmz2n1/Ye3IvuOb287+ledM/p9b1n96KccGWT30Cu2J32VS976LUa
/fQx/U9or9ZoquPcG71oLTn0+iYcLbeqifTWc5ZoJT2CXlgPq3fQU+ot9Rhm
I3povbQeZLFO7/lbz1GijfSoelXXjGvHPaz31SO4t+UkvfGIXrhKTtRL+5v7
2+sh9JJytFxtTbihSc2wVsg51zWpOXKRHvjObn3rjc1U7mjCkWYtctAtTThM
bjITub0Jx5qVyFm3NuFAucw9pVedu2Svybm3NeFEuVjPcFOnr/USw61DvXD4
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
           "]], Polygon3DBox[CompressedData["
1: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
9x0byv4Fd/Xc0Q==
           "]]},
         Annotation[#, "Charting`Private`Tag$7877#1"]& ]]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0skrRlEYwOFr/HxmWUmRnRRbKbZSrJQUO9mwoKxYW7Am/AFiLbE0zxvJ
PA9JMkVmSTy3LH73OXVut/d0bkFTe21bTBAE3XpXuH7WpQZigyCTw8znOEs4
xwpusIZnbOQjn9RqnRoXBF3MZS+LOMQyjrKKk6znIvd5zU9t6VX3mjLQNqe5
wxnucpZ74Szc5zwPuMBDLvKISzzmMk+4wlOu8oxrPGefuW/4pQu96UEd5tpk
MxdYxwlWcoSlHGQhe5jDTiYzqpbwHL7dwBNWc53l4VlYzDHmcdf7V/xQhl50
p2wzpjOLaeEeU5nGFKYwmVFGGWESExhhHBPDu2UCfxWvn3BP3zJC0O9x+/8f
/AEIP0i4
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{661, 981, 458, 660, 1087, 883, 662, 1088, 884, 663, 1089, 
        885, 664, 1090, 886, 665, 1091, 887, 666, 1092, 888, 667, 465, 668, 
        1093, 889, 669, 1094, 890, 670, 1095, 891, 671, 1096, 892, 672, 1097, 
        893, 673, 1084, 1098, 894, 982}], 
       Line3DBox[{675, 986, 1185, 674, 472, 676, 1099, 895, 677, 1100, 896, 
        678, 1101, 897, 679, 1102, 898, 680, 1103, 899, 681, 987, 1186, 682, 
        479, 683, 1104, 900, 684, 1105, 901, 685, 1106, 902, 686, 1107, 903, 
        687, 1108, 904, 688}], 
       Line3DBox[{690, 988, 1187, 689, 989, 1188, 691, 487, 692, 1109, 905, 
        693, 1110, 906, 694, 1111, 907, 695, 1112, 908, 696, 990, 1189, 697, 
        991, 1190, 698, 494, 699, 1113, 909, 700, 1114, 910, 701, 1115, 911, 
        702, 1116, 912, 703}], 
       Line3DBox[{705, 992, 1191, 704, 993, 1192, 706, 994, 1193, 707, 502, 
        708, 1117, 913, 709, 1118, 914, 710, 1119, 915, 711, 995, 1194, 712, 
        996, 1195, 713, 997, 1196, 714, 509, 715, 1120, 916, 716, 1121, 917, 
        717, 1122, 918, 718}], 
       Line3DBox[{720, 998, 1197, 719, 999, 1198, 721, 1000, 1199, 722, 1001, 
        1200, 723, 517, 724, 1123, 919, 725, 1124, 920, 726, 1002, 1201, 727, 
        1003, 1202, 728, 1004, 1203, 729, 1005, 1204, 730, 524, 731, 1125, 
        921, 732, 1126, 922, 733}], 
       Line3DBox[{735, 1006, 1205, 734, 1007, 1206, 736, 1008, 1207, 737, 
        1009, 1208, 738, 1010, 1209, 739, 532, 740, 1127, 923, 741, 1011, 
        1210, 742, 1012, 1211, 743, 1013, 1212, 744, 1014, 1213, 745, 1015, 
        1214, 746, 539, 747, 1128, 924, 748}], 
       Line3DBox[{752, 1129, 925, 750, 1130, 926, 754, 1131, 927, 756, 1132, 
        928, 758, 1133, 929, 760, 1134, 930, 762, 1135, 931, 764, 1136, 932, 
        766, 1137, 933, 768, 1138, 934, 770, 1139, 935, 772, 1140, 936, 774, 
        1141, 937, 776, 1142, 938, 778}], 
       Line3DBox[{777, 1228, 1029, 775, 1227, 1028, 773, 1226, 1027, 771, 
        1225, 1026, 769, 1224, 1025, 767, 1223, 1024, 765, 1222, 1023, 763, 
        1221, 1022, 761, 1220, 1021, 759, 1219, 1020, 757, 1218, 1019, 755, 
        1217, 1018, 753, 1216, 1017, 749, 1215, 1016, 751}], 
       Line3DBox[{780, 1030, 1229, 779, 1143, 939, 781, 1144, 940, 782, 1145, 
        941, 783, 1146, 942, 784, 1147, 943, 785, 1148, 944, 786, 1031, 1230, 
        787, 1149, 945, 788, 1150, 946, 789, 1151, 947, 790, 1152, 948, 791, 
        1153, 949, 792, 1154, 950, 793}], 
       Line3DBox[{795, 1032, 1231, 794, 1033, 1232, 796, 1155, 951, 797, 1156,
         952, 798, 1157, 953, 799, 1158, 954, 800, 1159, 955, 801, 1034, 1233,
         802, 1035, 1234, 803, 1160, 956, 804, 1161, 957, 805, 1162, 958, 806,
         1163, 959, 807, 1164, 960, 808}], 
       Line3DBox[{810, 1036, 1235, 809, 1037, 1236, 811, 1038, 1237, 812, 
        1165, 961, 813, 1166, 962, 814, 1167, 963, 815, 1168, 964, 816, 1039, 
        1238, 817, 1040, 1239, 818, 1041, 1240, 819, 1169, 965, 820, 1170, 
        966, 821, 1171, 967, 822, 1172, 968, 823}], 
       Line3DBox[{825, 1042, 1241, 824, 1043, 1242, 826, 1044, 1243, 827, 
        1045, 1244, 828, 1173, 969, 829, 1174, 970, 830, 1175, 971, 831, 1046,
         1245, 832, 1047, 1246, 833, 1048, 1247, 834, 1049, 1248, 835, 1176, 
        972, 836, 1177, 973, 837, 1178, 974, 838}], 
       Line3DBox[{840, 1050, 1249, 839, 1051, 1250, 841, 1052, 1251, 842, 
        1053, 1252, 843, 1054, 1253, 844, 1179, 975, 845, 1180, 976, 846, 
        1055, 1254, 847, 1056, 1255, 848, 1057, 1256, 849, 1058, 1257, 850, 
        1059, 1258, 851, 1181, 977, 852, 1182, 978, 853}], 
       Line3DBox[{855, 1060, 1259, 854, 1061, 1260, 856, 1062, 1261, 857, 
        1063, 1262, 858, 1064, 1263, 859, 1065, 1264, 860, 1183, 979, 861, 
        1066, 1265, 862, 1067, 1266, 863, 1068, 1267, 864, 1069, 1268, 865, 
        1070, 1269, 866, 1071, 1270, 867, 1184, 980, 868}], 
       Line3DBox[{882, 985, 1284, 1086, 881, 1283, 1083, 880, 1282, 1082, 879,
         1281, 1081, 878, 1280, 1080, 877, 1279, 1079, 876, 1278, 1078, 875, 
        1277, 1077, 874, 1276, 1076, 873, 1275, 1075, 872, 1274, 1074, 871, 
        1273, 1073, 870, 1272, 1072, 869, 1085, 1271, 983, 984}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{251, 459, 1087, 252, 472, 278, 1188, 486, 292, 1192, 500, 
        306, 1198, 514, 320, 1206, 528, 334, 1216, 542, 1130, 348, 556, 1143, 
        362, 1232, 570, 376, 1236, 584, 390, 1242, 598, 404, 1250, 612, 418, 
        1260, 626, 432, 1272, 640, 446}], 
       Line3DBox[{253, 460, 1088, 254, 473, 1099, 279, 487, 293, 1193, 501, 
        307, 1199, 515, 321, 1207, 529, 335, 1217, 543, 1131, 349, 557, 1144, 
        363, 571, 1155, 377, 1237, 585, 391, 1243, 599, 405, 1251, 613, 419, 
        1261, 627, 433, 1273, 641, 447}], 
       Line3DBox[{255, 461, 1089, 256, 474, 1100, 280, 488, 1109, 294, 502, 
        308, 1200, 516, 322, 1208, 530, 336, 1218, 544, 1132, 350, 558, 1145, 
        364, 572, 1156, 378, 586, 1165, 392, 1244, 600, 406, 1252, 614, 420, 
        1262, 628, 434, 1274, 642, 448}], 
       Line3DBox[{257, 462, 1090, 258, 475, 1101, 281, 489, 1110, 295, 503, 
        1117, 309, 517, 323, 1209, 531, 337, 1219, 545, 1133, 351, 559, 1146, 
        365, 573, 1157, 379, 587, 1166, 393, 601, 1173, 407, 1253, 615, 421, 
        1263, 629, 435, 1275, 643, 449}], 
       Line3DBox[{259, 463, 1091, 260, 476, 1102, 282, 490, 1111, 296, 504, 
        1118, 310, 518, 1123, 324, 532, 338, 1220, 546, 1134, 352, 560, 1147, 
        366, 574, 1158, 380, 588, 1167, 394, 602, 1174, 408, 616, 1179, 422, 
        1264, 630, 436, 1276, 644, 450}], 
       Line3DBox[{261, 464, 1092, 262, 477, 1103, 283, 491, 1112, 297, 505, 
        1119, 311, 519, 1124, 325, 533, 1127, 339, 1221, 547, 1135, 353, 561, 
        1148, 367, 575, 1159, 381, 589, 1168, 395, 603, 1175, 409, 617, 1180, 
        423, 631, 1183, 437, 1277, 645, 451}], 
       Line3DBox[{8, 667, 23, 681, 38, 696, 53, 711, 68, 726, 83, 741, 98, 
        763, 764, 113, 786, 128, 801, 143, 816, 158, 831, 173, 846, 188, 861, 
        203, 875, 218}], 
       Line3DBox[{263, 465, 264, 1186, 478, 284, 1189, 492, 298, 1194, 506, 
        312, 1201, 520, 326, 1210, 534, 340, 1222, 548, 1136, 354, 1230, 562, 
        368, 1233, 576, 382, 1238, 590, 396, 1245, 604, 410, 1254, 618, 424, 
        1265, 632, 438, 1278, 646, 452}], 
       Line3DBox[{265, 466, 1093, 266, 479, 285, 1190, 493, 299, 1195, 507, 
        313, 1202, 521, 327, 1211, 535, 341, 1223, 549, 1137, 355, 563, 1149, 
        369, 1234, 577, 383, 1239, 591, 397, 1246, 605, 411, 1255, 619, 425, 
        1266, 633, 439, 1279, 647, 453}], 
       Line3DBox[{267, 467, 1094, 268, 480, 1104, 286, 494, 300, 1196, 508, 
        314, 1203, 522, 328, 1212, 536, 342, 1224, 550, 1138, 356, 564, 1150, 
        370, 578, 1160, 384, 1240, 592, 398, 1247, 606, 412, 1256, 620, 426, 
        1267, 634, 440, 1280, 648, 454}], 
       Line3DBox[{269, 468, 1095, 270, 481, 1105, 287, 495, 1113, 301, 509, 
        315, 1204, 523, 329, 1213, 537, 343, 1225, 551, 1139, 357, 565, 1151, 
        371, 579, 1161, 385, 593, 1169, 399, 1248, 607, 413, 1257, 621, 427, 
        1268, 635, 441, 1281, 649, 455}], 
       Line3DBox[{271, 469, 1096, 272, 482, 1106, 288, 496, 1114, 302, 510, 
        1120, 316, 524, 330, 1214, 538, 344, 1226, 552, 1140, 358, 566, 1152, 
        372, 580, 1162, 386, 594, 1170, 400, 608, 1176, 414, 1258, 622, 428, 
        1269, 636, 442, 1282, 650, 456}], 
       Line3DBox[{273, 470, 1097, 274, 483, 1107, 289, 497, 1115, 303, 511, 
        1121, 317, 525, 1125, 331, 539, 345, 1227, 553, 1141, 359, 567, 1153, 
        373, 581, 1163, 387, 595, 1171, 401, 609, 1177, 415, 623, 1181, 429, 
        1270, 637, 443, 1283, 651, 457}], 
       Line3DBox[{275, 653, 654, 1098, 276, 484, 1108, 290, 498, 1116, 304, 
        512, 1122, 318, 526, 1126, 332, 540, 1128, 346, 1228, 554, 1142, 360, 
        568, 1154, 374, 582, 1164, 388, 596, 1172, 402, 610, 1178, 416, 624, 
        1182, 430, 638, 1184, 444, 1284, 656, 657, 658}], 
       Line3DBox[{445, 639, 655, 1271, 431, 625, 1259, 417, 611, 1249, 403, 
        597, 1241, 389, 583, 1235, 375, 569, 1231, 361, 555, 1229, 347, 1129, 
        541, 1215, 333, 527, 1205, 319, 513, 1197, 305, 499, 1191, 291, 485, 
        1187, 277, 471, 1185, 250, 458, 652, 659}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJztyLEJgDAARcGPmkGcxB0cQbDOCo7sCOkCCinS32se3H7V816SbCVZ03u+
fw/OOeecc84555xzzjnnnA/9F+ecc84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPO+bw3oH3qzg==
     "],
    VertexTextureCoordinates->CompressedData["
1:eJx9m83P3NQVh0dVilDVBX9AF5SmFUII9T+YLFgEVKEo6oJlVakSi0BRVVUs
o/4FUYSiKrCoukBILDqqqrdQAjVToIYCNcZpnOAkjt/xx2Q+Mssuqn7E9/6O
dR7UZsHoea99z3l8fTw+9vDtH//07E++NpvNTnx9Nrv/yX+/PvnUxZNP/W4u
/tXIS+Ph6Pkvj57/K8Zz4+T+8Jd/N16N239p/MD43xr7N8aP38eLK8zXGZ+9
P3xybdyN82+MX7q/+dHOOPw7gGezC9FTvmL5iuXrx3Nj+YrlK5av378xlq+f
rzOWr1i+YvlecOt2AMt3Cd8lfJfwXcJ3Cd8lfJfwXcJ3Cd8lfJfwXcJ3Cd8l
fKfztIwe8hXLVyxfP54by1csX7F8/f6NsXz9fJ2xfMXyFctXLF/PWt8c65tj
fXOsb471zbG+OdY3x/rmWN8c65tjfXOsb471zbG+OdZ3us68GfOUr1i+Yvn6
8dxYvmL5iuXr92+M5evn64zlK5avWL5i+XqezaqYl3zF8hXL14/nxvIVy1cs
X79/YyxfP19nLF+xfMXyFcvXs76bavMVy1csXz+eG8tXLF+xfP3+jbF8/Xyd
sXzF8hXLVyxfz7PZpRhXvmL5iuXrx3Nj+YrlK5av378xlq+frzOWr1i+YvmK
5et5Nns0xpGvWL5i+frx3Fi+YvmK5ev3b4zl6+frjOUrlq9YvmL5ep7NrsR5
5SuWr1i+fjw3lq9YvmL5+v0bY/n6+Tpj+YrlK5avWL6eZ7Nn4jzyFctXLF8/
nhvLVyxfsXz9/o2xfP18nbF8xfIVy1csX8+zWRP3k69YvmL5+vHcWL5i+Yrl
6/dvjOXr5+uM5SuWr1i+Yvl6ns1+HreTr1i+Yvn68dxYvmL5iuXr92+M5evn
64zlK5avWL5i+XrWv8Pc90cH8xX7/uhgvmLfHx3mvj86zH1/dDBfse+PDnPf
Hx3mZ3GedljHl+DJz+D3G/uUufjdMd4e41/d749xO+0v1v5kzqP93sU8jKtP
zZeM4xft89bof+8rf6/i3zUuVhzuz78zfoU4M/fv8JW/M762e2j8XFj/9mCI
avuJ/XiK8RTjGcYzjBcYLzBeYry08W8GGxsX+/53+t4X+/lXmH+F8Q7jHcYH
jA82/o2R79q42I9vMb7F+B7jexv367Wc+/VZzv16LOf++C/n/ngv5/74Luf+
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
+BxH/Hh87uFZ90Vl9N0b+//Pb/r/7sQ17ldfxv3pFdyP1rj/PBE/xby/fAz3
k+/i/vEM7hdXuD/8xf+9H6zje0jV3/TeT3zO1Z+ea0/3d2+6+mui323jS67+
pufG4iuu/qbnkuLG1V9jz5HEei+p+x29xxPrvZdY74nEeq8ivhTrT6znvn77
u8Z6rii+EetP/HCsP92fPBnrT3wu1p/4Qqw/8cux/sSPxvoTX4n1Jz4d60/8
cKw/3S+cjvUnfi7Wn/hSrD/xo7H+xEex/sQnY/3p+/nJWH/iS7H+xCdj/Ym/
FetP33cXY/2J9RwyrPcC5+9ifv6RMO6/X3Q/oO+fe9P4H+4LvGHXx/D9cgfX
19fs+nV+HH/HOJyPd4zD/sfG/vfz2fwwbv+2cZj/Q+Nw/twxDvMfG4f6bY1P
jfm/YtevH437v2UcfD8wzsZ4nxmH68f0/CTEPzYO148W8/XG/nf2et5wZByu
x+8bh/r71DjM/4VxqK/p+UbIb3q+EfJrjcPx6Y3D8Zmeb/jzZfrdhli/OxDr
Pb041FOO7a8ZPxg/xXrPKA4+Deabng8En95Y70nEwWeDeHvj8Kk6aOL3x9Q/
h9/JvGHXn/Cc/k+4Ht4xDu9hp/7zfDz/df04E89/8WH8/Iux3tOKX4j1IA7z
T/3dqVgf1g/F+hC/HutD/I/x82/GT8d6EVexXsQvxnoRh/iD8amjUD+6/jwc
60f8bKwf8euxfsQhny+Mj2I9iU/HehJXsZ7EL8R6Eof87hon3wn1Zde/WF/i
h2J9iZ+N9SUuYn2JQ77XjB+J9SY+ivUmPh3rTVzFehO/EOtNHPLfGh9Oh3rT
9TaN9SZ+KNabeBHrTZzFehP/c/yc+pULsd7EJ2O9iY9ivYmfjvUmrmK9iV+I
9Sb29baYn4mf/vtlj+0T297/Hmth7/s8F+DS2P8ecPq9nOcOPPUv/vc7C/y+
ZYH3b8w3Qb4J8k2Qb4J8E+SXIL8E+SXIL0F+zCdFPinySZFPivgp4qeInyI+
42WIlyFehvkzzJ9hfs5XYL4C+xfYn9uXGC/xfrXG+Vpj/Wsc7xr+NfKtEX/6
fY/ffgXuwIOxP341/Gv40aeBTwOfBj4NfBr4NMi/Qf4N8m+Qf4P8G+Q/5avv
X+XruQCXxsrXj3fgqX9Rfp634P3/yKdFPi3yaZFPi/gt4reI3yI+4/WI1yNe
j/l7zN9jfs63xnxr7L/G/tx+g/EN6i9BfSQYT3E+p9g+xfmYYv8M+2eohwzz
ZZgvw/mdYf4C8xeYv0C9FYhXIF6BeAXqqUD8EvFLxC8Rv7TzR+zzKZFPiXxK
5FOivnl9rZBfhfwq5Fchv8rOR7G/HlXIv0L+FfKvkH+F/Ctcnypcnyr4NYg/
/f7QXy8SY23vx6d+w+/fYv/Wjp/Yz9divtb8xX7+HvP3mL+39RH7eD3i9YjX
2/EW+/hrxF8j/hrxp/+/SezzWSOfNfJZI581ro9r5LdBfhvkt0F+G+Q3/f9J
Yp/vBvlukO8G+W6Q7wbX4w3y3yH/HfLfIf8d8t8h/x2u7zv47OCzg88OPjv4
7OCzw/fHbv4f+uDfxg==
     "]], {{
     {RGBColor[0.368417, 0.506779, 0.709798], 
      Point3DBox[{{-76.5063962, 38.9722814, 231.0958904109589}, {-81.375789, 
       28.533513, 222.94520547945206`}, {-99.3700532665052, 31.481788183144, 
       211.43835616438358`}, {-97.2964669, 33.1717156, 
       210.47945205479454`}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], 
      Point3DBox[{{-83.1022365, 42.3830375, 172.6027397260274}, {-80.2472396, 
       26.3150829, 166.84931506849315`}, {-82.8041995, 37.8120478, 
       164.93150684931507`}, {-77.802346917939, 40.8757813645164, 
       158.6986301369863}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], 
      Point3DBox[{{-122.1819931, 39.9281988, 
       122.73972602739727`}, {-99.3700532665052, 31.481788183144, 
       118.42465753424658`}, {-115.2640448, 36.2277116, 
       101.64383561643837`}, {-96.747944, 33.0507687, 91.57534246575342}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], 
      Point3DBox[{{-106.103175196499, 34.4274140766016, 
       49.863013698630134`}, {-81.375789, 28.533513, 
       45.06849315068493}, {-88.920118, 32.829842, 40.75342465753425}}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], 
      Point3DBox[{{-95.3863425, 29.7804724, 16.78082191780822}, {-89.6122696, 
       44.8741579, 9.10958904109589}}]}}, 
    {Opacity[0.25], 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      InterpretationBox[
       GeometricTransformation3DBox[
        SphereBox[{0, 0, 0}], {{{17.10398052417662, 0., 0.}, {
         2.4039748672348566`, 6.138422053909492, 0.}, {14.484362786155836`, 
         2.2250216764568864`, 1.998061804349717}}, {-88.63717634162629, 
         33.039824545786004`, 218.98972602739724`}}],
       Ellipsoid[{-88.63717634162629, 33.039824545786004`, 
        218.98972602739724`}, {{292.5461497714131, 41.11753930979506, 
        247.74025899951803`}, {41.11753930979506, 43.45932047421928, 
        48.4781662350201}, {247.74025899951803`, 48.4781662350201, 
        218.73973775568032`}}]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], 
      InterpretationBox[
       GeometricTransformation3DBox[
        SphereBox[{0, 0, 0}], {{{3.7214598028888, 0., 
         0.}, {-1.6978299660965663`, 10.77802912291715, 
         0.}, {-6.983262049820353, -1.2976164283432836`, 
         4.844500862905909}}, {-80.98900562948475, 36.8464873911291, 
         165.77054794520546`}}],
       Ellipsoid[{-80.98900562948475, 36.8464873911291, 
        165.77054794520546`}, {{
        13.849263064517146`, -6.318405970968426, -25.98792901144529}, \
{-6.318405970968426, 
        119.04853836822569`, -2.129356085769717}, {-25.98792901144529, \
-2.129356085769717, 73.91894586226364}}]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], 
      InterpretationBox[
       GeometricTransformation3DBox[
        SphereBox[{0, 0, 0}], {{{18.460128693235745`, 0., 
         0.}, {-5.315597165212301, 1.7704113513221522`, 
         0.}, {-10.432572050597761`, -6.0048128037556125`, 
         18.196587979569696`}}, {-108.3910087916263, 35.172116820785995`, 
         108.5958904109589}}],
       Ellipsoid[{-108.3910087916263, 35.172116820785995`, 
        108.5958904109589}, {{
        340.7763513708257, -98.12660775121819, -192.586622655489}, \
{-98.12660775121819, 31.38992957570338, 
        44.824361667697005`}, {-192.586622655489, 44.824361667697005`, 
        476.01215049728125`}}]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], 
      InterpretationBox[
       GeometricTransformation3DBox[
        SphereBox[{0, 0, 0}], {{{14.633431911562017`, 0., 
         0.}, {-3.1223003018965967`, 1.6247620747642717`, 
         0.}, {-3.6830770014553633`, -3.7579279864361297`, 
         0.00037161431461110565`}}, {-92.13302739883298, 31.9302563588672, 
         45.22831050228311}}],
       Ellipsoid[{-92.13302739883298, 31.9302563588672, 45.22831050228311}, {{
        214.13732951032156`, -45.68996887525338, -53.89605652583706}, \
{-45.68996887525338, 12.38861097481588, 
        5.393933561495805}, {-53.89605652583706, 5.393933561495805, 
        27.687079087986532`}}]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], 
      InterpretationBox[
       GeometricTransformation3DBox[
        SphereBox[{0, 0, 0}], {{{2.8870364515514413`, 0., 0.}, {
         7.546842745001124, 0.00027987911589122925`, 
         0.}, {-3.8356164358155276`, -0.00012408679345226844`, 
         0.00011069475751327294`}}, {-92.49930605, 37.327315150000004`, 
         12.945205479452055`}}],
       Ellipsoid[{-92.49930605, 37.327315150000004`, 12.945205479452055`}, {{
        8.334979472586737, 21.788010098944785`, -11.073564464369248`}, {
        21.788010098944785`, 
        56.954835496108416`, -28.946794105970785`}, {-11.073564464369248`, \
-28.946794105970785`, 14.711953470349073`}}]]}}}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1.2, 0.7, 2},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-130, -65}, {25, 50}, {0, 232.05479452054794`}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, {{0., 
      FormBox["\"03/03/17\"", TraditionalForm]}, {167.31150684931507`, 
      FormBox["\"02/14/18\"", TraditionalForm]}, {180.5386301369863, 
      FormBox["\"03/14/18\"", TraditionalForm]}, {185.17972602739727`, 
      FormBox["\"03/24/18\"", TraditionalForm]}, {198.40684931506848`, 
      FormBox["\"04/20/18\"", TraditionalForm]}, {232.05479452054794`, 
      FormBox["\"06/30/18\"", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{
  3.7378924202445874`*^9, 3.737892455917984*^9, {3.737892517226493*^9, 
   3.7378925629492645`*^9}, {3.737892633306772*^9, 3.737892675854904*^9}, 
   3.7378927186299176`*^9, 3.737892790996189*^9, {3.737892941995739*^9, 
   3.737892963777299*^9}, {3.7378930067756414`*^9, 3.737893013720417*^9}, 
   3.7378930946340604`*^9, 3.73793614792795*^9, 3.7379367110200815`*^9, 
   3.737970153624694*^9, 3.737970685489582*^9, 3.737975248856395*^9, 
   3.7379780449908524`*^9, {3.7379783207138577`*^9, 3.737978354741468*^9}, 
   3.737978400100069*^9, {3.7379791287987223`*^9, 3.737979141852001*^9}, {
   3.7379793421007643`*^9, 3.7379793512743683`*^9}, 3.7379810152161455`*^9, 
   3.7380012203840075`*^9, 3.7380051560199347`*^9, 3.7380592135726633`*^9, 
   3.7380623867477093`*^9, 3.7380662170372324`*^9, 3.738069571734301*^9, 
   3.7380698881848483`*^9, 3.7380699504913907`*^9, 3.7380699847232676`*^9, 
   3.738076865539096*^9, 3.7380789372395687`*^9, 3.738082986130845*^9, 
   3.7380832868392277`*^9, 3.7380926298348103`*^9, 3.7381649581173515`*^9, 
   3.7382319434228578`*^9, 3.7382365554171815`*^9, 3.7382367927182894`*^9, 
   3.7382374225109653`*^9, 3.7382377634423075`*^9, {3.738238472710206*^9, 
   3.738238477807597*^9}, 3.738238820911021*^9, 3.7382390863117857`*^9, 
   3.738242851024593*^9, 3.738248016911662*^9, 3.7382487781847086`*^9, 
   3.7382689091374393`*^9, 3.738271427118864*^9, 3.7382744155518103`*^9, 
   3.7382773394172735`*^9, 3.73828233662819*^9, 3.738283235535434*^9, 
   3.738283374832694*^9, 3.7383192882147093`*^9, 3.738319654510377*^9, 
   3.7383215033561153`*^9, 3.7383225218097305`*^9, 3.7383237310072403`*^9, 
   3.7383254597135572`*^9, 3.7383261823097816`*^9, 3.7383384088461113`*^9, 
   3.7383389897704268`*^9, 3.7383390487194347`*^9, 3.7383392402137613`*^9, 
   3.738339637783456*^9, 3.7383398713901176`*^9, 3.7383399766544514`*^9, 
   3.738445197583906*^9, {3.738445321567561*^9, 3.738445344029577*^9}, 
   3.738445424505904*^9, 3.7384523642626963`*^9, 3.738601715079317*^9, 
   3.7386018314824457`*^9, 3.7386060946033225`*^9, 3.738610161577799*^9, 
   3.7386107108973093`*^9, 3.7393873380811343`*^9, 3.7393875280737915`*^9, 
   3.7393875710784903`*^9, 3.739387652754965*^9, 3.739573438123927*^9, 
   3.7395735379622507`*^9, 3.739575054343601*^9, 3.739579485211543*^9, 
   3.7395795385430994`*^9, 3.7395804774777064`*^9, 3.739580601598863*^9, 
   3.739580726403268*^9, 3.73962896250926*^9, 3.7396291419346695`*^9, 
   3.7396291806566353`*^9, 3.7396319366711946`*^9, 3.7396336682162085`*^9, 
   3.7396497235837946`*^9, 3.73964975512037*^9, 3.7396497922405586`*^9, 
   3.739649835323202*^9, 3.7396499081371875`*^9, 3.739650048530816*^9, 
   3.7396501068133955`*^9, 3.7396505261441193`*^9, 3.7396505636463084`*^9, {
   3.739650943085845*^9, 3.7396509648495054`*^9}, 3.7396510662459993`*^9, 
   3.739651111766427*^9, 3.7396511495724025`*^9, 3.7396512543443356`*^9, 
   3.7396512847510443`*^9, {3.739651411479598*^9, 3.739651434121166*^9}, 
   3.7396514739969535`*^9, 3.739651802917615*^9, 3.7396518635832033`*^9, 
   3.739652214649115*^9, 3.7396525620621233`*^9, 3.7396526198843327`*^9, 
   3.739654769825734*^9, 3.739655989531101*^9, 3.7396560309744587`*^9, 
   3.739656061923806*^9, 3.73965756377065*^9, 3.7396576023325434`*^9, 
   3.739657797899108*^9, 3.739658381768485*^9, 3.739659160037346*^9, 
   3.739659397244001*^9, 3.7396599883220205`*^9, 3.7396607286095123`*^9, {
   3.7396614556371036`*^9, 3.7396615113193636`*^9}, 3.7396615569663076`*^9, 
   3.73966159374533*^9, 3.7396626757805133`*^9, 3.7397313322713566`*^9, 
   3.739732592422282*^9, 3.739732651053833*^9, 3.7397337924523215`*^9, 
   3.7397340245534735`*^9, 3.739734192523657*^9, 3.739734331960669*^9, 
   3.7397355655260673`*^9, 3.7397589016558065`*^9, 3.739787213996591*^9, 
   3.7397891638725653`*^9, 3.7397931279105835`*^9, 3.73979317824214*^9, 
   3.739793219908688*^9, 3.7397934430264626`*^9, 3.739793499166696*^9, 
   3.739808188151321*^9, {3.739809182919009*^9, 3.739809233684248*^9}, 
   3.7398093322394733`*^9, 3.7398260094545183`*^9, 3.7398269858102217`*^9, 
   3.7398275368382063`*^9, 3.739830467897294*^9, 3.739831024953351*^9, {
   3.7398312754594965`*^9, 3.7398313240006948`*^9}, 3.739831380763233*^9, 
   3.739831433917627*^9, 3.739832710841028*^9, 3.7398359811521635`*^9, 
   3.7398367334107018`*^9, 3.7398367926225924`*^9, 3.739836827524126*^9, 
   3.739839322203799*^9, 3.739839363340042*^9},
 CellLabel->"Out[133]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
QJ/j6+m4Aa4PmWG8PRM+6zPARKcBriETPZvJI/bClTkENuTnSx3p4qG/L9sY
GeDOeB6MdVthsod8ila4PGRjFn86nad1K1UW7xS3I1IiKZjrFl8KRcs8SObX
IkN4uRXin/GcNaCepZTBB7Kgl+BGvuykdB+/o5ojkiCXh/Pg4lAed3ehgEFD
ZQIbHJ8N5sGnyLpUm0jSqTDbD4J9N0NOVgiHvlvP2jj5qrY1D06fLYCGzmIK
J17btEX0U/vBV7M5M+IyF2yqw+RLjHLd8V8mPFyx95LjK0Ojg93s+yWkqT0T
3PTBGW5lKLav1VI6ZZBG7eCquFfpXIXR9ba31gb633O49Dhy9dFaM6fjLClh
YDM9CLk+G3rQsLs3JBpXEWFRuRiVS+bJfVfpfKqYGekSZWTKP5IRvhXKEaJR
GIPqxSm3i3oePJhK46BAZ9URyEJ9vcCUZOLES2Jz6kN0sswbkuM2QHLEJriI
rH65I81NFa9THXlK5Ca42p8EWum2MIoJCpDTinTglc40LaagKl+1ZoJvSEYX
MRyVhUCH6bPRKF1ZqWSRRCRGYI/Aci7xMpmioCsV0jzNdBuyIMgzoCo5uQsn
/kf5ABeGsuCLmmC4W+oNt6w78P+ZEox8z8k6COZbTjfFcprPArnhZPALZK4M
+dEeo7a9iNJg9mw8YqkcGGsQ7v11b/1czYIuqeJbvKi0cEoNkxh4NkNNhy0a
UFLCTTyfhR31C+xJMbF18nLGqk8LUTEBXVxKzMh3WbjQXSivnji/pjQS9ntv
hrScCIiI8ILICG/IMkRC1alc6Gq3Qdd55O4z+dB4vgjaB0phCI1Z6nYzN1cG
0wOWyXd+z/3ov//VzP6v1umrXnWK+lzxqlOXkZEhL/yNv/3bv4VDQT7zRdXG
JXtHuWxka9/TWbcpqfS6/bUmGVyUYHCcthsnb56ludj/kP6mMr6jtRY8Lou7
T2QawiE37RCXPFL57MDJMLh2Pg4eoDonia7i7VTFQo4Zam53dzIVmsv9oAP5
l2TCaF0kmukfQWbCJigq2A5nzhyE0b4QuDaWANdGE7nCV9fehjy8Rw1ezFzK
JnbGuwzzubrUpNhb35RFn3VDfmq7u01rI6W83zqrWWrZ110lfwsEP2NysNQl
4S7XGeNTMt+UIkL6+lZR+4HAHtnv6fkEuJO/B25bduDnbnjamQh3+zPFaLkl
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
GkhbF0H6Op81HVvGjvxuNdv/4lq25wXwMSsmUjA4BgKV3z0HKecF0F3Idf6J
62J5NGecBItGor7/dMMjX/4RoupnyzJYzdDfrqoszom+6EpxFKth26Xn8QFo
ozxkxuwp7Ol6XSyRNcgi7iN1a49/0bYhKyWNePTlK6+sZeeOr2S/P7WW/QlE
9oWt09mM6WVszswy9vIzM9jnp6vhsZKtxD2wziBtm3WXH8N+OPsk+9dLCz75
9OBCdnxuIds+KvvFnYPv853N/FH3puwuJc0jjEp1jlZzx44pY3UbF7Ht9Wbd
koYa/i8IjleE8WmhOtpU7dldy9j2DRVs3eLRdEIF7oO7FwKAhiPrqGn/Mzzi
/O069vKWmcBEWs7L2dQKq7z//ueb69nf5uXhkR7vNub30pqyupY2ZXftAUQR
u4Y1j6p76P+Rc8eMKTu/rHome+QxnYpWREUCUYEiiDOUTyyawsofK2Q71k5g
n4NdxRWfZ49vYO81bmR/O78JQpbN7N/v4Go7vij50JaZP7y0eebXl89tBruJ
hc+pe16owCPCgABH+Nm/FNzhbMq+MeFUToqjtHlDv5dfNHc0RGC1W1fQYPmQ
2yqmDIOIbFB+f7Z943T20dlaMOkb2GfnN7KzjZvYh29tYd+8TX2BYXrk/Y/L
QMXZgyuxUrJi8dwJjjBuftp/MaRnwV+G/vLQZ4W/XPz50F+ODHmwlo/ksDFw
rBHD5vLS0WCnS9ks+Lusdj57fn8NO3xwKZszfRjY6LUQ+mxhX1/ayj67uA1i
YlpohiR8+x0I/7uvrqWYbdqkR3FkY1s6RiqLOhJFf/RqZXxQErh9rSNFLikr
YttAD7bvq2O7Xqxjr/1uPZ4Jw56YUsyeqZnCIFjCdZcgEdu+h7FSuvjh8XVs
W80s7LEZbx6fYRct21H9Dz0nbCkpLfpm4oyxKllZtm6BGsUzLz7Jnn/lKfbS
G5tZ0+kt7Atc+XmJN30c2jILp7H4LqHPLKKkFcsu/3h7u2Ni84ZCNUtH+y0l
JUXfPPnMCvr5Zw5sYLsObWT7j2xiv2vcwhrObWPvXtzKvn5nCwHw90vb/v7J
uafYyf0r2LTyRzBynNK8X72fnttCJDDzm+cPb2SHT25hx85uZY1vb2NvApHn
3tn2w8cXt3z3cUMNO7ZnMVu+eOryOXMmVjTvVx6g51ZbVq6d880pUNsmuOuZ
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
8cG8t1GJTyB8DJo1hDQrWh+36n4LCR9RmKRNxt294p2+Pu16+FxtOxe74jsX
u+MxcXDYgS9AwTCi9JkS7qobFkpgugVTqKhg5iY6kLnRUZFz66RKRw2qhM5p
fna8I9qiG4EhsHxkt3vwIMH9OkjMD0/k3Deog9mekgsO6mNsg7ngRIcFyLeO
W7xPXUlin1dnd7n/vbXd27+3vmvEtUchuvMad7z27PBO2tFZ3CgIdmu850GH
QtIXAIqo0MyDTTSri3/li9O6XD69tBv7Y01KwXtrujn+FwiOQSuYsS6vg3bI
wPozVYpoo/I3NUP5g9EOAWKjPrPjDwGX+OWvPdGVNSztzt5ZnbL+/bXd7clX
xqCZ5PND96IpvNoJ4RU6gYb5Bn4v62YIs0y0N1fHz9iKe+sA4t6l/NV5XY4d
Xdz10pmqG391evGNFrINOx+ETOxgTqyzpj+PDHA+wMJnLtw0MxCgcGn3tqI4
AKMjBOGK0aoVhkS9q3YELRtY1s0jO/WY7Yq/ZrTGJMy+t23ppsEdtFcFYxvh
187Arxrl+srkhpSZBqU1kvhKMj2PPJpnJeTI14BQvpY8mvKlfWOSaHq+YaGd
BNtrL4/xXrmwptux89gusiYlUlfcSD+DfUZILiakZ6z1VgM3D01PLn1mdCJ2
3IQHJlK4blPgZ7d3PCeydUJtTtvSJ8FKHYZo/zjg2LC4i5GblCBSCaWJT2+J
qYrKs6tSLr+9JoW9szbl0rs19ua6CUupZ6xsTPFjY5XOxn2Tkp2rgY1XopDe
sNvyvIAzr3uVq13p7jIwP9PNUqqYZ6QIqfng4ppu7L2alEu/rwmc711JLdtY
RZVzkmxQV+5+plOylzA7J9GQYTSTSL5mPsb5NMSVaHakhDbqEqpUkU9oR0nt
K39zdffl51enoFg23/jQ7IqjlZ+cNhhYuHdishMraFdJHU8jthd30kWTdBDb
OyQPpYSKWftwSaSBf5FWyvTPDLLZziqbZr5xW+rbNKwT9QrCP6lfdnWc6FCI
5Ivlo3rU5sRru0Z2sspp84i0t7EG+sKN9Dmk4jWAl5Jc2zUuqUdlTrzYQeHK
6ZIfkfq5SXyJdUz03jJHxlpve+3A+CRq2ZESKtQwnJeOeAuPgaagUVAA0Twj
RTPG34QKBh6YSg6iJfRZAiL9qCYRIJGk7gBJPTQpWTs6T1La7WopjdIZ2DaA
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\
\>"],ExpressionUUID->"be0bb69d-229c-4e0b-9a3c-28c7e7da109a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graph", "Section",
 CellChangeTimes->{{3.7397328215870275`*^9, 
  3.7397328229792314`*^9}},ExpressionUUID->"01ffa067-d1f6-45a5-8fbe-\
df15c2b1991e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"IGMeshGraph", "[", "mesh_", "]"}], ":=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Range", "@", 
      RowBox[{"MeshCellCount", "[", 
       RowBox[{"mesh", ",", "0"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"MeshCells", "[", 
       RowBox[{"mesh", ",", "1"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"PropertyValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"mesh", ",", "1"}], "}"}], ",", "MeshCellMeasure"}], "]"}]}],
      ",", 
     RowBox[{"VertexCoordinates", "\[Rule]", 
      RowBox[{"MeshCoordinates", "[", "mesh", "]"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Default\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"{", 
      RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"p", "^", "2"}], "+", 
      RowBox[{"q", "^", "2"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot5All", "=", 
    RowBox[{"nAllJ", "=", 
     RowBox[{"statEdgeVecAllJ", "=", 
      RowBox[{"corrEdgeVecAllJ", "=", 
       RowBox[{"lambdasAllJ", "=", 
        RowBox[{"ctsSelAllJ\[Lambda]", "=", 
         RowBox[{"scaleGrowthAllJ", "=", 
          RowBox[{"{", "}"}]}]}]}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "diffussion"}], " ", "analysis"}], " ", "***)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"j", "=", "1"}], ",", 
    RowBox[{"j", "\[LessEqual]", "n"}], ",", 
    RowBox[{"j", "++"}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"select", " ", "cluster"}], " ", "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"create", " ", "tree", " ", "of", " ", "the", " ", "cluster"}], 
     " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ctsSelJ", "=", 
      RowBox[{"ctsSel", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"graph", "=", 
      RowBox[{"IGMeshGraph", "@", 
       RowBox[{"DelaunayMesh", "[", "ctsSelJ", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plot5", "=", 
      RowBox[{"FindSpanningTree", "[", 
       RowBox[{"graph", ",", 
        RowBox[{"VertexCoordinates", "\[Rule]", 
         RowBox[{"GraphEmbedding", "@", "graph"}]}], ",", 
        RowBox[{"EdgeShapeFunction", "\[Rule]", "\"\<Line\>\""}], ",", 
        RowBox[{"EdgeStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
        RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
        RowBox[{"VertexStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Default\>\""}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plot5All", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"plot5All", ",", "plot5"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"nJ", "=", 
      RowBox[{"VertexCount", "[", "plot5", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nAllJ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"nAllJ", ",", "nJ"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"vtxCood", "=", 
      RowBox[{"PropertyValue", "[", 
       RowBox[{"plot5", ",", "VertexCoordinates"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"**", " ", "Edges"}], " ", "Analysis"}], " ", "***)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{"EdgeList", "[", "plot5", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"edgeVectors", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "combining", " ", "\[CapitalDelta]lat", " ", "and", " ", 
          "\[CapitalDelta]long"}], ",", " ", "\[CapitalDelta]time"}], "}"}]}],
       " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"edgeVectors", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"vtxDiff", "=", 
          RowBox[{
           RowBox[{"vtxCood", "[", 
            RowBox[{"[", 
             RowBox[{"edges", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "-", 
           RowBox[{"vtxCood", "[", 
            RowBox[{"[", 
             RowBox[{"edges", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}]}], ";", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"vtxDiff", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"Abs", "@", 
            RowBox[{"vtxDiff", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "@", "edges"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"jump", " ", "statistic"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"statEdge", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "@", 
           RowBox[{"edgeVectors", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "i"}], "]"}], "]"}]}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"Mean", ",", "StandardDeviation", ",", 
           RowBox[{
            RowBox[{"Quantile", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "/", "4"}], ",", 
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"3", "/", "4"}]}], "}"}]}], "]"}], "&"}]}], "}"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"statEdgeVecAllJ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"statEdgeVecAllJ", ",", "statEdge"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"deg", "-", 
       RowBox[{"time", " ", "correlation"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"corrEdge", "=", 
      RowBox[{"Correlation", "@", "edgeVectors"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"corrEdgeVecAllJ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"corrEdgeVecAllJ", ",", 
        RowBox[{"corrEdge", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Gamma", " ", "Distribution", " ", "Modeling"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"distml", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"EstimatedDistribution", "[", 
         RowBox[{
          RowBox[{"edgeVectors", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "i"}], "]"}], "]"}], ",", 
          RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}]}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]1", ",", "\[Lambda]2"}], "}"}], "=", 
      RowBox[{"1", "/", 
       RowBox[{"Mean", "/@", "distml"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lambdasAllJ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"lambdasAllJ", ",", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]1", ",", "\[Lambda]2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ctsSelJ\[Lambda]", "=", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"ctsSelJ", ",", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Lambda]1", ",", "\[Lambda]2", ",", 
              RowBox[{"\[Lambda]1", "*", "\[Lambda]2"}]}], "}"}], ",", "nJ"}],
            "]"}]}], "}"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ctsSelAllJ\[Lambda]", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"ctsSelAllJ\[Lambda]", ",", "ctsSelJ\[Lambda]"}], "]"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"**", " ", "Study"}], " ", "expected", " ", "growth", " ", 
        "of", " ", "scale"}], ";", " ", 
       RowBox[{"weight", " ", "=", " ", 
        RowBox[{"log", 
         RowBox[{"(", "scale", ")"}]}]}]}], " ", "***)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"vtxScale", "=", 
      RowBox[{
       RowBox[{"cts", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"ratioVectors1", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"vtx1", "=", 
          RowBox[{"edges", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"vtx2", "=", 
          RowBox[{"edges", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Or", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"vtxScale", "[", 
               RowBox[{"[", "vtx1", "]"}], "]"}], "\[Equal]", "\"\<---\>\""}],
              ",", 
             RowBox[{
              RowBox[{"vtxScale", "[", 
               RowBox[{"[", "vtx2", "]"}], "]"}], "\[Equal]", "\"\<---\>\""}],
              ",", 
             RowBox[{
              RowBox[{"vtxCood", "[", 
               RowBox[{"[", 
                RowBox[{"vtx1", ",", "3"}], "]"}], "]"}], "==", 
              RowBox[{"vtxCood", "[", 
               RowBox[{"[", 
                RowBox[{"vtx2", ",", "3"}], "]"}], "]"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", "\"\<---\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"vtxScale", "[", 
               RowBox[{"[", "vtx1", "]"}], "]"}], "/", 
              RowBox[{"vtxScale", "[", 
               RowBox[{"[", "vtx2", "]"}], "]"}]}], ")"}], "^", 
            RowBox[{"-", 
             RowBox[{"Order", "[", 
              RowBox[{
               RowBox[{"vtxCood", "[", 
                RowBox[{"[", 
                 RowBox[{"vtx1", ",", "3"}], "]"}], "]"}], ",", 
               RowBox[{"vtxCood", "[", 
                RowBox[{"[", 
                 RowBox[{"vtx2", ",", "3"}], "]"}], "]"}]}], "]"}]}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "@", "edges"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"scaleGrowthKnown", "=", 
      RowBox[{"Exp", "@", 
       RowBox[{"N", "@", 
        RowBox[{"Mean", "@", 
         RowBox[{"Log", "@", 
          RowBox[{"Select", "[", 
           RowBox[{"ratioVectors1", ",", 
            RowBox[{
             RowBox[{"#", "\[NotEqual]", "\"\<---\>\""}], "&"}]}], 
           "]"}]}]}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"scaleGrowthAllJ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"scaleGrowthAllJ", ",", "scaleGrowthKnown"}], "]"}]}], ";"}]}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7379371505828333`*^9, 3.7379372418918643`*^9}, {
   3.7379707427608776`*^9, 3.7379709384585085`*^9}, {3.7379752571916285`*^9, 
   3.7379752848653035`*^9}, {3.737975416537903*^9, 3.7379754282135262`*^9}, {
   3.737975500951847*^9, 3.7379756021708264`*^9}, {3.7379756800755134`*^9, 
   3.737975680247389*^9}, {3.737975810381033*^9, 3.7379758450031214`*^9}, {
   3.737975884431389*^9, 3.7379759468994627`*^9}, {3.7379760280534415`*^9, 
   3.73797607452192*^9}, {3.737976112568618*^9, 3.7379761765881357`*^9}, {
   3.737977800922414*^9, 3.7379778033809195`*^9}, {3.7379780078912582`*^9, 
   3.7379780134108467`*^9}, {3.737979395022847*^9, 3.737979435558755*^9}, {
   3.7379795799042993`*^9, 3.737979623114818*^9}, {3.7379796533189*^9, 
   3.7379797692867155`*^9}, {3.737979849896536*^9, 3.7379798719596415`*^9}, 
   3.7379801496790466`*^9, {3.7379801856151457`*^9, 3.7379802897754326`*^9}, {
   3.7379804851519604`*^9, 3.737980490072132*^9}, {3.737981023961149*^9, 
   3.737981035992277*^9}, {3.7380012534900045`*^9, 3.7380012569314203`*^9}, {
   3.7380021683081684`*^9, 3.7380022100446286`*^9}, {3.738002257274392*^9, 
   3.7380022733852425`*^9}, {3.738002305014189*^9, 3.7380023104944286`*^9}, {
   3.738002362462474*^9, 3.738002537061249*^9}, {3.738002577169241*^9, 
   3.738002749461726*^9}, {3.738002790838338*^9, 3.7380028017907953`*^9}, {
   3.738002841555541*^9, 3.7380028598535414`*^9}, {3.7380029218057833`*^9, 
   3.738003045775119*^9}, {3.738003123064643*^9, 3.7380032050343485`*^9}, {
   3.7380032621736975`*^9, 3.738003270091793*^9}, {3.7380033405095167`*^9, 
   3.73800341935907*^9}, {3.7380034495254164`*^9, 3.7380034680916853`*^9}, {
   3.738003508697068*^9, 3.7380035773002076`*^9}, {3.738003620289435*^9, 
   3.738003922143475*^9}, 3.738005132174733*^9, {3.7380052940755596`*^9, 
   3.7380052946661363`*^9}, {3.7380064138777943`*^9, 3.738006588243184*^9}, {
   3.738007244416626*^9, 3.738007259290124*^9}, {3.7380599228146615`*^9, 
   3.7380599326359425`*^9}, {3.738059966642658*^9, 3.738059972649992*^9}, {
   3.738060168322097*^9, 3.738060184557747*^9}, {3.7380602162765503`*^9, 
   3.7380603556035967`*^9}, {3.738060429369234*^9, 3.738060463159931*^9}, {
   3.7380605409156227`*^9, 3.738060576171463*^9}, {3.738060608117653*^9, 
   3.738060677224535*^9}, {3.738060780931271*^9, 3.738060786099235*^9}, {
   3.738060849557295*^9, 3.7380608589414053`*^9}, {3.738061029128684*^9, 
   3.7380610730977345`*^9}, {3.7380611219099855`*^9, 3.73806119518025*^9}, {
   3.738061241972491*^9, 3.738061276274829*^9}, {3.7380615016030893`*^9, 
   3.738061531650155*^9}, {3.738061940999324*^9, 3.738062125274059*^9}, {
   3.738062306546508*^9, 3.7380623068423367`*^9}, {3.738063383555503*^9, 
   3.7380633932599597`*^9}, {3.738063730429066*^9, 3.7380637315549717`*^9}, {
   3.7380652861875753`*^9, 3.7380653443519397`*^9}, {3.7380653951368785`*^9, 
   3.738065507291791*^9}, {3.7380655474007893`*^9, 3.7380655827979584`*^9}, {
   3.7380770948328876`*^9, 3.7380770949004087`*^9}, {3.7380772342074776`*^9, 
   3.7380772846945133`*^9}, {3.738077430081207*^9, 3.738077459947606*^9}, {
   3.7380785884207864`*^9, 3.738078591821596*^9}, 3.73807906199706*^9, 
   3.7380832572451525`*^9, {3.7380915574777746`*^9, 3.738091557703474*^9}, {
   3.738232342876687*^9, 3.7382324681571693`*^9}, {3.7382324988928995`*^9, 
   3.738232529749643*^9}, {3.7382338317378035`*^9, 3.738233935144316*^9}, {
   3.73823446372957*^9, 3.738234468799577*^9}, {3.7382358007548337`*^9, 
   3.7382358057398195`*^9}, {3.738236719709179*^9, 3.7382367487877445`*^9}, {
   3.73823684489102*^9, 3.738236904375472*^9}, {3.7382369392112164`*^9, 
   3.7382369429201064`*^9}, {3.7382371551230173`*^9, 3.738237287745485*^9}, {
   3.738237376636344*^9, 3.738237393723568*^9}, {3.7382385694535446`*^9, 
   3.7382385722864904`*^9}, {3.7382386146676044`*^9, 3.738238641932731*^9}, {
   3.738238850181567*^9, 3.738238861010207*^9}, {3.7382389157918024`*^9, 
   3.7382389181488237`*^9}, {3.7382389545993323`*^9, 3.7382389622877145`*^9}, 
   3.7382705587550416`*^9, {3.738270695490859*^9, 3.7382707455987787`*^9}, {
   3.738270787857156*^9, 3.7382707881906548`*^9}, {3.738271003691716*^9, 
   3.738271031215598*^9}, {3.7382710693959846`*^9, 3.7382711139353657`*^9}, {
   3.7382711702926955`*^9, 3.7382713176792116`*^9}, {3.7382713795684166`*^9, 
   3.7382713998050547`*^9}, {3.7382714363974547`*^9, 
   3.7382715042569904`*^9}, {3.738271539819547*^9, 3.7382717493390503`*^9}, {
   3.7382719160902295`*^9, 3.7382719990065784`*^9}, {3.73827220263358*^9, 
   3.7382723781769123`*^9}, {3.7382724186460023`*^9, 3.738272425412917*^9}, {
   3.738272636122509*^9, 3.738272644320733*^9}, {3.7382727487711754`*^9, 
   3.7382727962721386`*^9}, {3.7382729473075743`*^9, 3.738272979261479*^9}, {
   3.7382748726628404`*^9, 3.7382748779016514`*^9}, {3.738274941156242*^9, 
   3.738274941333375*^9}, {3.7382751583348446`*^9, 3.738275173549735*^9}, {
   3.738275258076255*^9, 3.73827526165965*^9}, {3.738275300758971*^9, 
   3.7382753510053596`*^9}, {3.7382753879014416`*^9, 
   3.7382754171039324`*^9}, {3.738275448721837*^9, 3.7382754543311977`*^9}, 
   3.7383192600293655`*^9, 3.738319573495858*^9, {3.7396291187564077`*^9, 
   3.7396291274411173`*^9}, 3.7396291705867147`*^9, {3.739733811373608*^9, 
   3.7397338325543227`*^9}, {3.7397339379421844`*^9, 3.739733996103301*^9}, {
   3.7397341198105164`*^9, 3.7397341823163757`*^9}, {3.7397343041146393`*^9, 
   3.7397343519282274`*^9}, {3.7397344773578777`*^9, 
   3.7397344932296934`*^9}, {3.7397351715770245`*^9, 3.739735176865026*^9}, {
   3.7397352533538527`*^9, 3.7397352537017317`*^9}, {3.7397353521184487`*^9, 
   3.7397353657647934`*^9}, {3.73973543467085*^9, 3.7397355006325393`*^9}, 
   3.739793263275128*^9, 3.7397933990470343`*^9, {3.739809316215974*^9, 
   3.739809316450348*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"aad73962-9efc-479b-ad14-8bebc2f1032b"],

Cell[BoxData[
 TemplateBox[{
  "TetGenLink`TetGenDelaunay","tetfc",
   "\"A Delaunay tetrahedralization could not be found from the points \\!\\(\
\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"106.103175196499`\\\"}], \\\",\\\", \\\"34.4274140766016`\\\", \\\",\\\", \
\\\"49.863013698630134`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"81.375789`\\\"}], \\\",\\\", \
\\\"28.533513`\\\", \\\",\\\", \\\"45.06849315068493`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"88.920118`\\\"}], \\\",\\\", \\\"32.829842`\\\", \\\",\\\", \
\\\"40.75342465753425`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\).\"",2,137,26,
   24792530583513135689,"Local","TetGenLink`TetGenDelaunay"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839363479344*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"838f5d80-3369-44e1-a45a-be00f1b28bae"],

Cell[BoxData[
 TemplateBox[{
  "Range","range",
   "\"Range specification in \\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) does not have appropriate \
bounds.\"",2,137,27,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839363517274*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"6e41cf05-0523-4ad6-a78b-8b0fd75f451e"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"MeshCells\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\
\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \
\\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"",2,137,
   28,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393635502157`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"ea498e70-6c22-46be-8934-aa7830e997ad"],

Cell[BoxData[
 TemplateBox[{
  "PropertyValue","pvobj",
   "\"\\!\\(\\*RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}]\
\\) is not an object with properties.\"",2,137,29,24792530583513135689,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839363587143*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"bf8ba014-5940-401b-995f-8fb330c030da"],

Cell[BoxData[
 TemplateBox[{
  "GraphEmbedding","graph",
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"Graph\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"",2,137,30,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393636160884`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"a014d804-2960-436b-a356-af6c3d09458f"],

Cell[BoxData[
 TemplateBox[{
  "FindSpanningTree","graph",
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \
\\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}]\\).\"",2,137,31,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839363647033*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"eac051d8-a504-490b-a597-3ee00e4ac41d"],

Cell[BoxData[
 TemplateBox[{
  "VertexCount","graph",
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"VertexCount\\\", \\\"[\\\", \
RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Graph\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"",2,137,32,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.73983936367997*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"29f5eef3-dd1b-4356-998b-48dd39e37a45"],

Cell[BoxData[
 TemplateBox[{
  "PropertyValue","pvobj",
   "\"\\!\\(\\*RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \
\\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) is not an object with \
properties.\"",2,137,33,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393637144084`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"dfccf131-6c45-42f0-814d-2e15e084c6d4"],

Cell[BoxData[
 TemplateBox[{
  "EdgeList","graph",
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"EdgeList\\\", \\\"[\\\", RowBox[{\\\"FindSpanningTree\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\
\"Range\\\", \\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"",2,137,34,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839363747348*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"e1fcf366-3a47-4517-8625-b2e1c7f17217"],

Cell[BoxData[
 TemplateBox[{
  "Part","pkspec1",
   "\"The expression \\!\\(\\*RowBox[{\\\"Graph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\
\"}], \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) cannot be used as a part \
specification.\"",2,137,35,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393637847776`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"defc2f25-fd9e-47e5-954b-996e12fbb645"],

Cell[BoxData[
 TemplateBox[{
  "Part","pkspec1",
   "\"The expression \\!\\(\\*RowBox[{\\\"VertexCoordinates\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"Graph\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]}]\\) cannot be \
used as a part specification.\"",2,137,36,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393638187127`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"a7d2f49f-b663-4257-b288-8dc0a049c74e"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \
\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \
\\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"MeshCellMeasure\\\"}], \\\
\"]\\\"}]}], \\\",\\\", RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"Graph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Part\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\
\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \
\\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"EdgeShapeFunction\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Line\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"EdgeStyle\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Thickness\\\", \\\"[\\\", \
\\\"Large\\\", \\\"]\\\"}], \\\",\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[GrayLevel[0], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, GrayLevel[0.`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
StyleBox[RowBox[List[\\\"GrayLevel\\\", \\\"[\\\", \\\"0\\\", \\\"]\\\"]], \
Rule[NumberMarks, False]]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, GrayLevel[0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"GrayLevelColorValueSelector\\\"], List[0, List[Left, \
Bottom]], List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], GrayLevel[0], Rule[Editable, \
False], Rule[Selectable, False]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexSize\\\", \\\"\[Rule]\\\", \\\"Tiny\\\"}], \\\",\\\", \
RowBox[{\\\"VertexStyle\\\", \\\"\[Rule]\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[GrayLevel[0], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, GrayLevel[0.`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
StyleBox[RowBox[List[\\\"GrayLevel\\\", \\\"[\\\", \\\"0\\\", \\\"]\\\"]], \
Rule[NumberMarks, False]]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, GrayLevel[0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"GrayLevelColorValueSelector\\\"], List[0, List[Left, \
Bottom]], List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], GrayLevel[0], Rule[Editable, \
False], Rule[Selectable, False]]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", \
\\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"-\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]\\) does not exist.\"",2,137,37,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839363852151*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"71f0129d-8d1e-4b9e-98a2-1d026246d184"],

Cell[BoxData[
 TemplateBox[{
  "StandardDeviation","shlen",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"f\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"EdgeShapeFunction\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Line\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"EdgeStyle\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexSize\\\", \\\"\[Rule]\\\", \\\"Tiny\\\"}], \\\",\\\", \
RowBox[{\\\"VertexStyle\\\", \\\"\[Rule]\\\", RowBox[{\\\"GrayLevel\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", \
\\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"MeshCellMeasure\\\"}], \\\
\"]\\\"}]}], \\\",\\\", RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"-\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"17\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"\[Rule]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]}], \
\\\"]\\\"}], \\\"}\\\"}]\\) should have at least two elements.\"",2,137,38,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393638895807`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"1976ffa7-1efe-41d2-b041-5ebefb81d328"],

Cell[BoxData[
 TemplateBox[{
  "Quantile","rectn",
   "\"Rectangular array of real numbers is expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Quantile\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"f\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\
\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"VertexCoordinates\\\"}], \
\\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"Graph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"MeshCells\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\
\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"EdgeWeight\\\", \\\"\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"VertexCoordinates\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"\[RightDoubleBracket]\\\
\"}], \\\"-\\\", RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\
\\\", RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}]}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\",\\\", \
FractionBox[\\\"1\\\", \\\"2\\\"], \\\",\\\", FractionBox[\\\"3\\\", \
\\\"4\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\).\"",2,137,39,24792530583513135689,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839363918529*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"7ecd7038-900d-4e85-a509-99e3277a656a"],

Cell[BoxData[
 TemplateBox[{
  "StandardDeviation","shlen",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Abs\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\
\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"VertexCoordinates\\\"}], \
\\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"Graph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"MeshCells\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\
\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"EdgeWeight\\\", \\\"\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"VertexCoordinates\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"\[RightDoubleBracket]\\\
\"}], \\\"-\\\", RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\
\\\", RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}]}], \\\")\\\"}], \\\"\[LeftDoubleBracket]\\\", \
\\\"3\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"}\\\"}]\\) \
should have at least two elements.\"",2,137,40,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393639599514`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"81182f0a-f887-479a-a508-c23960eaeb12"],

Cell[BoxData[
 TemplateBox[{
  "Quantile","rectn",
   "\"Rectangular array of real numbers is expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Quantile\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"Abs\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\
\\\", RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\"-\\\", \
RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]}], \\\")\\\"}], \\\"\[LeftDoubleBracket]\\\", \
\\\"3\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\",\\\", \
FractionBox[\\\"1\\\", \\\"2\\\"], \\\",\\\", FractionBox[\\\"3\\\", \
\\\"4\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\).\"",2,137,41,24792530583513135689,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393639898963`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"b632d742-d196-4317-ae97-6a002612173f"],

Cell[BoxData[
 TemplateBox[{
  "Correlation","shlen",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"EdgeShapeFunction\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Line\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"EdgeStyle\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexSize\\\", \\\"\[Rule]\\\", \\\"Tiny\\\"}], \\\",\\\", \
RowBox[{\\\"VertexStyle\\\", \\\"\[Rule]\\\", RowBox[{\\\"GrayLevel\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", \
\\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"MeshCellMeasure\\\"}], \\\
\"]\\\"}]}], \\\",\\\", RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"-\\\", RowBox[{RowBox[{RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"13\\\", \\\"\[RightSkeleton]\\\"}], \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"\[RightDoubleBracket]\\\"}]}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]\\) should have at least \
two elements.\"",2,137,42,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393640188427`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"a7ab4dd5-090a-40ce-8fd8-e65b307236e9"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\
\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"VertexCoordinates\\\"}], \
\\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"Graph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"MeshCells\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\
\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"EdgeWeight\\\", \\\"\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"VertexCoordinates\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"\[RightDoubleBracket]\\\
\"}], \\\"-\\\", RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\
\\\", RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Abs\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"\[RightDoubleBracket]\\\"}], \\\"-\\\", RowBox[{RowBox[{\\\"PropertyValue\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\
\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"\[RightDoubleBracket]\\\"}]}], \\\")\
\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"3\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]\\) \
does not exist.\"",2,137,43,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364047634*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"409f8e96-9c72-4e70-ad93-225b04b7ca99"],

Cell[BoxData[
 TemplateBox[{
  "EstimatedDistribution","ntsprt",
   "\"One or more data points are not in support of the process or \
distribution \\!\\(\\*RowBox[{\\\"ExponentialDistribution\\\", \\\"[\\\", \
\\\"\[Lambda]\\\", \\\"]\\\"}]\\).\"",2,137,44,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393640775785`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"78cd9809-2b81-4195-934d-104d585a3969"],

Cell[BoxData[
 TemplateBox[{
  "EstimatedDistribution","ntsprt",
   "\"One or more data points are not in support of the process or \
distribution \\!\\(\\*RowBox[{\\\"ExponentialDistribution\\\", \\\"[\\\", \
\\\"\[Lambda]\\\", \\\"]\\\"}]\\).\"",2,137,45,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393641050296`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"813ae20b-5f41-4768-be5e-c5fe1fc6dc04"],

Cell[BoxData[
 TemplateBox[{
  "ConstantArray","ilsmn",
   "\"Single or list of non-negative machine-sized integers expected at \
position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"ConstantArray\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"1\\\", RowBox[{\\\"Mean\\\", \\\"[\\\", \
RowBox[{\\\"EstimatedDistribution\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"f\\\", \\\"[\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"ExponentialDistribution\\\", \
\\\"[\\\", \\\"\[Lambda]\\\", \\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]], \\\",\
\\\", FractionBox[\\\"1\\\", RowBox[{\\\"Mean\\\", \\\"[\\\", \
RowBox[{\\\"EstimatedDistribution\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Abs\\\", \\\"[\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"ExponentialDistribution\\\", \
\\\"[\\\", \\\"\[Lambda]\\\", \\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]], \\\",\
\\\", FractionBox[\\\"1\\\", RowBox[{RowBox[{\\\"Mean\\\", \\\"[\\\", \
RowBox[{\\\"EstimatedDistribution\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Abs\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"ExponentialDistribution\\\", \\\"[\\\", \\\"\[Lambda]\\\", \
\\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Mean\\\", \
\\\"[\\\", RowBox[{\\\"EstimatedDistribution\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"f\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"ExponentialDistribution\\\", \\\"[\\\", \\\"\[Lambda]\\\", \
\\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]}]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"VertexCount\\\", \\\"[\\\", RowBox[{\\\"FindSpanningTree\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]\\).\"",2,137,46,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364132976*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"0d48cc80-7d9f-4b99-ac1d-d11daeadc227"],

Cell[BoxData[
 TemplateBox[{
  "Part","pkspec1",
   "\"The expression \\!\\(\\*RowBox[{\\\"Graph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\
\"}], \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) cannot be used as a part \
specification.\"",2,137,47,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364161922*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"ff6e6e65-3c47-44c9-9897-7e275c7ed1c2"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"pkspec1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,137,48,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364189871*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"a9eb3920-51fc-42c2-83ba-2ae86d3ec3c2"],

Cell[BoxData[
 TemplateBox[{
  "TetGenLink`TetGenDelaunay","tetfc",
   "\"A Delaunay tetrahedralization could not be found from the points \\!\\(\
\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"95.3863425`\\\"}], \\\",\\\", \\\"29.7804724`\\\", \\\",\\\", \
\\\"16.78082191780822`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"89.6122696`\\\"}], \\\",\\\", \
\\\"44.8741579`\\\", \\\",\\\", \\\"9.10958904109589`\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]\\).\"",2,137,49,24792530583513135689,"Local",
   "TetGenLink`TetGenDelaunay"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364217321*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"b8d8e0a5-b81d-40ef-bfe7-fa1aca236f11"],

Cell[BoxData[
 TemplateBox[{
  "Range","range",
   "\"Range specification in \\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) does not have appropriate \
bounds.\"",2,137,50,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393642437696`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"d173d46e-b2a0-4e31-a9a0-0043c8d9eea2"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"MeshCells\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\
\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \
\\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"",2,137,
   51,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.73983936427024*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"a2e93bd5-d58d-4a46-8a53-0f48fa86e6d2"],

Cell[BoxData[
 TemplateBox[{
  "PropertyValue","pvobj",
   "\"\\!\\(\\*RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}]\
\\) is not an object with properties.\"",2,137,52,24792530583513135689,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364298174*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"800d7294-b0c4-4a48-97b1-c4a886685845"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"PropertyValue\\\", \
\\\"::\\\", \\\"pvobj\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,137,53,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393643281193`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"8e7214a5-7259-4f34-8790-5207512cf839"],

Cell[BoxData[
 TemplateBox[{
  "GraphEmbedding","graph",
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"Graph\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"",2,137,54,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393643555636`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"a84105c4-0677-4c1f-931c-77eb0cca536b"],

Cell[BoxData[
 TemplateBox[{
  "FindSpanningTree","graph",
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \
\\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}]\\).\"",2,137,55,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393643845105`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"9a55e3b4-b343-4435-b436-afa500604138"],

Cell[BoxData[
 TemplateBox[{
  "VertexCount","graph",
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"VertexCount\\\", \\\"[\\\", \
RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Graph\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"",2,137,56,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364413455*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"09161b08-067c-49d8-a514-8bde76968577"],

Cell[BoxData[
 TemplateBox[{
  "EdgeList","graph",
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"EdgeList\\\", \\\"[\\\", RowBox[{\\\"FindSpanningTree\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\
\"Range\\\", \\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\
\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", \\\
\"3\\\", \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"MeshCellMeasure\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", \\\"3\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"",2,137,57,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364441904*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"a75593fa-1158-4c4c-be1f-04d1c9cb5e1d"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \
\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \
\\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"MeshCellMeasure\\\"}], \\\
\"]\\\"}]}], \\\",\\\", RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"Graph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Part\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\
\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \
\\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"EdgeShapeFunction\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Line\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"EdgeStyle\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Thickness\\\", \\\"[\\\", \
\\\"Large\\\", \\\"]\\\"}], \\\",\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[GrayLevel[0], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, GrayLevel[0.`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
StyleBox[RowBox[List[\\\"GrayLevel\\\", \\\"[\\\", \\\"0\\\", \\\"]\\\"]], \
Rule[NumberMarks, False]]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, GrayLevel[0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"GrayLevelColorValueSelector\\\"], List[0, List[Left, \
Bottom]], List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], GrayLevel[0], Rule[Editable, \
False], Rule[Selectable, False]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexSize\\\", \\\"\[Rule]\\\", \\\"Tiny\\\"}], \\\",\\\", \
RowBox[{\\\"VertexStyle\\\", \\\"\[Rule]\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[GrayLevel[0], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, GrayLevel[0.`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
StyleBox[RowBox[List[\\\"GrayLevel\\\", \\\"[\\\", \\\"0\\\", \\\"]\\\"]], \
Rule[NumberMarks, False]]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, GrayLevel[0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"GrayLevelColorValueSelector\\\"], List[0, List[Left, \
Bottom]], List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], GrayLevel[0], Rule[Editable, \
False], Rule[Selectable, False]]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \
\\\"\[Rule]\\\", \\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", \
\\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"-\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]\\) does not exist.\"",2,137,58,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393644723473`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"16acc6dc-2d48-44a4-9eac-f10e9af74a21"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,137,59,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393645087776`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"b0fa786b-fb83-4e1e-8b57-ff3baaa5b1e0"],

Cell[BoxData[
 TemplateBox[{
  "StandardDeviation","shlen",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"f\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"EdgeShapeFunction\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Line\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"EdgeStyle\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexSize\\\", \\\"\[Rule]\\\", \\\"Tiny\\\"}], \\\",\\\", \
RowBox[{\\\"VertexStyle\\\", \\\"\[Rule]\\\", RowBox[{\\\"GrayLevel\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", \
\\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"MeshCellMeasure\\\"}], \\\
\"]\\\"}]}], \\\",\\\", RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"-\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"17\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"\[Rule]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"\[RightDoubleBracket]\\\"}]}], \
\\\"]\\\"}], \\\"}\\\"}]\\) should have at least two elements.\"",2,137,60,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393645367255`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"16748c4f-aa46-48ac-8b60-b58c457e446e"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StandardDeviation\\\", \
\\\"::\\\", \\\"shlen\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,137,61,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364567685*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"f5e602f9-c180-410a-b192-40f66959e14f"],

Cell[BoxData[
 TemplateBox[{
  "Quantile","rectn",
   "\"Rectangular array of real numbers is expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Quantile\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"f\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\
\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"VertexCoordinates\\\"}], \
\\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"Graph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", RowBox[{\\\"MeshCellCount\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"MeshCells\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\
\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"EdgeWeight\\\", \\\"\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"VertexCoordinates\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"\[RightDoubleBracket]\\\
\"}], \\\"-\\\", RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\
\\\", RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"\
\[RightDoubleBracket]\\\"}]}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\",\\\", \
FractionBox[\\\"1\\\", \\\"2\\\"], \\\",\\\", FractionBox[\\\"3\\\", \
\\\"4\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\).\"",2,137,62,24792530583513135689,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393645966144`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"c31c9a21-ccc7-4d61-a17f-c95b2e32c8e0"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Quantile\\\", \
\\\"::\\\", \\\"rectn\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,137,63,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364627059*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"594f70dc-5565-499f-923c-711e6be570f8"],

Cell[BoxData[
 TemplateBox[{
  "Correlation","shlen",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"FindSpanningTree\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Rule\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"GraphEmbedding\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"EdgeShapeFunction\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Line\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"EdgeStyle\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"VertexSize\\\", \\\"\[Rule]\\\", \\\"Tiny\\\"}], \\\",\\\", \
RowBox[{\\\"VertexStyle\\\", \\\"\[Rule]\\\", RowBox[{\\\"GrayLevel\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\",\\\", \
\\\"VertexCoordinates\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"Graph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{\\\"MeshCellCount\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EmptyRegion\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"MeshCells\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EmptyRegion\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"EdgeWeight\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"PropertyValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \\\"MeshCellMeasure\\\"}], \\\
\"]\\\"}]}], \\\",\\\", RowBox[{\\\"VertexCoordinates\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"MeshCoordinates\\\", \\\"[\\\", RowBox[{\\\"EmptyRegion\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", RowBox[{\\\"PlotTheme\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"Default\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"\
\[RightDoubleBracket]\\\"}], \\\"-\\\", RowBox[{RowBox[{RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"13\\\", \\\"\[RightSkeleton]\\\"}], \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"\[RightDoubleBracket]\\\"}]}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]\\) should have at least \
two elements.\"",2,137,64,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393646545124`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"7511c42e-9eae-4c2f-8c42-fb15e5a62042"],

Cell[BoxData[
 TemplateBox[{
  "EstimatedDistribution","ntsprt",
   "\"One or more data points are not in support of the process or \
distribution \\!\\(\\*RowBox[{\\\"ExponentialDistribution\\\", \\\"[\\\", \
\\\"\[Lambda]\\\", \\\"]\\\"}]\\).\"",2,137,65,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364684453*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"6022b793-1626-45f9-baa2-4430b48cb149"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"EstimatedDistribution\\\
\", \\\"::\\\", \\\"ntsprt\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,137,66,24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.739839364711921*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"aa41efec-9ab4-4f52-a03f-0f5089a816df"],

Cell[BoxData[
 TemplateBox[{
  "ConstantArray","ilsmn",
   "\"Single or list of non-negative machine-sized integers expected at \
position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"ConstantArray\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"1\\\", RowBox[{\\\"Mean\\\", \\\"[\\\", \
RowBox[{\\\"EstimatedDistribution\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"f\\\", \\\"[\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"ExponentialDistribution\\\", \
\\\"[\\\", \\\"\[Lambda]\\\", \\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]], \\\",\
\\\", FractionBox[\\\"1\\\", RowBox[{\\\"Mean\\\", \\\"[\\\", \
RowBox[{\\\"EstimatedDistribution\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Abs\\\", \\\"[\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"ExponentialDistribution\\\", \
\\\"[\\\", \\\"\[Lambda]\\\", \\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]], \\\",\
\\\", FractionBox[\\\"1\\\", RowBox[{RowBox[{\\\"Mean\\\", \\\"[\\\", \
RowBox[{\\\"EstimatedDistribution\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Abs\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"ExponentialDistribution\\\", \\\"[\\\", \\\"\[Lambda]\\\", \
\\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Mean\\\", \
\\\"[\\\", RowBox[{\\\"EstimatedDistribution\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"f\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"ExponentialDistribution\\\", \\\"[\\\", \\\"\[Lambda]\\\", \
\\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]}]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"VertexCount\\\", \\\"[\\\", RowBox[{\\\"FindSpanningTree\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]\\).\"",2,137,67,
   24792530583513135689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739831380827613*^9, 3.7398314339625225`*^9, 
  3.7398327109078875`*^9, 3.7398359812120385`*^9, 3.739836733486062*^9, 
  3.739836792692462*^9, 3.739836827591985*^9, 3.7398393222801404`*^9, 
  3.7398393647393684`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"cb2ceaa5-45a6-4e2e-9854-cd821add9d49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Legended", "[", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{"plot1B", ",", 
         RowBox[{"plot5All", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<i\>\"", ",", 
           RowBox[{"nAllJ", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Column", "@", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\[CapitalDelta]Deg Stat\>\"", ",", 
              "\"\<\[CapitalDelta]t Stat\>\""}], "}"}]}], ",", 
           RowBox[{"statEdgeVecAllJ", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<corr\>\"", ",", 
           RowBox[{"corrEdgeVecAllJ", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Lambda]1, \[Lambda]2\>\"", ",", 
           RowBox[{"lambdasAllJ", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Scale Growth\>\"", ",", 
           RowBox[{"scaleGrowthAllJ", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Range", "@", "n"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ctsSelAllJ\[Lambda]", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"ctsSelAllJ\[Lambda]", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"nAllJ", "//", "Column"}], "\[IndentingNewLine]", 
 RowBox[{"statEdgeVecAllJ", "//", "Column"}], "\[IndentingNewLine]", 
 RowBox[{"corrEdgeVecAllJ", "//", "Column"}], "\[IndentingNewLine]", 
 RowBox[{"lambdasAllJ", "//", "Column"}], "\[IndentingNewLine]", 
 RowBox[{"scaleGrowthAllJ", "//", "Column"}]}], "Input",
 CellChangeTimes->{{3.739734370500515*^9, 3.739734412569363*^9}, {
  3.739734447826167*^9, 3.7397344484640207`*^9}, {3.739734541389449*^9, 
  3.739734591307767*^9}, {3.7397346232292533`*^9, 3.73973475230724*^9}, {
  3.739734832147068*^9, 3.7397349092908416`*^9}, {3.739735002131439*^9, 
  3.7397350421313205`*^9}, {3.7397351421030383`*^9, 3.7397351532062473`*^9}, {
  3.739735192812279*^9, 3.739735203260518*^9}, {3.739735281934252*^9, 
  3.739735338115815*^9}, {3.739735396213128*^9, 3.7397354112171326`*^9}, {
  3.7397589188128347`*^9, 3.739758919149168*^9}, {3.7397590482918963`*^9, 
  3.7397591806542897`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"329dfcd3-d409-4772-b22e-33eeb276f5fb"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], {1, 2, 3, 4, 5}}}, Typeset`size$$ = {
    836., {235., 240.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$8267$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$8267$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Legended[
        Show[{$CellContext`plot1B, 
          Part[$CellContext`plot5All, $CellContext`i$$]}], 
        Column[{{"i", 
           Part[$CellContext`nAllJ, $CellContext`i$$]}, {
           Column[{"\[CapitalDelta]Deg Stat", "\[CapitalDelta]t Stat"}], 
           Part[$CellContext`statEdgeVecAllJ, $CellContext`i$$]}, {"corr", 
           Part[$CellContext`corrEdgeVecAllJ, $CellContext`i$$]}, {
          "\[Lambda]1, \[Lambda]2", 
           Part[$CellContext`lambdasAllJ, $CellContext`i$$]}, {"Scale Growth", 
           Part[$CellContext`scaleGrowthAllJ, $CellContext`i$$]}}]], 
      "Specifications" :> {{$CellContext`i$$, {1, 2, 3, 4, 5}, ControlType -> 
         SetterBar}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{891., {283., 290.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7397591813585854`*^9, 3.73978721453088*^9, 3.739789164360635*^9, 
   3.7397931294433823`*^9, 3.7397931784006233`*^9, 3.739793220462802*^9, 
   3.739793443368974*^9, 3.73979349932292*^9, 3.7398081885296435`*^9, {
   3.739809183188961*^9, 3.739809233981101*^9}, 3.739809332523875*^9, 
   3.739826009954589*^9, 3.7398269863327484`*^9, 3.7398275370892406`*^9, 
   3.739830468226183*^9, 3.739831025344611*^9, {3.7398312757579403`*^9, 
   3.739831324300567*^9}, 3.7398313811500154`*^9, 3.739831435836532*^9, 
   3.739832712878373*^9, 3.7398359831982174`*^9, 3.7398367340640087`*^9, 
   3.73983679405587*^9, 3.7398368282188187`*^9, 3.739839322870545*^9, 
   3.739839364863618*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"d2ef1eb2-57be-4db3-b0c3-f3dd11d56bef"],

Cell[BoxData[
 TagBox[GridBox[{
    {"4"},
    {"4"},
    {"4"},
    {
     RowBox[{"VertexCount", "[", 
      RowBox[{"FindSpanningTree", "[", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"MeshCellCount", "[", 
            RowBox[{
             RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], "]"}],
           ",", 
          RowBox[{
           RowBox[{"MeshCells", "[", 
            RowBox[{
             RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"EdgeWeight", "\[Rule]", 
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}], ",",
              "MeshCellMeasure"}], "]"}]}], ",", 
          RowBox[{"VertexCoordinates", "\[Rule]", 
           RowBox[{"MeshCoordinates", "[", 
            RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], ",", 
        RowBox[{"VertexCoordinates", "\[Rule]", 
         RowBox[{"GraphEmbedding", "[", 
          RowBox[{"Graph", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"MeshCellCount", "[", 
              RowBox[{
               RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
             "]"}], ",", 
            RowBox[{
             RowBox[{"MeshCells", "[", 
              RowBox[{
               RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"EdgeWeight", "\[Rule]", 
             RowBox[{"PropertyValue", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}], 
               ",", "MeshCellMeasure"}], "]"}]}], ",", 
            RowBox[{"VertexCoordinates", "\[Rule]", 
             RowBox[{"MeshCoordinates", "[", 
              RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
            RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
          "]"}]}], ",", 
        RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], ",", 
        RowBox[{"EdgeStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "Large", "]"}], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->GrayLevel[0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 1.35 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0],
            Editable->False,
            Selectable->False]}], "}"}]}], ",", 
        RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
        RowBox[{"VertexStyle", "\[Rule]", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             DefaultBaseStyle->"ColorSwatchGraphics",
             Frame->True,
             FrameStyle->GrayLevel[0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 1.35 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}],
             PlotRangePadding->None],
            StyleBox[
             RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["GrayLevelColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          GrayLevel[0],
          Editable->False,
          Selectable->False]}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], "]"}]},
    {
     RowBox[{"VertexCount", "[", 
      RowBox[{"FindSpanningTree", "[", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"MeshCellCount", "[", 
            RowBox[{
             RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], "]"}],
           ",", 
          RowBox[{
           RowBox[{"MeshCells", "[", 
            RowBox[{
             RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"EdgeWeight", "\[Rule]", 
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}], ",",
              "MeshCellMeasure"}], "]"}]}], ",", 
          RowBox[{"VertexCoordinates", "\[Rule]", 
           RowBox[{"MeshCoordinates", "[", 
            RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], ",", 
        RowBox[{"VertexCoordinates", "\[Rule]", 
         RowBox[{"GraphEmbedding", "[", 
          RowBox[{"Graph", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"MeshCellCount", "[", 
              RowBox[{
               RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
             "]"}], ",", 
            RowBox[{
             RowBox[{"MeshCells", "[", 
              RowBox[{
               RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"EdgeWeight", "\[Rule]", 
             RowBox[{"PropertyValue", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}], 
               ",", "MeshCellMeasure"}], "]"}]}], ",", 
            RowBox[{"VertexCoordinates", "\[Rule]", 
             RowBox[{"MeshCoordinates", "[", 
              RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
            RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
          "]"}]}], ",", 
        RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], ",", 
        RowBox[{"EdgeStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "Large", "]"}], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->GrayLevel[0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 1.35 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0],
            Editable->False,
            Selectable->False]}], "}"}]}], ",", 
        RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
        RowBox[{"VertexStyle", "\[Rule]", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             DefaultBaseStyle->"ColorSwatchGraphics",
             Frame->True,
             FrameStyle->GrayLevel[0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 1.35 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}],
             PlotRangePadding->None],
            StyleBox[
             RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["GrayLevelColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          GrayLevel[0],
          Editable->False,
          Selectable->False]}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], "]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7397591813585854`*^9, 3.73978721453088*^9, 3.739789164360635*^9, 
   3.7397931294433823`*^9, 3.7397931784006233`*^9, 3.739793220462802*^9, 
   3.739793443368974*^9, 3.73979349932292*^9, 3.7398081885296435`*^9, {
   3.739809183188961*^9, 3.739809233981101*^9}, 3.739809332523875*^9, 
   3.739826009954589*^9, 3.7398269863327484`*^9, 3.7398275370892406`*^9, 
   3.739830468226183*^9, 3.739831025344611*^9, {3.7398312757579403`*^9, 
   3.739831324300567*^9}, 3.7398313811500154`*^9, 3.739831435836532*^9, 
   3.739832712878373*^9, 3.7398359831982174`*^9, 3.7398367340640087`*^9, 
   3.73983679405587*^9, 3.7398368282188187`*^9, 3.739839322870545*^9, 
   3.7398393649828997`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"6c608f32-bfc9-4e96-a6c4-baf25c68aa37"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10.258725987686715`", ",", "7.038857099203223`", ",", 
         RowBox[{"{", 
          RowBox[{
          "2.674998148335398`", ",", "11.51863151374895`", ",", 
           "16.582548300975795`"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.191780821917803`", ",", "5.813047230881842`", ",", 
         RowBox[{"{", 
          RowBox[{
          "0.9589041095890423`", ",", "8.150684931506845`", ",", 
           "12.465753424657521`"}], "}"}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.408047873717706`", ",", "3.8385212935484256`", ",", 
         RowBox[{"{", 
          RowBox[{
          "4.580695677610016`", ",", "5.865576920219745`", ",", 
           "11.777871023323359`"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.273972602739728`", ",", "2.9941771225197815`", ",", 
         RowBox[{"{", 
          RowBox[{
          "1.9178082191780845`", ",", "6.2328767123287605`", ",", 
           "7.671232876712338`"}], "}"}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"14.406526979470023`", ",", "5.7874548092979055`", ",", 
         RowBox[{"{", 
          RowBox[{
          "7.845483681637276`", ",", "16.58742764703034`", ",", 
           "18.786669609742454`"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15.981735159817353`", ",", "5.556957559588849`", ",", 
         RowBox[{"{", 
          RowBox[{
          "10.068493150684944`", ",", "16.78082191780821`", ",", 
           "21.0958904109589`"}], "}"}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"PropertyValue", "[", 
             RowBox[{
              RowBox[{"FindSpanningTree", "[", 
               RowBox[{
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                    "]"}], ",", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                    "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"EdgeWeight", "\[Rule]", 
                   RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"GraphEmbedding", "[", 
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], "]"}]}], ",", 
                RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], ",", 
                RowBox[{"EdgeStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"VertexStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                   Appearance->None,
                   BaseStyle->{},
                   BaselinePosition->Baseline,
                   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                   DefaultBaseStyle->{},
                   Evaluator->Automatic,
                   Method->"Preemptive"],
                  GrayLevel[0],
                  Editable->False,
                  Selectable->False]}], ",", 
                RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
              ",", "VertexCoordinates"}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"Graph", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"MeshCellCount", "[", 
                RowBox[{
                 RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"MeshCells", "[", 
                RowBox[{
                 RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"EdgeWeight", "\[Rule]", 
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}], 
                 ",", "MeshCellMeasure"}], "]"}]}], ",", 
              RowBox[{"VertexCoordinates", "\[Rule]", 
               RowBox[{"MeshCoordinates", "[", 
                RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
            "\[RightDoubleBracket]"}], "-", 
           RowBox[{
            RowBox[{"PropertyValue", "[", 
             RowBox[{
              RowBox[{"FindSpanningTree", "[", 
               RowBox[{
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                    "]"}], ",", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                    "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"EdgeWeight", "\[Rule]", 
                   RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"GraphEmbedding", "[", 
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], "]"}]}], ",", 
                RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], ",", 
                RowBox[{"EdgeStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"VertexStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                   Appearance->None,
                   BaseStyle->{},
                   BaselinePosition->Baseline,
                   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                   DefaultBaseStyle->{},
                   Evaluator->Automatic,
                   Method->"Preemptive"],
                  GrayLevel[0],
                  Editable->False,
                  Selectable->False]}], ",", 
                RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
              ",", "VertexCoordinates"}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"VertexCoordinates", "\[Rule]", 
             RowBox[{"GraphEmbedding", "[", 
              RowBox[{"Graph", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"MeshCellCount", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{"MeshCells", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"EdgeWeight", "\[Rule]", 
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                    ",", "MeshCellMeasure"}], "]"}]}], ",", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"MeshCoordinates", "[", 
                  RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
              "]"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"StandardDeviation", "[", 
          RowBox[{"{", 
           RowBox[{"f", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"FindSpanningTree", "[", 
                 RowBox[{
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                  RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                  ",", 
                  RowBox[{"EdgeStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                  RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"VertexStyle", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", "VertexCoordinates"}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"Graph", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"MeshCellCount", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{"MeshCells", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"EdgeWeight", "\[Rule]", 
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                    ",", "MeshCellMeasure"}], "]"}]}], ",", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"MeshCoordinates", "[", 
                  RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
              "\[RightDoubleBracket]"}], "-", 
             RowBox[{
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"FindSpanningTree", "[", 
                 RowBox[{
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                  RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                  ",", 
                  RowBox[{"EdgeStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                  RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"VertexStyle", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", "VertexCoordinates"}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"VertexCoordinates", "\[Rule]", 
               RowBox[{"GraphEmbedding", "[", 
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                    "]"}], ",", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                    "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"EdgeWeight", "\[Rule]", 
                   RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], "]"}], "}"}], 
          "]"}], ",", 
         RowBox[{"Quantile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"f", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"Graph", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"MeshCellCount", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"MeshCells", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"EdgeWeight", "\[Rule]", 
                  RowBox[{"PropertyValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"MeshCoordinates", "[", 
                   RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                "\[RightDoubleBracket]"}], "-", 
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"VertexCoordinates", "\[Rule]", 
                RowBox[{"GraphEmbedding", "[", 
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", "4"], ",", 
             FractionBox["1", "2"], ",", 
             FractionBox["3", "4"]}], "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"FindSpanningTree", "[", 
                 RowBox[{
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                  RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                  ",", 
                  RowBox[{"EdgeStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                  RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"VertexStyle", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", "VertexCoordinates"}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"Graph", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"MeshCellCount", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{"MeshCells", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"EdgeWeight", "\[Rule]", 
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                    ",", "MeshCellMeasure"}], "]"}]}], ",", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"MeshCoordinates", "[", 
                  RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
              "\[RightDoubleBracket]"}], "-", 
             RowBox[{
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"FindSpanningTree", "[", 
                 RowBox[{
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                  RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                  ",", 
                  RowBox[{"EdgeStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                  RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"VertexStyle", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", "VertexCoordinates"}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"VertexCoordinates", "\[Rule]", 
               RowBox[{"GraphEmbedding", "[", 
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                    "]"}], ",", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                    "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"EdgeWeight", "\[Rule]", 
                   RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
           "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}], ",", 
         RowBox[{"StandardDeviation", "[", 
          RowBox[{"{", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"PropertyValue", "[", 
                 RowBox[{
                  RowBox[{"FindSpanningTree", "[", 
                   RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", "VertexCoordinates"}], "]"}], 
                "\[LeftDoubleBracket]", 
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                    "]"}], ",", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                    "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"EdgeWeight", "\[Rule]", 
                   RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], "\[RightDoubleBracket]"}], "-", 
               RowBox[{
                RowBox[{"PropertyValue", "[", 
                 RowBox[{
                  RowBox[{"FindSpanningTree", "[", 
                   RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", "VertexCoordinates"}], "]"}], 
                "\[LeftDoubleBracket]", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"GraphEmbedding", "[", 
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
             "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}], 
           "}"}], "]"}], ",", 
         RowBox[{"Quantile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"FindSpanningTree", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", "VertexCoordinates"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], "\[RightDoubleBracket]"}], "-", 
                RowBox[{
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"FindSpanningTree", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", "VertexCoordinates"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"GraphEmbedding", "[", 
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
              "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", "4"], ",", 
             FractionBox["1", "2"], ",", 
             FractionBox["3", "4"]}], "}"}]}], "]"}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"PropertyValue", "[", 
             RowBox[{
              RowBox[{"FindSpanningTree", "[", 
               RowBox[{
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                    "]"}], ",", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                    "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"EdgeWeight", "\[Rule]", 
                   RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"GraphEmbedding", "[", 
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], "]"}]}], ",", 
                RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], ",", 
                RowBox[{"EdgeStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"VertexStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                   Appearance->None,
                   BaseStyle->{},
                   BaselinePosition->Baseline,
                   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                   DefaultBaseStyle->{},
                   Evaluator->Automatic,
                   Method->"Preemptive"],
                  GrayLevel[0],
                  Editable->False,
                  Selectable->False]}], ",", 
                RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
              ",", "VertexCoordinates"}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"Graph", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"MeshCellCount", "[", 
                RowBox[{
                 RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"MeshCells", "[", 
                RowBox[{
                 RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"EdgeWeight", "\[Rule]", 
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}], 
                 ",", "MeshCellMeasure"}], "]"}]}], ",", 
              RowBox[{"VertexCoordinates", "\[Rule]", 
               RowBox[{"MeshCoordinates", "[", 
                RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
            "\[RightDoubleBracket]"}], "-", 
           RowBox[{
            RowBox[{"PropertyValue", "[", 
             RowBox[{
              RowBox[{"FindSpanningTree", "[", 
               RowBox[{
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                    "]"}], ",", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                    "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"EdgeWeight", "\[Rule]", 
                   RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"GraphEmbedding", "[", 
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], "]"}]}], ",", 
                RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], ",", 
                RowBox[{"EdgeStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                RowBox[{"VertexStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                   Appearance->None,
                   BaseStyle->{},
                   BaselinePosition->Baseline,
                   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                   DefaultBaseStyle->{},
                   Evaluator->Automatic,
                   Method->"Preemptive"],
                  GrayLevel[0],
                  Editable->False,
                  Selectable->False]}], ",", 
                RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
              ",", "VertexCoordinates"}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"VertexCoordinates", "\[Rule]", 
             RowBox[{"GraphEmbedding", "[", 
              RowBox[{"Graph", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"MeshCellCount", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{"MeshCells", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"EdgeWeight", "\[Rule]", 
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                    ",", "MeshCellMeasure"}], "]"}]}], ",", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"MeshCoordinates", "[", 
                  RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
              "]"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"StandardDeviation", "[", 
          RowBox[{"{", 
           RowBox[{"f", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"FindSpanningTree", "[", 
                 RowBox[{
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                  RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                  ",", 
                  RowBox[{"EdgeStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                  RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"VertexStyle", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", "VertexCoordinates"}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"Graph", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"MeshCellCount", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{"MeshCells", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"EdgeWeight", "\[Rule]", 
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                    ",", "MeshCellMeasure"}], "]"}]}], ",", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"MeshCoordinates", "[", 
                  RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
              "\[RightDoubleBracket]"}], "-", 
             RowBox[{
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"FindSpanningTree", "[", 
                 RowBox[{
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                  RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                  ",", 
                  RowBox[{"EdgeStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                  RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"VertexStyle", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", "VertexCoordinates"}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"VertexCoordinates", "\[Rule]", 
               RowBox[{"GraphEmbedding", "[", 
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                    "]"}], ",", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                    "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"EdgeWeight", "\[Rule]", 
                   RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], "]"}], "}"}], 
          "]"}], ",", 
         RowBox[{"Quantile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"f", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"Graph", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"MeshCellCount", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"MeshCells", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"EdgeWeight", "\[Rule]", 
                  RowBox[{"PropertyValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"MeshCoordinates", "[", 
                   RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                "\[RightDoubleBracket]"}], "-", 
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"VertexCoordinates", "\[Rule]", 
                RowBox[{"GraphEmbedding", "[", 
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", "4"], ",", 
             FractionBox["1", "2"], ",", 
             FractionBox["3", "4"]}], "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"FindSpanningTree", "[", 
                 RowBox[{
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                  RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                  ",", 
                  RowBox[{"EdgeStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                  RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"VertexStyle", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", "VertexCoordinates"}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"Graph", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"MeshCellCount", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{"MeshCells", "[", 
                  RowBox[{
                   RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"EdgeWeight", "\[Rule]", 
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                    ",", "MeshCellMeasure"}], "]"}]}], ",", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"MeshCoordinates", "[", 
                  RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
              "\[RightDoubleBracket]"}], "-", 
             RowBox[{
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"FindSpanningTree", "[", 
                 RowBox[{
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                  RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                  ",", 
                  RowBox[{"EdgeStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                  RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                  RowBox[{"VertexStyle", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], ",", "VertexCoordinates"}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"VertexCoordinates", "\[Rule]", 
               RowBox[{"GraphEmbedding", "[", 
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                    "]"}], ",", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                    "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"EdgeWeight", "\[Rule]", 
                   RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
           "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}], ",", 
         RowBox[{"StandardDeviation", "[", 
          RowBox[{"{", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"PropertyValue", "[", 
                 RowBox[{
                  RowBox[{"FindSpanningTree", "[", 
                   RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", "VertexCoordinates"}], "]"}], 
                "\[LeftDoubleBracket]", 
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                    "]"}], ",", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                    "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"EdgeWeight", "\[Rule]", 
                   RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                  RowBox[{"VertexCoordinates", "\[Rule]", 
                   RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                 "]"}], "\[RightDoubleBracket]"}], "-", 
               RowBox[{
                RowBox[{"PropertyValue", "[", 
                 RowBox[{
                  RowBox[{"FindSpanningTree", "[", 
                   RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], ",", "VertexCoordinates"}], "]"}], 
                "\[LeftDoubleBracket]", 
                RowBox[{"VertexCoordinates", "\[Rule]", 
                 RowBox[{"GraphEmbedding", "[", 
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                   "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
             "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}], 
           "}"}], "]"}], ",", 
         RowBox[{"Quantile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"FindSpanningTree", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", "VertexCoordinates"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], "\[RightDoubleBracket]"}], "-", 
                RowBox[{
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"FindSpanningTree", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", "VertexCoordinates"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"GraphEmbedding", "[", 
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
              "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", "4"], ",", 
             FractionBox["1", "2"], ",", 
             FractionBox["3", "4"]}], "}"}]}], "]"}]}], "}"}]}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7397591813585854`*^9, 3.73978721453088*^9, 3.739789164360635*^9, 
   3.7397931294433823`*^9, 3.7397931784006233`*^9, 3.739793220462802*^9, 
   3.739793443368974*^9, 3.73979349932292*^9, 3.7398081885296435`*^9, {
   3.739809183188961*^9, 3.739809233981101*^9}, 3.739809332523875*^9, 
   3.739826009954589*^9, 3.7398269863327484`*^9, 3.7398275370892406`*^9, 
   3.739830468226183*^9, 3.739831025344611*^9, {3.7398312757579403`*^9, 
   3.739831324300567*^9}, 3.7398313811500154`*^9, 3.739831435836532*^9, 
   3.739832712878373*^9, 3.7398359831982174`*^9, 3.7398367340640087`*^9, 
   3.73983679405587*^9, 3.7398368282188187`*^9, 3.739839322870545*^9, 
   3.7398393651091805`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"fe65da2a-45a2-4c41-9a87-34a9e4b2822a"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.9999244488525649`"},
    {
     RowBox[{"-", "0.9972331657291642`"}]},
    {
     RowBox[{"-", "0.8972506026955027`"}]},
    {
     RowBox[{
      RowBox[{"Correlation", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"PropertyValue", "[", 
              RowBox[{
               RowBox[{"FindSpanningTree", "[", 
                RowBox[{
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"GraphEmbedding", "[", 
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                 RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                 ",", 
                 RowBox[{"EdgeStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                 RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                 RowBox[{"VertexStyle", "\[Rule]", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                   GrayLevel[0],
                   Editable->False,
                   Selectable->False]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                ",", "VertexCoordinates"}], "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"Graph", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"MeshCellCount", "[", 
                 RowBox[{
                  RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
                "]"}], ",", 
               RowBox[{
                RowBox[{"MeshCells", "[", 
                 RowBox[{
                  RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
                "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"EdgeWeight", "\[Rule]", 
                RowBox[{"PropertyValue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                   ",", "MeshCellMeasure"}], "]"}]}], ",", 
               RowBox[{"VertexCoordinates", "\[Rule]", 
                RowBox[{"MeshCoordinates", "[", 
                 RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
             "\[RightDoubleBracket]"}], "-", 
            RowBox[{
             RowBox[{"PropertyValue", "[", 
              RowBox[{
               RowBox[{"FindSpanningTree", "[", 
                RowBox[{
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"GraphEmbedding", "[", 
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                 RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                 ",", 
                 RowBox[{"EdgeStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                 RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                 RowBox[{"VertexStyle", "\[Rule]", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                   GrayLevel[0],
                   Editable->False,
                   Selectable->False]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                ",", "VertexCoordinates"}], "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"VertexCoordinates", "\[Rule]", 
              RowBox[{"GraphEmbedding", "[", 
               RowBox[{"Graph", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"MeshCellCount", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"MeshCells", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"EdgeWeight", "\[Rule]", 
                  RowBox[{"PropertyValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"MeshCoordinates", "[", 
                   RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                "]"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"Graph", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"MeshCellCount", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"MeshCells", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"EdgeWeight", "\[Rule]", 
                  RowBox[{"PropertyValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"MeshCoordinates", "[", 
                   RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                "\[RightDoubleBracket]"}], "-", 
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"VertexCoordinates", "\[Rule]", 
                RowBox[{"GraphEmbedding", "[", 
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
            "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}]}], 
         "}"}], "}"}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]},
    {
     RowBox[{
      RowBox[{"Correlation", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"PropertyValue", "[", 
              RowBox[{
               RowBox[{"FindSpanningTree", "[", 
                RowBox[{
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"GraphEmbedding", "[", 
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                 RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                 ",", 
                 RowBox[{"EdgeStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                 RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                 RowBox[{"VertexStyle", "\[Rule]", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                   GrayLevel[0],
                   Editable->False,
                   Selectable->False]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                ",", "VertexCoordinates"}], "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"Graph", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"MeshCellCount", "[", 
                 RowBox[{
                  RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}], 
                "]"}], ",", 
               RowBox[{
                RowBox[{"MeshCells", "[", 
                 RowBox[{
                  RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}], 
                "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"EdgeWeight", "\[Rule]", 
                RowBox[{"PropertyValue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                   ",", "MeshCellMeasure"}], "]"}]}], ",", 
               RowBox[{"VertexCoordinates", "\[Rule]", 
                RowBox[{"MeshCoordinates", "[", 
                 RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}], 
             "\[RightDoubleBracket]"}], "-", 
            RowBox[{
             RowBox[{"PropertyValue", "[", 
              RowBox[{
               RowBox[{"FindSpanningTree", "[", 
                RowBox[{
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"GraphEmbedding", "[", 
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                 RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                 ",", 
                 RowBox[{"EdgeStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                 RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                 RowBox[{"VertexStyle", "\[Rule]", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                   GrayLevel[0],
                   Editable->False,
                   Selectable->False]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                ",", "VertexCoordinates"}], "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"VertexCoordinates", "\[Rule]", 
              RowBox[{"GraphEmbedding", "[", 
               RowBox[{"Graph", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"MeshCellCount", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"MeshCells", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"EdgeWeight", "\[Rule]", 
                  RowBox[{"PropertyValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"MeshCoordinates", "[", 
                   RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                "]"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"Graph", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"MeshCellCount", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"MeshCells", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"EdgeWeight", "\[Rule]", 
                  RowBox[{"PropertyValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"MeshCoordinates", "[", 
                   RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                "\[RightDoubleBracket]"}], "-", 
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"VertexCoordinates", "\[Rule]", 
                RowBox[{"GraphEmbedding", "[", 
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
            "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}]}], 
         "}"}], "}"}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7397591813585854`*^9, 3.73978721453088*^9, 3.739789164360635*^9, 
   3.7397931294433823`*^9, 3.7397931784006233`*^9, 3.739793220462802*^9, 
   3.739793443368974*^9, 3.73979349932292*^9, 3.7398081885296435`*^9, {
   3.739809183188961*^9, 3.739809233981101*^9}, 3.739809332523875*^9, 
   3.739826009954589*^9, 3.7398269863327484`*^9, 3.7398275370892406`*^9, 
   3.739830468226183*^9, 3.739831025344611*^9, {3.7398312757579403`*^9, 
   3.739831324300567*^9}, 3.7398313811500154`*^9, 3.739831435836532*^9, 
   3.739832712878373*^9, 3.7398359831982174`*^9, 3.7398367340640087`*^9, 
   3.73983679405587*^9, 3.7398368282188187`*^9, 3.739839322870545*^9, 
   3.739839365236926*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"99a6477e-12a5-42d0-b2ea-429b8d225602"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"0.09747799104881778`", ",", "0.13904761904761914`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.13498832851064624`", ",", "0.18961038961038953`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.06941298214517953`", ",", "0.06257142857142857`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"Mean", "[", 
         RowBox[{"EstimatedDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"f", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"Graph", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"MeshCellCount", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"MeshCells", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"EdgeWeight", "\[Rule]", 
                  RowBox[{"PropertyValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"MeshCoordinates", "[", 
                   RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                "\[RightDoubleBracket]"}], "-", 
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"VertexCoordinates", "\[Rule]", 
                RowBox[{"GraphEmbedding", "[", 
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}]}], 
          "]"}], "]"}]}], ",", 
       RowBox[{"1", "/", 
        RowBox[{"Mean", "[", 
         RowBox[{"EstimatedDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"FindSpanningTree", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", "VertexCoordinates"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], "\[RightDoubleBracket]"}], "-", 
                RowBox[{
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"FindSpanningTree", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", "VertexCoordinates"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"GraphEmbedding", "[", 
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
              "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}], 
            "}"}], ",", 
           RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}]}], 
          "]"}], "]"}]}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"Mean", "[", 
         RowBox[{"EstimatedDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"f", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"Graph", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"MeshCellCount", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"MeshCells", "[", 
                   RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"EdgeWeight", "\[Rule]", 
                  RowBox[{"PropertyValue", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"MeshCoordinates", "[", 
                   RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                 RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], "]"}],
                "\[RightDoubleBracket]"}], "-", 
              RowBox[{
               RowBox[{"PropertyValue", "[", 
                RowBox[{
                 RowBox[{"FindSpanningTree", "[", 
                  RowBox[{
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                   RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                   ",", 
                   RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                   RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], ",", "VertexCoordinates"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"VertexCoordinates", "\[Rule]", 
                RowBox[{"GraphEmbedding", "[", 
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}]}], 
          "]"}], "]"}]}], ",", 
       RowBox[{"1", "/", 
        RowBox[{"Mean", "[", 
         RowBox[{"EstimatedDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"FindSpanningTree", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", "VertexCoordinates"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"Graph", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                   RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                  "]"}], "\[RightDoubleBracket]"}], "-", 
                RowBox[{
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"FindSpanningTree", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"GraphEmbedding", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "\<\"Line\"\>"}], 
                    ",", 
                    RowBox[{"EdgeStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], "}"}]}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->GrayLevel[0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    GrayLevel[0],
                    Editable->False,
                    Selectable->False]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], ",", "VertexCoordinates"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"VertexCoordinates", "\[Rule]", 
                  RowBox[{"GraphEmbedding", "[", 
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"MeshCellCount", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "0"}], "]"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"MeshCells", "[", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EmptyRegion", "[", "3", "]"}], ",", "1"}], "}"}],
                     ",", "MeshCellMeasure"}], "]"}]}], ",", 
                    RowBox[{"VertexCoordinates", "\[Rule]", 
                    RowBox[{"MeshCoordinates", "[", 
                    RowBox[{"EmptyRegion", "[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Default\"\>"}]}], 
                    "]"}], "]"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
              "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}], 
            "}"}], ",", 
           RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}]}], 
          "]"}], "]"}]}]}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7397591813585854`*^9, 3.73978721453088*^9, 3.739789164360635*^9, 
   3.7397931294433823`*^9, 3.7397931784006233`*^9, 3.739793220462802*^9, 
   3.739793443368974*^9, 3.73979349932292*^9, 3.7398081885296435`*^9, {
   3.739809183188961*^9, 3.739809233981101*^9}, 3.739809332523875*^9, 
   3.739826009954589*^9, 3.7398269863327484`*^9, 3.7398275370892406`*^9, 
   3.739830468226183*^9, 3.739831025344611*^9, {3.7398312757579403`*^9, 
   3.739831324300567*^9}, 3.7398313811500154`*^9, 3.739831435836532*^9, 
   3.739832712878373*^9, 3.7398359831982174`*^9, 3.7398367340640087`*^9, 
   3.73983679405587*^9, 3.7398368282188187`*^9, 3.739839322870545*^9, 
   3.7398393653067956`*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"202c0183-8701-4629-aef3-7f8689dda074"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1.2599210498948732`"},
    {"1.5036945962049748`"},
    {"0.6731938882664044`"},
    {
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"Mean", "[", 
       RowBox[{"{", "}"}], "]"}]]},
    {
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"Mean", "[", 
       RowBox[{"{", "}"}], "]"}]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7397591813585854`*^9, 3.73978721453088*^9, 3.739789164360635*^9, 
   3.7397931294433823`*^9, 3.7397931784006233`*^9, 3.739793220462802*^9, 
   3.739793443368974*^9, 3.73979349932292*^9, 3.7398081885296435`*^9, {
   3.739809183188961*^9, 3.739809233981101*^9}, 3.739809332523875*^9, 
   3.739826009954589*^9, 3.7398269863327484`*^9, 3.7398275370892406`*^9, 
   3.739830468226183*^9, 3.739831025344611*^9, {3.7398312757579403`*^9, 
   3.739831324300567*^9}, 3.7398313811500154`*^9, 3.739831435836532*^9, 
   3.739832712878373*^9, 3.7398359831982174`*^9, 3.7398367340640087`*^9, 
   3.73983679405587*^9, 3.7398368282188187`*^9, 3.739839322870545*^9, 
   3.7398393654150934`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"4569bb07-0748-4069-a642-5f47088552cf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prediction", "Section",
 CellChangeTimes->{{3.7397328398776045`*^9, 
  3.7397328419094267`*^9}},ExpressionUUID->"9b713752-be07-4f11-ad8b-\
52a35d8adfa0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Find", " ", "nearest", " ", "points", " ", "towards", " ", "the", " ", 
     "surface"}], "-", "tNow"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tNow", "=", 
     RowBox[{
      RowBox[{"Ceiling", "@", "MaxTime"}], "+", "0"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"precision", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tNowSurface", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Outer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", "#2", ",", "tNow"}], "}"}], "&"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"xMin", ",", "xMax", ",", "precision"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"yMin", ",", "yMax", ",", "precision"}], "]"}]}], "]"}], 
       ",", "1"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"for", " ", "step"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"5", " ", ":", " ", "size"}], " ", "=", " ", 
      RowBox[{"22", "*", "10"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nearestPtsIdx", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Nearest", "[", 
         RowBox[{
          RowBox[{"ctsSelAllJ\[Lambda]", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], "\[Rule]", 
          "\"\<Index\>\""}], "]"}], "/@", "tNowSurface"}], ",", "1"}], 
      "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nearestPtsCood", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ctsSelAllJ\[Lambda]", "[", 
        RowBox[{"[", 
         RowBox[{"#", ",", 
          RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], "&"}], "/@", 
      "nearestPtsIdx"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"chosen\[Lambda]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ctsSelAllJ\[Lambda]", "[", 
        RowBox[{"[", 
         RowBox[{"#", ",", 
          RowBox[{"4", ";;", "5"}]}], "]"}], "]"}], "&"}], "/@", 
      "nearestPtsIdx"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"chosenCoef", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ctsSelAllJ\[Lambda]", "[", 
        RowBox[{"[", 
         RowBox[{"#", ",", "6"}], "]"}], "]"}], "&"}], "/@", 
      "nearestPtsIdx"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dist", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "2"}], "]"}], "]"}], "-", 
            RowBox[{"#2", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tNowSurface", ",", "nearestPtsCood"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdfAdj", "=", 
     RowBox[{"Exp", "@", 
      RowBox[{"-", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", ".", "#2"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"dist", ",", "chosen\[Lambda]"}], "}"}]}], "]"}]}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdfAdj", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "*", "#2"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"pdfAdj", ",", "chosenCoef"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valueSurface", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"Dimensions", "@", "tNowSurface"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"valueSurface", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "=", 
     RowBox[{"tNowSurface", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"valueSurface", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}], "=", "pdfAdj"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"img2", "=", 
     RowBox[{"ImageResize", "[", 
      RowBox[{"img", ",", 
       RowBox[{"{", 
        RowBox[{"370", ",", "224"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plot6", "=", 
    RowBox[{"ListDensityPlot", "[", 
     RowBox[{"valueSurface", ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"ImageAspectRatio", "@", "img2"}]}], ",", 
      RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"ImageDimensions", "[", "img2", "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", "None"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"ImageAdd", "[", 
    RowBox[{
     RowBox[{"ImageMultiply", "[", 
      RowBox[{"plot6", ",", "0.5"}], "]"}], ",", 
     RowBox[{"ImageMultiply", "[", 
      RowBox[{"img2", ",", "0.5"}], "]"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.7382429132887745`*^9, 3.738243001770466*^9}, 
   3.7382430426771708`*^9, {3.7382430837867117`*^9, 3.738243208444281*^9}, {
   3.738243298176978*^9, 3.7382433023209114`*^9}, {3.7382433325837135`*^9, 
   3.7382434117564597`*^9}, {3.73824347346005*^9, 3.738243485954726*^9}, {
   3.7382479829442177`*^9, 3.7382479841592183`*^9}, {3.7382498781111183`*^9, 
   3.738249879631158*^9}, {3.7382499163284764`*^9, 3.7382499222980585`*^9}, {
   3.7382684583072615`*^9, 3.7382685009986835`*^9}, {3.7382693956732993`*^9, 
   3.7382694587774663`*^9}, {3.7382696434913063`*^9, 
   3.7382696868184195`*^9}, {3.738273273632065*^9, 3.7382732991344495`*^9}, {
   3.7382733352285776`*^9, 3.7382733585075274`*^9}, {3.7382743562465177`*^9, 
   3.7382743827565746`*^9}, {3.7382746412841682`*^9, 
   3.7382746723973217`*^9}, {3.738274759743956*^9, 3.7382747598902397`*^9}, {
   3.7382770026948814`*^9, 3.738277050428115*^9}, {3.7382808493313103`*^9, 
   3.7382808878194513`*^9}, {3.7382809744424257`*^9, 3.7382809765811825`*^9}, 
   3.7382811060691137`*^9, {3.7382823831747985`*^9, 3.7382824337260466`*^9}, {
   3.7382824711644354`*^9, 3.7382825272096014`*^9}, {3.7383231689093275`*^9, 
   3.738323223128379*^9}, {3.7383232778931093`*^9, 3.738323317169977*^9}, {
   3.7383234640889797`*^9, 3.738323464483508*^9}, {3.738323919628425*^9, 
   3.7383239301144385`*^9}, {3.7383239687670155`*^9, 
   3.7383240189713526`*^9}, {3.7383240732514286`*^9, 3.738324095873204*^9}, {
   3.7383243996750183`*^9, 3.7383244327231836`*^9}, {3.7383245306749444`*^9, 
   3.7383245410334625`*^9}, {3.738324698911327*^9, 3.738324700464527*^9}, {
   3.738324735220254*^9, 3.738324779622405*^9}, 3.7383248700393257`*^9, {
   3.738324978688431*^9, 3.738324978985314*^9}, {3.7383250868093476`*^9, 
   3.738325110452636*^9}, {3.738325142966771*^9, 3.73832514331369*^9}, {
   3.738325190894126*^9, 3.7383252279242344`*^9}, {3.738325262436598*^9, 
   3.738325281785678*^9}, {3.7383253540747337`*^9, 3.738325430131078*^9}, {
   3.7383257794416375`*^9, 3.7383257987638626`*^9}, {3.7383259306360564`*^9, 
   3.7383259893014812`*^9}, {3.7383260284556236`*^9, 
   3.7383261382317605`*^9}, {3.738339596783801*^9, 3.738339603956364*^9}, {
   3.738452392735653*^9, 3.7384524551309013`*^9}, {3.739809280609631*^9, 
   3.739809291794672*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"f02bc85c-df4a-44f4-9856-6ea77e4dee97"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxd1UmORcFZhNEQA9bxWEb1QWuYgRt6G4TE2FuIRbGAWhoCV6b1zp3k/RTD
M/j/7L9+/8v//pMk//Onyf+9///1P7//8PPS536l3+h3+oP+pL/oPvfo/Dk7
nb9gp/OX7HT+ip3OX7PT+Rt2Or9gp/O37HT+7g/9wOeBzwOfBz4PfB74PPB5
4PPA54HPA58HPg98Hvg88Hng88Dngc8Dnwc+D3we+DzweeDzwOeBT/AJPsEn
+ASf4BN8gk/wCT7BJ/gEn+ATfIJP8Ak+wSf4BJ/gE3yCT/AJPt//8dMv9Cv9
Rr/TH/Qn/UX3uUcfn7vTx+fu9PG5O3187k4fn7vTx+fu9PG5O3187k4fn+Ez
fIbP8Bk+w2f4DJ/hM3yGz/AZPsNn+Ayf4TN8hs/wGT7DZ/gMn+EzfIpP8Sk+
xaf4FJ/iU3yKT/EpPsWn+BSf4lN8ik/xKT7Fp/gUn+JTfIpP8Qk+wSf4BJ/g
E3yCT/AJPsEn+ASf4BN8gk/wCT7BJ/gEn+ATfIJP8Ak+wef7dz/9Qr/Sb/Q7
/UF/0l90n3v0vT9np+/9OTt978/Z6Xt/zk7f+3N2+t6fs9P3/pydvvfn7PS9
P/gMn+EzfIbP8Bk+w2f4DJ/hM3yGz/AZPsNn+Ayf4TN8hs/wGT7DZ/gMn+JT
fIpP8Sk+xaf4FJ/iU3yKT/EpPsWn+BSf4lN8ik/xKT7Fp/gUn+JTfIJP8Ak+
wSf4BJ/gE3yCT/AJPsEn+ASf4BN8gk/wCT7BJ/gEn+ATfIJP8Pn+7U+/0K/0
G/1Of9Cf9Bfd5x5978/Z6Xt/zk7f+3N2+t6fs9P3/pydvvfn7PS9P2en7/05
O33vDz7DZ/gMn+EzfIbP8Bk+w2f4DJ/hM3yGz/AZPsNn+Ayf4TN8hs/wGT7D
p/gUn+JTfIpP8Sk+xaf4FJ/iU3yKT/EpPsWn+BSf4lN8ik/xKT7Fp/gUn+AT
fIJP8Ak+wSf4BJ/gE3yCT/AJPsEn+ASf4BN8gk/wCT7BJ/gEn+ATfL7//adf
6Ff6jX6nP+hP+ovuc4++9+fs9L0/Z6fv/Tk7fe/P2el7f85O3/tzdvren7PT
9/6cnb73B5/hM3yGz/AZPsNn+Ayf4TN8hs/wGT7DZ/gMn+EzfIbP8Bk+w2f4
DJ/hU3yKT/EpPsWn+BSf4lN8ik/xKT7Fp/gUn+JTfIpP8Sk+xaf4FJ/iU3yK
T/AJPsEn+ASf4BN8gk/wCT7BJ/gEn+ATfIJP8Ak+wSf4BJ/gE3yCT/AJPt//
9tMv9Cv9Rr/TH/Qn/UX3uUff+3N2+t6fs9P3/pydvvfn7PS9P2en7/05O33v
z9npe3/OTt/7g8/wGT7DZ/gMn+EzfIbP8Bk+w2f4DJ/hM3yGz/AZPsNn+Ayf
4TN8hs/wKT7Fp/gUn+JTfIpP8Sk+xaf4FJ/iU3yKT/EpPsWn+BSf4lN8ik/x
KT7FJ/gEn+ATfIJP8Ak+wSf4BJ/gE3yCT/AJPsEn+ASf4BN8gk/wCT7BJ/gE
n+9//ekX+pV+o9/pD/qT/qL73KPv/Tk7fe/P2el7f85O3/tzdvren7PT9/6c
nb735+z0vT9np+/9wWf4DJ/hM3yGz/AZPsNn+Ayf4TN8hs/wGT7DZ/gMn+Ez
fIbP8Bk+w2f4FJ/iU3yKT/EpPsWn+BSf4lN8ik/xKT7Fp/gUn+JTfIpP8Sk+
xaf4FJ/iE3yCT/AJPsEn+ASf4BN8gk/wCT7BJ/gEn+ATfIJP8Ak+wSf4BJ/g
E3yCz/e//PQL/Uq/0e/0B/1Jf9F97tH3/pydvvfn7PS9P2en7/05O33vz9np
e3/OTt/7c3b63p+z0/f+4DN8hs/wGT7DZ/gMn+EzfIbP8Bk+w2f4DJ/hM3yG
z/AZPsNn+Ayf4TN8ik/xKT7Fp/gUn+JTfIpP8Sk+xaf4FJ/iU3yKT/EpPsWn
+BSf4lN8ik/xCT7BJ/gEn+ATfIJP8Ak+wSf4BJ/gE3yCT/AJPsEn+ASf4BN8
gk/wCT7B5/uff/qFfqXf6Hf6g/6kv+g+9+h7f85O3/tzdvren7PT9/6cnb73
5+z0vT9np+/9OTt978/Z6Xt/8Bk+w2f4DJ/hM3yGz/AZPsNn+Ayf4TN8hs/w
GT7DZ/gMn+EzfIbP8Bk+xaf4FJ/iU3yKT/EpPsWn+BSf4lN8ik/xKT7Fp/gU
n+JTfIpP8Sk+xaf4BJ/gE3yCT/AJPsEn+ASf4BN8gk/wCT7BJ/gEn+ATfIJP
8Ak+wSf4BJ/g8/1PP/1Cv9Jv9Dv9QX/SX3Sfe/S9P2en7/05O33vz9npe3/O
Tt/7c3b63p+z0/f+nJ2+9+fs9L0/+Ayf4TN8hs/wGT7DZ/gMn+EzfIbP8Bk+
w2f4DJ/hM3yGz/AZPsNn+Ayf4lN8ik/xKT7Fp/gUn+JTfIpP8Sk+xaf4FJ/i
U3yKT/EpPsWn+BSf4lN8gk/wCT7BJ/gEn+ATfIJP8Ak+wSf4BJ/gE3yCT/AJ
PsEn+ASf4BN8gk/w+f7Hn36hX+k3+p3+oD/pL7rPPfren7PT9/6cnb735+z0
vT9np+/9OTt978/Z6Xt/zk7f+3N2+t4ffIbP8Bk+w2f4DJ/hM3yGz/AZPsNn
+Ayf4TN8hs/wGT7DZ/gMn+EzfIZP8Sk+xaf4FJ/iU3yKT/EpPsWn+BSf4lN8
ik/xKT7Fp/gUn+JTfIpP8Sk+wSf4BJ/gE3yCT/AJPsEn+ASf4BN8gk/wCT7B
J/gEn+ATfIJP8Ak+wSf4fP/mp1/oV/qNfqc/6E/6i+5zj7735+z0vT9np+/9
OTt978/Z6Xt/zk7f+3N2+t6fs9P3/pydvvcHn+EzfIbP8Bk+w2f4DJ/hM3yG
z/AZPsNn+Ayf4TN8hs/wGT7DZ/gMn+FTfIpP8Sk+xaf4FJ/iU3yKT/EpPsWn
+BSf4lN8ik/xKT7Fp/gUn+JTfIpP8Ak+wSf4BJ/gE3yCT/AJPsEn+ASf4BN8
gk/wCT7BJ/gEn+ATfIJP8Ak+37/+6Rf6lX6j3+kP+pP+ovvco+/9OTt978/Z
6Xt/zk7f+3N2+t6fs9P3/pydvvfn7PS9P2en7/3BZ/gMn+EzfIbP8Bk+w2f4
DJ/hM3yGz/AZPsNn+Ayf4TN8hs/wGT7DZ/gUn+JTfIpP8Sk+xaf4FJ/iU3yK
T/EpPsWn+BSf4lN8ik/xKT7Fp/gUn+ITfIJP8Ak+wSf4BJ/gE3yCT/AJPsEn
+ASf4BN8gk/wCT7BJ/gEn+ATfILP969++oV+pd/od/qD/qS/6D736Ht/zk7f
+3N2+t6fs9P3/pydvvfn7PS9P2en7/05O33vz9npe3/wGT7DZ/gMn+EzfIbP
8Bk+w2f4DJ/hM3yGz/AZPsNn+Ayf4TN8hs/wGT7Fp/gUn+JTfIpP8Sk+xaf4
FJ/iU3yKT/EpPsWn+BSf4lN8ik/xKT7Fp/gEn+ATfIJP8Ak+wSf4BJ/gE3yC
T/AJPsEn+ASf4BN8gk/wCT7BJ/gEn+Dz/cuffqFf6Tf6nf6gP+kvus89+t6f
s9P3/pydvvfn7PS9P2en7/05O33vz9npe3/OTt/7c3b63h98hs/wGT7DZ/gM
n+EzfIbP8Bk+w2f4DJ/hM3yGz/AZPsNn+Ayf4TN8hk/xKT7Fp/gUn+JTfIpP
8Sk+xaf4FJ/iU3yKT/EpPsWn+BSf4lN8ik/xKT7BJ/gEn+ATfIJP8Ak+wSf4
BJ/gE3yCT/AJPsEn+ASf4BN8gk/wCT7BJ/h8/8NPv9Cv9Bv9Tn/Qn/QX3ece
fe/P2el7f85O3/tzdvren7PT9/6cnb735+z0vT9np+/9OTt97w8+w2f4DJ/h
M3yGz/AZPsNn+Ayf4TN8hs/wGT7DZ/gMn+EzfIbP8Bk+w6f4FJ/iU3yKT/Ep
PsWn+BSf4lN8ik/xKT7Fp/gUn+JTfIpP8Sk+xaf4FJ/gE3yCT/AJPsEn+ASf
4BN8gk/wCT7BJ/gEn+ATfIJP8Ak+wSf4BJ/gE3y+//6nX+hX+o1+pz/oT/qL
7nOPvvfn7PS9P2en7/05O33vz9npe3/OTt/7c3b63p+z0/f+nJ2+9wef4TN8
hs/wGT7DZ/gMn+EzfIbP8Bk+w2f4DJ/hM3yGz/AZPsNn+Ayf4VN8ik/xKT7F
p/gUn+JTfIpP8Sk+xaf4FJ/iU3yKT/EpPsWn+BSf4lN8+kef/wUwh2KE
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxNnXPYntfSxR/Htm3btm3btm3bTuOkYWPbtp0GbZMmTRo03evav/t6nj/m
uvfMrJk9e9Z636TnnH5fsuZdqnf2uFyurRFdLq/5JjSWy1huzsolcNmch1jA
WBJjSY3FMJbRWCZwwrjBJzLmcwX7JqLWT738xGAC9AtjLJmxsJxTGYtgLKWx
cMSTc9Y3BXXJwCcHkwyM8uH5puQckZ6pOOubmnwEMEmYU/MNMNbcWDN8PzOr
Jo2xSLwvAbtLaywyuajG0hlLj0Ujpv3mYQcJ8RNRp/ooxvJyXx4sMZgk5PKx
/+hwUIB35+eeDOTUu4qxqswUmZkzgEtPz8QhffOz1/z0TAo+Iz2TgEvKDlPT
UzqIyVzJqdVcxY2VYBfKZzYWy1hBY4XgJ6uxOMZiU1uAfGZqMnHOQm1y8imo
yUKP2OSzwG1hY0WMZaO/MEXZRWpyRTmnwnfOKamPQ31cvtk5x+ObnbO+ObD4
xIpxV1HempKZC3MuBKYBe0qDnxbucsFfcWLF4Ez7LAmv1VxWI2nBpaO2KvH0
xFRTHZ6rYXnBlIRjYaXRKNTko6aGsVrwUhNsKZfVhO5pZ6y9sZy8PQf5DPTO
x11OL/XIz7cAZ+FL0zMfOMUzESvNG9MxXyZiZbDMxMpydmLypYfy8JcVnusa
q+eyOqoNF8KWA69YHeJ14KwQ9eXoV4R4XTgUP/WxYvBeD78omF7GGrrs75Sy
zKm5KrishirgO/3rUaudVjRWiXN2/Ap8szNHYebNyjvKUZOTOp0r44u7KvCn
mYozozhrZKwxvHZwWb0UB1eC2vbESxJTTUd47oBVB9MYjkuy2y7GusKzajoR
k846g20Cx7pnhLGR7Ksp+2sCrjF9qof0Uo+afGtxbkJtafCdiJch1pSZxhkb
z5y1mGs0vUeB6caeW8KB+JKWClAj3rob6wHPzeGiNvV1iJXlLeXJtyDeAr8V
/XVPT/ipD4+tjbXhrh7Eda7L3QWZpTb5nmAq0Lci39ac1asyvXtxV0/8iuDK
M1tLdlCXt3Tn3I3aKcZ6u6xe9JU2+sJBY3avnY4JwfWCa/Hcge8ozqPYfwfq
+9CvN+dG9OxI38bE+sCnOBzLrvu77J/tukvad7S1yNhi9tCWXYyhrjOz93NZ
nfTD70vPpvTtx7cp84yhdiwzdOatmk0/M12Ja8YNxo4bO+GyGhjIrqXFCey2
K343OJ1obBLYQeAnwscEeGpBriXfwVgrYuq3wthKenanh/JDXJZ33THZZfXQ
A78n+aGuoBZb40+Bz8lYL/BtyA/D2hITfq2xqczdnTcOYY7B4IdTMxLeFlEz
zWW57o3fBy6XuKx2xMNSY8uoXUx8Opz1xfrQS3WjwfQlNp0+o+k1g1rFl8Ph
WO5YznkM/ljm6s1b+1Hfn+9MV1CX/fEH8J2FDSS2gruW846dxnYZ22xstrFf
4XQc2IHEB8HxL+x4PP4E8nPAiFvxv4q9DyL3C/EJ5CYSmwtPg6lVbjU9BzL7
PDBzya1xWV1Mwp8MZr4rqI+h+GvZ2RpsCvhh5Bdgw4kJf9TYOuILyQ3mHXPZ
12VjV9jhIva4Dp7Wwqt4Xw9+t8vqYjH+EvDrwe1xWV3shnP5e/GXgp8OfgM2
g9gyME6P0eA3gtnAHjfB7zJ6Lwej+ExmX8c8yu8DM4u8cPtdVhf76DWb/Epy
B8itoHYGd8wEswKc6jaz06PmH/7WGVvrtrEtIbueg78NjrcaO0PtaXrqTmnp
oMvqR+dDnBVbzfkQPbfQZx5954M57LIaEf/3jR1zWQ0ov524uD0C9gj4beTn
E1tLfAHxHdhvLqsn6eaNsbfEF4JdzYyHQ+Zz9CZ9XWamdcyyi167iev3v/Rx
kp3rz4JrLquLqy6rg/XgrhLfDW4j+b3UXOe8B38jfTex74PsWbgbcK74TWO3
XFYbwp5ixqvctY5ZnTlPgdtLr3302E/fA5xv0lP40+T2g5e/mbx+Z+jPvwHE
zsD3I+47wW4VO2vsDju/DY/n4ewWsYP0OOsK6kbnc+QPgTlP/TlsG9i7xu65
rC6EuUD/i8Yuuawm7sPnPeyoK6ixu5x3UHeB8wV6XKSHYtKT3/wMBdx259LL
G/p/NvaAnod492G+d8kdcwV1L/8434eu4N8tjuNrl4/h453LakQc/8H5HfiH
7P46uT85X8N/TK9H5P5yBXm/xW6vk7tBTFp4j92k5grvv8r3HefTzPiEu57g
/0Wtej6D46fYGepOg3/Kvbrvg8v+WaSfzaFgVX8WjPLSxUd2+zd2h/gnY//A
c0TDUyS3zZ+jx3NjL1xWK46WQmMv4f4ud3zi/ImeF8m/clkdJDGW1G3vvB+C
Uf53+r2i5jOYf8hdAqt4NNPjC7uVpvz4D8gL/5qal8yqmSsaXCVjOdx2zjvM
rdnCuC1P4l46+ddYWLfVhXLhjIV3W67EfzjOj8B+xR4TC0Oten4j7uS/waW+
3zl/gNMIpu4/ePzhsne+RyNfuOshbw8wcwQwwj6l33e08p0+6vcf/H2gRpw7
uafs7wv9P6CJv9md6n7ybu0lOXr56ApilNd/eCr+o8Dzf8RVHxl8JDDyhVPN
S3rIj0rtJ/gRzm3M47b6EP/iOSq/X/xoS7wL48Veo4Xf0ZWH3p/RlfpkMBYd
vI+a6OjJ0Zl87V3azWcsP/O6mceN70LfydBTAD8M+wpLLhlnR1cp0FZMt9WE
o6UYxMJRL1wsMA5WvjhWLiV9FItNXFr9Ay3/QA+x0Vhct+XmB7E4bnvvv9yt
d8fg7eodgf6pOKek5j96pDbnNOgiIphUnPVVPi541f3JXOHApKZWmHjMpn6R
ibuIxzeWwFhCd5BvD770k9ZYOs6R8eOjIRe59GghCn5UtBCNXFI0Jb4zsgvl
E6ETL5j88JndbX+vxCOXEGx6ejr9S4X0y8h+1aOGsZrUJOYON+/08HXzDuEL
cK96ZKJPQXRSAEsORtooBF+Z0UdMLBOxFNQLlwWMg5Ufm1xh+iiWlXh83p0D
PcQmF5e9xCOuWDbujcHd4ryo2/Ks3qnoX4RzYWri0kPYYuBTgynCuQj57OBV
94zfPfrzrDhaKMb85ZgpJ/vVO3IZyw1/wkbmrkTEcoPLQZ20o74l6JsWfC56
Opi04EqiA+miNPw5mijNTuQ3wS8FXnXSrn4mtM88bquTRFhuYrK85KSnWmhB
mpGWHZ11MtaZ2UowTwnuSc/suXhzfmrUR5ooY6ws+ysfwmtWfN1ZELw0U9tY
HWqy0EN+XfgthO+cC1JTD07rclcWeojfinAgvuuz+9rU1uKOTMxamq/8CtRn
w8oTq8tdhemdnXhR4vU41+M+WQPu/cCfgfo7VU7m0t8zfjG2ythEY5XZZ072
3NBYI/gSd1XBqK4NuErEqlBbmdri1FehLjf5KpylHemmMf2FqcYemrILYfrh
K1fdbXXTmNqSxPPSQ1oZY2wsWpCOHA11Yec18WvRtzT3lOCtJZm7OLtrxH0l
4VVzNeOsb3OsHLEK8NXSWA+46O622hH3XY21AN+cuGLdOHeD5xb0KE99PeI9
jfVitvr4zrkHfhfuqkXv2sRaua1uKmAtidWnv+pbw20lsK05t8Zvxd6asYve
7KsX3Ku2rbEJbqup7uxQuD6cG+L3Y/d9qW/IW1RfxR3UVTu31Uc7/Lbwrlh7
+vaFp7701LmD22pGWGliHHtQvCM5xZcZWw6uPXnNNsNYf7fVi3Q0Br8p+c7U
dyE+gL00xW/GzO2ZtRGzNob7ZtSMhyfNNxDule9GTrucBD/a6SAwA8F0BdeC
XEviE9i/YoND+G6JP5Ge3cHrWxeM8kOMDTU2DF57gp/EfAOYYRwzdAGj/GTq
W9NvKOch8NeGvsJNgf/W4Jy7JhMvx9v0szDVbbUzBesNpg+5aZx740+Hq77w
OtLYKHgZATfTwPUlptxw8O2pmUGf6dR3JC/drGAHY/HH8d1rbJ+xlfAj3Frm
mkKf0fRS/43GZtJHWluGP4td98cfwLc/dSOY0flZmMZbBoKdxd3jmW2222pC
+QnMpz8HVsOd/jyYA2Y2mPHgBpEbTFx1E4nNdQd1Mxh/FT0nstMFxhaCUX6e
sfnEHT1MYpaBzK4Z1rG3tWCUX0P9UPrN5zyPu4bRdw11U8jPD7lrDXH93tHv
/GLMN4IeW4xtZdZFxJXfwO6ng5Nm2sLpYmNL4GEqs4+gfiRxxdZzXk+f9fTV
WVo4aWyT22ppHxzK/5W9KC6N7OW+0dzflvcNp+66sRtgloJTn5ncM5t+v4Lf
z10zwc0CN4P5RvGOxbxpMf4Bt9WI6n/hrNgh+FoFN9rnNjDKH3Rb/Wxhz1vw
N4OfS81h+hyi5hA9t8HpPHoeJL7d2A631cAxdn6UvnN492zevZm5V/L27fRU
7zXce5izvkc467uW71HO86l3tL6AObYFTM7YvICNK/YbvGu+48Z2stPf+O50
B/W0y9hucheNXaJ2HfXr6bGB7wnOJ+BvA/120VO9ltJb5z34p4yddgf1IH1d
Jy49nMQeE5O2/jT2F/lT1Cp+k71uJqa+t+D9Jv1vgDnJnJo3hsf884axTB47
32Lm3kyPM/B8gH5n3VY3Z+DsnLHz2HZit43dcQf1c5vzFuqlsbvwewc7DOYI
uXvsfwccPGD397nnArmDzHWbmbYw+wVw5+l5OKSvehzle4zzBe7ZAf4e8Zu8
fT862Mlcx6l9wB3awwvyl9nhQ2OP2PNVeN9N7QPyl6m5xPkKtcfJn6DmCj12
k5cvXXwz9sRtNRHOcBjeY/cg7p6SO+UOaugJOfW6xkzShXTnaOs9776Br/MH
9vweu0X8Cfec5q0nmfkx50fwIswz7Cyx55yd2HP2+BI+zsPr326rEX0/cn7O
voX/BLcfsbtgzoN5CZ/C/eO2Gt1K7T3wyn2Gl/vgPnO+zXs/cP7ALJrxldvq
5hW+c9c/1IrX34295nwR/xVf+V+49zN7OMd8qrlM3UNw/xJ7gwbkf2XP0kIs
w/93831n7A84FvatO6ihK/gPqX9E/C1176hTTHpKYSylx/IkHn8Yi+ixe4jg
sRr4Tu4/uHlG7+ge+ztG+SfMKE1Ja45e1eM9vdTzPf1+0PMv5njPWx+HvPcx
sWfg/4MbzRfJ2E/mceb6iSbcHsvBS/DCfuQbmbOw+h8BCx/FYzUSmbzOH6kX
Rv3+ARfVY9/+hff/g76Ui+axcXEdFf8zM3xgbp/HcvYanXg8ViseZnbuikqt
cF7qXqMr+cJ7qY3OvdHgIzq/9/3cpdq0HjtjZOYX7iuaymIsNtjL3BnG+GE9
VmfCxgSvngGP1dMb/Lf0EWfCvUNvATQQDp2l9tgdpMIioo+U+M65kLHCHqvh
B+xamtGMP/h+587w1KhWOohjvnE5/8AXPg61YXiT87OgGcPwvm/oLS7aUo80
7C4y3Kczlp5zFHxh43msVvSNz1l6S0Otm3gCzEPMDVa5hMQT0DcKd2eAU/Gb
GF593PWTeSOxz9ScU3N3VOaNxjcDZw/3edFKdHI+YonIJ/IE9ZeI+1/yc6a5
kzCP4u2MVTVWxWP/zpGZvcbAjwk+KRpKZiw5OgtDLCl1scBn4ZwZvINVvJyx
rPTWG0qjmzrG6pKL7QnqOys6EKaIx2ouJX4q8tk8QQ3FwS/KPotgqcHHJZ8d
i0csDO9IRn9pvxB8qFcxYznAZ4dv8Z+TXHF4T4OfFu6kiRLU5qQmPbGSfNNR
nwBMLiwhsdycnVjuEF7zGMtLT/XLQD4PmHjcHZ98KTCJyeeBg4zk8sJ3YjhS
rgy5jNSmYZ/aSz5jNYzl55yEHqop67EayISfGUz+kF0nxRf33Yx191iNZKE+
GfkC+FnoI0wLY+XJFfRYXSbhDvUtDIfSVlaw2birnsfqojB+EfIVPEF9ZMOv
z1vrYUXBZydfEctBrBg1DZgtOe8oRq1ylcA7dZXgvpHHaqIhePUoTr6yJ6iP
nPgNwRf3BPXUCIzyVbDcxEqSb+yxP/e5yateOkxLTDlpozr7zEusmieouTz4
DZjDmUG9pZemHqufJlhp4mXINeNcGj8v/arTown4GsxQnZrmHqsF558V9c+U
2rN0UtNjdVEOXF3470afTmBq8HW0pXMtasrRX1qcYGwiuYJgW3qsVlqA6eGx
umgNTxXBtPIE9VEBvzy5CszWndqeHquLHlh94g3I9eJcH78i/VozW23m00yD
uKMN8zhzya/Mt60nqI/K+OK3PRz09lidiNc+nHuDF7YdHCnXl3Mj/Pb0akeu
H1yWgb+y4PsSbwb//bGm1DTg3Q359uZcnRk7cFcH/H7UNoFncdwRq0FddfAd
uVf3DfDYPw/1uyOAP9BjtaAZpxmbzl5bkBvIWZjB7HsQPQcQFy/Slf4luC5w
VAtzYuJf2pxA/ZyQfoPhWBhpsAd7mGxsCrwqP4SYdDEJ7CTwg8m3ItaTeGvi
Q+nZkx7DPFYfQ7E2YNXzF2OrmLsr72lDTVtmmgpP7YgNZ399yGmPM+CqHfkR
5PpQOwJeHf30ocdI4k5+JFz2pW8/eO/M3pUfBWYMudHc3x/8MGZoyx6mMMNM
MMJ2pMcozqPo04m+neFcNbNCch2J9w/JzfZY7QzAH0iPsfQR/4PAzeY8kJ0L
Mw5O58LfOLjownk8vvpsASfuJsDfXOrncP+v3CNeV3usRoSZ5wnqYwj+Go/V
yGpsMvih5Odjw4hNoWYt58n4C8A42AVwoBkOGjvEzKvor/p1HqsRYReCXwTH
0sN6j9XIOmyaJ6i3DfA4gtpFxDYSn069Yovp6fReDN/6LgnhfhT+MvhbSr+Z
9BxNfin3DufuTWA2khsDdha5X4ktg2/5m+FoFrWb2Oda3njT2A1jf1G3nNot
8LwZm0OfcWBWYOOJae+H4Va1Z41tJX7b2B3wK6lRbq4nqDP58+g1ljtWUb8a
vpXfZuyIx2rhMLYmBKP8dmwBsbXUHOW8Bn8HGAe7gz0Ld8xjtaAZpP2D1B4l
LuxvnqAmFuJLB8eNnaDHevCLyO/EFnuCWlpPzQbqxO8uMA5W/hLyJ0Mwu4lL
h9PotZTYbjjdyz6XEtuDLSN2nLpj9N5Ef+nnlLHTnDeF+Gc8Vhe/4m/mnmX0
PgX+JPF9nqBuluOfhX/12m/sgMfqYwX5/ZgTkxbuwLlqnxs7R+wucZ3/NvaR
3FZPUIvyt/E97wlqZRv+RXi9QL8j9NxO/gKYS3B5D8xdcjvAHiV3n9hF8PIf
sOej1N7jXdLXbeL3weykTvdd99ifU+1FGnho7BH9jofghb2M7SJ2AsxDzo/g
5QoYByt/N/nHIZirxPdz/w043k1uL/PtI67YNWwvsYfM8IDep+gv7Twx9pTz
qRD/mcdq4zT+Ge7ZS+8n4B/Dr3jU74jncP6M+d8yk37XHeAdwvw09sJjNfMR
HnWHNLkZ3A3qlI/kdbkie61/i16Kf6L2Dhz+Td+XHqubf+BZOGnhd3i6AOYV
dpHYBepeUnOP/vfp9ZnzvRD/C7u9j/+Aey7S+xwzned7jh0I89oT1M0l/Mt8
32BXiF1jl+88Vifi9V/O+n5l31eok/8Njh7hPwbzjl7f4fIbnJ2Fh2/EH8P/
D/JPqfnBux/y3n85K/aHx2rF0eE7Yk/pqfo/PfbPvRtg/+T8J/4f3PEf9+rv
Sfp7lv58+sn+lLtJn/fE4+n/sITX+h88Vivy3V7LqfLCxQVzyxPUmLTj6CyN
sbReG5f/iT4vuOcVGlHfKF6rBWGimXN0r92Dx2s5foUuonptPip41b2ih7Cf
0ZTyXmqdeDR6Ku7zWn38jv+aGaMw5wtmfYkOlFdNDK/lSfP5vVYHjk6Ui2ks
ttfyE8t8A2CE/QrHMYgp945a1X0jFsYb5Ftf+bHo+Q3OnsPpH+TDGgtnLLzX
cvkDjWiWN8zuZ6//orEf5ONQ/yf9wnEOC7/qFx6cOP8PjYULuSsO8ZjM+g19
/PQE45nJRTAW0Wu1JX0UM1Yc/sRjAu4ND1Z6y2EsPuYiJr4iobP41LnJx+ec
Hq2ko78wCdFQBvYRDVyGEG2lpyYqmkiIntQjEWcnlgg96ZvYG9y1D199M3JX
ZH4movBNxzkT2sqIxQAfk1xmzjHws6AzR2NJ0U1S/CTUZAGjeDJvUCth8LPS
JwtxxZKz9w/8TkiOtsISFy8pjaUgnpz7Arzbz7sVi0P/rJz1zUZdCnrlgM/s
YJSPyzc75xTcKbz+N+H635Drf1ObnVphUnmtrjRjTjSQg3hqctJZA2MNjZWE
5xJwIR0Vg1fpJBc9cuKnpT4dsVzES3iDeklIPDe8l4LPDNxXinN6/NLwmZGa
RPTIw9mJ5WGn+uYN2W9i/FL0ysiMJZinDP1Lgxc2n7GK7Eb7kzbyw31maspy
zoSfH1w+cuW8VjPl4bQc+LLEhS/gDeopGX458FngpbCxImCUL2isEPGUaCAr
9xRCBwWZIylvyka+AvlC1Fbgndm5KyV9K/H2itRWAFOQekf/KanTfKk51zRW
i1mloV7GerNzaUfaagy3jbhH9+WkT1F6ya/stVqpjF8JvhWrQv9GcNmInjpX
9VodCFvNWHVvUAMlub8amKrgqnAuRb4J+WrUym/qtTrJR0x9m8F/U2qbgKlM
z1y8vSGzNQXv9FGPGl6rizL00w7zEy/IPmsba26shddqJD+4AtQ2J16QmGpa
wnsLrDwY9SoEVjttw7wVqGlFTLnWYOt4rTbKMmNz5svPO+qAq02f8iG91KMi
30qcha9LzwrgFC9CrC5nfethRYn1MNbTWH32Kk1JZ215h2bvA4+NwNenh7Q4
xdhUzn3AVKZenPWltg/9e4ORPtoZaw/PwvVjD+Kxo7EOXquZ9nw7kHP8qtQ2
Dqnv77W6aIKv8wD23B9rRrwD91SnVxVm2mHsorHfeEc7cp28VieasTNnJyZf
OukKH7XhYbCxIXA80Gu1I2wX8IoNIj4InltQ34V+rYir1zA4GYrp3Jo7hnJu
zhsHcB7APZqrm9fqoBu+038IteK1OzzXA9sdfHf8GuxNb59kbLLXakg6WGts
nbG5zDvH2HD2OIzv8BDuRxgbyTucvDQiDU7hrL59+E7jPA3O+9BvBD1Hwmt7
+BdmurFZ7GEm+VG8YQax/uCnExsFbiTxGWAUH03tTHr2ZxeKj+HcEX86M0xj
pnbMKlxnsAOZbzaxsXA/m/0Ngh/tdB75cWAGghsEl13IzWH/Tlyx8Vg3YkPA
OFy1BD8BjLDSwUR4HsL9Q5mhM+8YyB5mkZ8Pphu9uvOdyFm9etJ7AbzPx+8O
bj5x9dHPQi3ettrYGq/V3DDqxf9CvqG+9rwYzkbC4QZjG71WS+vgRdhF4BVb
T3w9/E2jfhH9ZhBXr1959yZM55ncsYnzbHCbmW8Hd2quJV6rkyX4Tv+N1Gq/
S40t4zwafwnf0cwxnXlH8o5F1Iylbjaz/UpsuddqQjNt8Vq9iLutxraRXwFm
NjhhxhNbQd3ckLhiK7EJxOaBUd9jxu4be2DsFzDCSg+r4HYe989nhrG847Cx
I3Cv/HYwE+g1ke8qzuo1md472Pt2/IngthNXn8Q+8/cQY0l8VgP6PXaU+fYb
O8D8x9nzLjgQX9LSFGrE2wljJ+H4N7hYR/16YguZazH5ncR34u+mv+45BW+b
2MUeY3u56yTxjejgBHcd5b6T1G+in/ou5buH8152rd6nuesU/lJwi5ltFzvY
wFtOcFZsM/VnOOu7Bb7E/zljB+HpAPmzYLTnFex6H98V4H4hv40e5/lupf4X
+q7C30pPaeCQ12rnrrF7Xquh5dyxgu9ydrCZt5+m3yF6buPO7XwvcL4Ahzpf
5HyBe1eF3L2GmOaay2z6Gfhs7IuxiEZzf5vvB+IP2ecx/OPw+MjYY2qimZro
PquZSyHc6HuZ2GX8K/C9ix4nuOMk50fkr3qD2rpm7DoY3XmK/DUwV6m5Qv4J
mL3khXvKLp/Qax/5M+SekTtN7S5mvsLbpeH7zHqCPdygz3X6PINzxW96rW5u
w98tvrfh4oXX6uY5do7aA9TdhF/hXnqDOnP8V/ArLR2B20/G/vFabR3mnjvM
9Zz++5jPme0OuPP0Vc/fvVZDr/j+DoeHwd8NyV3g7afZ4wP29Jma1+zxA/fd
AvOFXSr/Bsxj+P9K/BJ3C/sv+K9g/oWby9Q/JveN3CPw77xWH2/JfYfnP9nD
dTB/eIM6u4Z/ldw1+n+j9gdv/Y49Jf6M3H+cn+Jfp9+fzHGV2a8wu2J/MY8z
l/ybfN9zvsX3Pbv8Gz5+eq0uxLH+Dwm/IHYL7Ae4Vc7ts+cX+H/TSxjlPD7L
raPXA9S6iYsPr8/yo6981Tzj3c/5/uR8lxk/Mu9HfA+16qnfHRmMZfRZDd+j
7i54xaKYXFSf1feBkH1IG9Kafgf5Qub6Ql9pQXG/z+46jM9yGuArX9zE9Fn9
xPBZ+4qO3sKR6r+Bi8X5a4gf22e1EM5nOfuTPcQxflyf9XVPWPLhfZabxMyd
yGdnCcs86h+LnuohHemO/9BUHHoKH477f6BH521vMc2uWHjuDsdM8XyWJ8Uj
+IJa0TcC2ojksxwI6wIfn7NiH8BGRFvKJeDswo9Er4jkEqIzvTsx3LjJKe5l
H85evNTo7XGZQdxGQzef0Elk7orMzAmp9aCtUsZK+6yW/kFXn6hTLJ2x9OhM
v3v055l+x6k2E7pIwJtyslM/f09LBn9J+bMwBtoLQy4sb01CTWaf1U4m8Bmp
CYBJSi4mcWkhCzxrB9mMZeccBz8b56xgs4J/zc/AG7jXLMmZKzl+VmqFT4lW
UmDh0Vg48CmYJybviMU3C3OH8QX1pl4R2Jf2lsNYLmO54TQBvs4RwabirG9q
alQrvaWB49R808C340cklpZ4Au7WHdJSHnjQvjOgiZTcFYF9Zueu7Nwdj3kT
MWcezopF4R7dV8JYSZ/VkLQUlXwU8opJf02MNfXZv+Mnpp/iZeA8jt9o3Xx/
gMnnC2oiCX5Zdl4GHgvATRni6pOfXFIsH7EsYMpSl4y47qoOrpyx8j6rC2EK
hnCfHL+Cz2quPJYNfAryhbCUxLJTU5FzNvzCYBxsYfjIwozlOJejv+orwY2w
RcAXhXtpoTK8V8Jy+oLaqwJ3qaktSqwq8VzUK1aMnk7vYnCpb/EQXtPii9d+
xvrTLw8905Evwb2puLsamKrkHO00MtbYZ/UkbUinTeAnb0hdNfzs7EVvXGps
mbExzNPMZ3Wh2hq+oA7y4Tdnz82wsuBbGGsJt/nB1oSH5uTlFyBfi7MTk1+Q
+ZvSsxx15eFb+drGWvmsFlpiFUIwytfBChOrSE1rzhXw64JxsHXZs3BtfFYL
5Xhjc2pbExe2ni+oiSL40kFbY+3oURl8UfL1sWK+oJYqU1OFOvHbAIyDlV+c
fPsQTEPi0mFOepUg1pBdSgv9iCvWCCtJrC11behdjf59jPX1WW0p1sFnddGR
b6gvvqXjGcZmkqtGP8UH+KxemuI3o64TtZ19VgPSw0D2PQBrDl5aGATnNant
TGww8RbUK9aFnk5v+bX5dvUFtVIbvzu8dqNfK3rWId8NTA+4HAJmMLm6YFuT
G0qsO3j5w9hza2qHMHNz5m4Nrg3c1+M+7XQW+5AGhhsbQb+2IXhhe2INiLUD
M5zzCHjpBcbBym9IfmQIpjfx/syhGRoR6028H9w3ItYHa0xsODMMo3cH+k8z
Nt1ndabYKJ/VxWi+oX4n7t9obBO5DvSrBY8FwY4Br/mnMNMsdqz5O4MZ67Na
mQOP0lUNameDnwVmNjjVdKGH/LnUDgIv3Dhj431WN/PgWThpYSI8dQMzAetO
rBt146kZQv+h9JrPeUiIv4DdDsUfxj3d6d2Fmbry7cI7hJnkC+qmB35PvpOx
XsT6sMupPqsT8bqQs76L2Hcv6uQvhqMR+CPBTKXXErhczE47wc1i4iPh+1e4
GEXNaN49nPcu5KyYdNXXF9ThVGLqc9LYKZ/V0iZ6LqXfEuLS8kZiS5lHfw/U
n0+Z2J1iy5hrNn2Ws1/lpY3NxrbAgfhcCUZ1e8EtI7aC2uXUzqZ+BXXjya/g
vA3+t9JfmF/gfzt7mA9uO+d5+Fs5z6VmIj1WcXZi8ifxXe0LamISvvru4K45
vHUu362cf4ObHdhC8IvI7eS8EH8XPIh/6WQt/K3FX0PNLjCKrwvheCr+bvrs
Iq7YenY6G97kT/cFtXGKuL6PjT3hvim+4M/CamLTqd/gsxpZwp3qI+1IZ3vg
eRmYPZz34O/mrtPcu4i36V1nmFW5o8aO8YYt5M5y3ox/Hm7PUbOZnvt8VjOO
xvb7rFb24++Db8UO0Pcc/J3zBfVy0Gd1IOwhY4d9QQ1s4/5DYA6CO8B5O/kL
5A9RK/+iz+piDTH1veSzWrhI7QUw++m5krefZbaL4J0+6nGEXf5GP+1wLfH1
7PO4scvGrvisTtaCW0ftZeLrianmKrxdwXaDUa8NYJfD+z643k3dNWPXyYl3
aeQxd13iviPMoXdIf9+Mfae37jhBnz303Ee/6+Cfwv8ecM5dT4j/ZSyc+efG
8Mae+ax2ntJHPW6w55u+oB6Ee875DP4LOD0Hdj+1L4m/oOZFCOaWL6iJA/gH
+d7GDhG7Y+wuXF6g50vih8AeAXMPjPKvyN+hVv7vPquRI8RU85qd/07tKzBn
mfscuUvEdcdRevzHDvTP3W+MvfVZLVwGr973wTt18o+BeQP+LRxeIf/AF9Tl
Mfx3YN4SV+whdz+DO/knyIvn78T1jWV4ju23cWntGzO8Zo4T1D8y9ofPauYd
X/nX+f7pC+rjOv535ngK/iq18qWT0+CF/Yt7NP8XdvyMXb73WX0Io/8nd+Lx
hS+oxX3ghf2JCfeCOtVLQ25qlXsOThhp5YOxv+FZOI/fciMtfDL20Wc18zff
j+Qc/za1L0PqvX6rEcU9nH1+u1sveZ1/p98net5m3g/M/gH/Hph/sPvEPnN2
Yp/Z47/w9hAu/X6rE30DnD+zb+HD+C0/AfI6v6X+C/3+gENh/2K/N7hH+a/w
JE71eySs39YI/wZd+Tjrq1mkE+nO0WIWY1mpU716xeU/y4oDXrgffONwFjYc
eP270vr39vXvY+t32XvmSh1wuSIaSxWwsQj+IPcRzTkSv/tSGEuJ/5F8BPoo
H89YfL/V0k+0pxmFiUhPxeOBEf/SRQJjif327YkwH1pIiO8Fn4BYG2NDjQ1j
lsh+q4PI+JHAJ6RWOohivlE5f8IXPgq18ZnHxTsj8O4ExONT/xldJTHnpOhC
exafyfyW7xjmGxPOyhkrT100v9WNOE5CrWLRiceg/l9MsejMEQ4OsvvtXrNh
ceE7GndERUM+9urnm4Q5k9MrOX4yNBYLnSXnnnDEs9I/K/fp/Dc/gxHhPS5z
5aef9qK3ZDSWyVgOYznZYRr2Hona7OTFVS5judl9Kn+wfw5qU5FzdKh8auKp
8dPSX/fk4e2J4C6dsfTclZt4QjjW3dJVa7/VVm7qE9EvLVpJS58o9IpG77zc
lQc/CrhIzJaGHSTgLbk454Qb1efjnI8dxmR/mf1WQy2MtSSfP2TP0dl1Br7R
qYtJPjm8FMCSUZ8VzqXRf9Ga8BXhpQK7LmSsMG/NQP8M+OmZOTFvKE9dNu4t
6Ld6KohfgJ4p6FuQbwrmKU9tBWbIxjv18xVg9jDECsO9+lUyVpl9irsqxqpy
zoVfHP6KUVcEbnJQn5NYUeLFwKfBUpOrxlvz8P4SxkpiGYjlA1Od3tJVG84V
8XMzYx6+1TinZdZ01Ocll55YCfIl8NMwVzF2kIu3VOFcmXnUqwbnGmhA2ipj
rKzfamuQscHka4KRlqSr0sZK8c1IXWbyBeG2FlaAevEpfUm79dhvXd6vPbSC
xzrEM3BHRvwi5EuRK8mcqqvAvbX9VkO18WtRU4i+tfkWYp6W1LZiBp17MF93
3tXUWDNq1a8LHLUz1p65UnFPVXbdDl4awk0lOK8Mvh48KdaWeDFi9cnXx9c7
GxlrjJUiJl46GuvEPbqvgd9qODvvycG3EphGzFOV2avx7cBZ3+qcO3LuwH0l
qG/HG9tyX3FmL8bMDchV4V3S0Bxjc9m3+Je2urJT7bMJey7Nu/SmmuS0885+
q0vx0By/Fpgy1Kl+iN/qqRXYsuSln25wOhTMEHbZhPom+I2ZoXrIfjtzV0ve
04rvEM7qX4c7uvJ19NaVc3d4FTYTd5Yh1oPdnTP23NgLv9XGMHapfE8w7eFg
BHm9Zz7n4eBHgBkOH/Wpb09uJLl24Hv7rT56kRsF733ZS2MwffxBLTbCb0iu
Ef1HUjua/Y3COhLvRG4M5474jenXlzkaMvskY6uNTcbvSV5z9YN3ffv7gz+r
TfHFkbQm/Y2Hi3HGxvqttjqDF3YAuS7kmxMb6Lfa3WJsKz3G+4N6mmBsItaD
2Hji3XjjGO4aQ+/OzKa+Q/jO49yduglwKm4XkB8KZj7neby9CXubxAwTqVkI
z+N52wowk0P22BN/KjxOocckcsPoNZx+Izgv4rwQzkcQ60W/KfSbCq/CLPZb
LWgPS40tY27lpxGTFpaAXQJ+Kvk+xEYT70t8Oj1H02MGe5mO9QM7khkXh8zX
i7xq+jPTcngaQGwmuxtHbiU7XQFG+VnkHH3JH+gPakj+bL/V0Fm//VkX79Lm
FvqthHdprAu9hN8G1+Jhu7EdcCzsL8w+k1nH8Iax9PsF3Fx6zaPHfPou4Lyd
nsKvIjcfvPxJ5PUe/Wzo52Y18VXM9Jvf6mEne/4N7tbBk/CHja0xtsvYbvgU
F5OJ/0btQvBryK2l1xRsDTH1Xk//ZfC/x9hG9rKBe5b6g7raxXkBcy+kZinY
6fRbz3k9fWbQdyZ3qWZvSG4680xltsW8ZSfnndytmn1+qxd9V/iDujoAB9LH
eXjYD0bYX/1WR7OwTcTErXR0lh4rqVtJ7X4w5+h50dgl9q0dXCB2mL0fov9M
7tjI13n7XmZW3XZmXcXsB5nhIP4heq7CDhI7T+02ZthOv9m8aTPzHIHvc7zv
ObPvZP4rxq7C3Q7e8Ru7vkL8MvhLcKOeRzmvwd8F7gq5deTFrzRw3NhJdnGC
70n2soG84sc4q0b/XpX+HTr9O3iacQ/zXON8NaSXelw3dgOu94K5xvka+XXc
sZ7vOubdxRsvg7/uD2rmlLHTfvt3i5fs/hz+ee7cD/4A55vUbKbHLXI3+d6C
y83gzhC7TVy9f/r1/7jPciJuX8HpXXZ+k7tucMcmZj3JdxPzXmDOV5wVO8Q9
t+Fcud+N3eGOQ9htYneJ66y/z+mfTfJT89pvtXER/xKxy5y133vG7vutPt7C
nbDegMW+Af8azBtw9+HpKP47aq+AF+6BsYd+q5s/4Pode3jMLk6AeYSdJHaC
uofUXKP/dXr9yflaiP8XO7+Of4N7TtL7GDOpbwbzvvTGSgZs7BhvOs1cTzjr
+xQ74w/qTfyLrw/G/oaPM+CekY9nLH7A6keaeO+35w/ghXHT5w4x9foErx/5
foKnO+Q/8tabvPE9Z8XUT5pRTw9nxZxed+DWB7/i+hXY3/kq/5i3n+L+f5jB
H7Dc+vjPVvWWCAG7O2E+Yw/Y5xdj/8LjfXr8Q/0bdPUWvaj3W74Bzvq+o88D
ej+in/qGCVj+hQlnzuEDdg9f4f4RWggbsPmw4FX3iB5fwfwB7hu1TjwcPRX/
zl4e4z9hxjDM+YBZH6KFJ9RoR+JJ8/1AI0/Rwnvy2mekgOVYuslhLGfAYlXz
H5rR75947D5iCD4BenKhO4d35SOBv8V9CQOWa9UkMpYYTUQOWL4/Mt937g7P
/H+RiwQ2AX3c6CYh/bx81TMKPSMT94BTTDnpQT9T+jPwJ7GogaCe9JX/mW80
7Av5r/AYw8SSw3EyNCQtJTEWHXw04ool5ZwU/oRRD/VKRh/FUxhLibbC4Tvn
5Pj67xgigIvG/Pr9EhM9fcViEHO0qPpYxmIH7K6FjcU5FrUxmTEZ8+gd0Znz
BxzF5u4IzBYnYPXyA41EYEb9dyJp0Jm0VclYZbCqiYt24qG/iNQ4+FxwHh8/
ATqIRN987DavsdzwrJo8xKSztGhCdT+YXXenY2dRyaUBm4s+jlZz0y8R38TU
RgGfCHxuYunoqT+rjvA7KC9zJub9VbgnKW/ID0/iKxM4aUl6LghvBQL2z5Ho
cJ6Unvnw04fkM9IrI34G+qt3ZjRUCA6zGMuKJlJwV0HuS44OkjBPYjAFqVev
WPTOwjkz+41NX+EKc1cscLGZLRNzJmUHyfgW4FwkYHWkemklm7Hs7F18FTNW
ld1rp6nBq056kaYczbUx1pZ4ZfZflB5pOKemtgo9cxErCqaaseoBy2eJgP3z
PD1zxeXdcXh3NuZOxdvzMKt6FA9YnaTFioXEStCzBH5xanNTn4cemqEG/FeH
Y81TythkY1OM9WKf+cDWhrtaxjoR64jvcJ6feE1jpeGpFJaRe2pSU4BYabgs
C7/SQDlj5UN2kRW/HJiy4Mpwrs6celch5qnNWd861JWjVz24qgumDvuuQ6ww
/TNxR2m+mXhjTeavSx/hpY9hxoYba8++22E6SxfSXwVjFY3VD1htaBZpSlpr
Q7xBCK/F8IuSc+KKNYSDGuxA3HbgXApOG1NbhLsqMEc2rDyxaszZnnN7eumO
EtzZgfuqE2vEHY3wG3JuTLwye9Hbm7BHzdUzYPWlNzQlrnwX+KoFrjFxcdzM
WHN2r/d2oq4p3NQk1plzZ/p0pm8t+O1qrBtv1ttbGuvBbroHrEZakGuOr/vv
8vtYv5dbEG9Oz9ohfdWjLt96nFtwT3nw3Yh3pbYLd5ThnU35lmFO1bZil9KI
dDYCjtqxd+2zd8Dqb4GxhQGrl57suSd+D/ANqBlJnxHUjqBnb7hsyL3Difcx
1hduxrDz0QGrac3YmnvqcVcrchWobUTvDtw7krO+ozjr25HvaM6NqHc00Zg5
fvK/cdB/R92WGR29Kd8PDXRi3v7stx/8DTA2EGtBbKyxcfDSGb8Ldf3hZjz8
jcO6gulGbgJvF3eDjU1iHxO5ZxC5IexM2Bn070e+BXN1o7/TVz268+3BeRD3
tAQ/gXhz5h1A7wH4rcDr/p70mQTP0pc0NJncJDjTnwtTA1ZbiwJWKz3B9aJ2
IfHexFSzGH4XYSPBTIXT3ux4mbHl8K6aJcTE21Kw0+C1NbMPZV/T2d80cFPp
MzKkl3qM5juG8zRq+4JfQrwfsen40k9H5hzDXOuNbQCjuVcErBZmw4e46wx+
LJysNPYLXMyEj7HUjyPWn7cMJD+L+Cz8OfTXPavgZyL7mBuw/38JJ3DPRM7j
uVvvko6bkF8FZhB9B/Ody3keO1bv1dy1Cn8wuIHMNpsdjOctKzkrNpna1XAj
Xaw1tpG36b2bOCu2hrxw6+BpKraW2Ax2v4HzBmrXg19Hv03MN42carYY2xqy
L523Meca7l2Dv5odCDefd/5qbDPnWfib+M5ih1vovwV/MzaHunnkt9JX9283
9j+ROuWP
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1: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
qbHc9owQo3PtjPxlCCdqaefs9hehUVEY4BTaikeBO7skS1pQQx04XDooArXM
NudYYRuik3mj0nk0XKWcXeIc0It4s9sP+6U7UFlflvl8hHzvQ17+0rJ9OBQz
fmJhQCc2rdS1VLYkHHOy7/NAZh/cDTev8pzejYr46of9a/6nK912q5jCwR5c
/CmuNG7d+v/r7v/30/v//tzx/+sF5zLzKpp7MGdOVUOdXCvcZptcy0vqg/3+
f2Hbh7uwu/yywRYVPoyevCwIlOgDZ3mEdJVrJ+5sDjyRuJKLlMgDXZHnejEe
7ih1brgdvpv9Zm2pZOLPK93Y5B7Sd5u9ctKS26CcrlUnfYOGuyVzb3PPiVB2
WTt+nW8r8ib066fGtmBy+qqN5uIiONpy+WmHhXgenjlJo70RKavjpi/M7cbU
iZzl070FUNGSGLpBb0SghMqLfRc6sfPFsLV3Oh9q01q3xfm34M6zvw93n2vH
n9lGXh7DPLw3OlyZTKci0dkh3jyuFTGfvpYb2PHATCyJ2T2FgSbdo0eunaBh
uhxTZ+NBJk6pp6bXvP/vvQ371ANs6bD9KrtHIov47hsJypwAPtKns97fI7lY
+GtpW3UXE5dPbQicS3K/7JTaMTbhtwPZ95PoJDdOD+VVHW6jw/AM7dFJorek
TFq26C8P5Y8ME78Svb1QPly/kugt6ZvNvb63fOw67O1/i+gNA2wfUWM3uu8e
ybhH9KaY7PVlhOgtmDK/V4zo7fGHwih5orcb8Vd+scncm0dPLjAgelP8fPeG
DNGbnjUlyfx9C4QmWxfGEr3dzcuQ+VfQhl01xsNiuTR02f+RVCd6W3ihfcdB
orcNjBAXk2EmIiiKvrkz+vD2w0uhjX8nvq+mFytsIv5ISzc5RvQ2ahFfIyvT
jZ492vMsjP6nt466MEPd/h7kvgo84rjxf3pTmuR4Ya0LmU8fU56/7m//33o1
n/ceDT2498wpOGRaKw7xJptpE71Z7fOhTgx2IWXticGUeXxUff6Yqkn0Zh3d
4PbraCeU3RKHEkgufr9PunUv0Zv2FYkAwVA7nEMnRbRXMDH/kbTYZaK3OPXQ
8o1Eb5vePpkuFUbD8U8d0mVEb4cj8ht7fFpR1XvayyqmBRdDt7xdTvQ2zTsl
5CTR25j34W+RbY3Ynj/S/jKnG401BWt55wnvb9KInMtoxK6u+bLDfp0YfFj8
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
ypQIEv8DCR+fDQ==
    "]],
  AspectRatio->NCache[
    Rational[112, 185], 0.6054054054054054],
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->None,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{370, 224},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultDensityGradient", "GridLinesInFront" -> True},
  PlotRange->{{-130., -65.}, {25., 50.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7382696881196823`*^9, 3.7382714277253304`*^9, 3.7382733085369964`*^9, 
   3.7382733624290853`*^9, 3.7382743882928*^9, 3.7382744199193907`*^9, 
   3.7382746425698285`*^9, 3.7382746730658245`*^9, 3.738274760799757*^9, 
   3.738276955367224*^9, {3.7382770079026318`*^9, 3.7382770510789237`*^9}, 
   3.7382773454544506`*^9, {3.73828085016535*^9, 3.7382808887177544`*^9}, {
   3.7382809685072703`*^9, 3.738280978598689*^9}, 3.7382811066783757`*^9, 
   3.7382823414250774`*^9, 3.7382824031964226`*^9, 3.7382824349625826`*^9, {
   3.738282487455262*^9, 3.7382825278767834`*^9}, 3.738283240334221*^9, 
   3.738283379259574*^9, 3.738319294002658*^9, 3.738319658814333*^9, 
   3.7383215072981997`*^9, 3.7383225259802723`*^9, 3.7383237356321344`*^9, 
   3.738324045470065*^9, 3.7383241017409554`*^9, {3.738324416074692*^9, 
   3.738324435191289*^9}, 3.738324792580998*^9, 3.7383248715502872`*^9, 
   3.7383249800401897`*^9, 3.7383251196130457`*^9, {3.7383252375901675`*^9, 
   3.7383252828262157`*^9}, {3.738325362330534*^9, 3.7383253868472695`*^9}, 
   3.738325432028458*^9, 3.7383254646600275`*^9, 3.738325771620741*^9, 
   3.7383260029483824`*^9, {3.738326125028567*^9, 3.7383261391589966`*^9}, 
   3.7383261885232754`*^9, 3.7383384138631616`*^9, 3.738338993878039*^9, 
   3.7383390528474193`*^9, 3.7383392444418325`*^9, 3.7383396419760337`*^9, 
   3.7383398760673103`*^9, 3.7383399807199783`*^9, 3.738445231190018*^9, 
   3.7384453468724833`*^9, 3.73844543082023*^9, {3.7384523716753035`*^9, 
   3.738452400604801*^9}, 3.738452456435934*^9, 3.7386017222380075`*^9, 
   3.738601839436195*^9, 3.7386060199677114`*^9, 3.7386061007903967`*^9, 
   3.7386101704144874`*^9, 3.738610718381367*^9, 3.739387345759731*^9, 
   3.7393875305787*^9, 3.739387578466239*^9, 3.7393876558238907`*^9, 
   3.7395734412117057`*^9, 3.739573540667841*^9, 3.7395750608246593`*^9, 
   3.739579491675605*^9, 3.739579541438014*^9, 3.7395804803627014`*^9, 
   3.7395806043668613`*^9, 3.739580729234044*^9, 3.739628965704094*^9, 
   3.7396291459698*^9, 3.7396291836270857`*^9, 3.7396319397975883`*^9, 
   3.7396336710753064`*^9, 3.739649725904478*^9, 3.739649761863612*^9, 
   3.7396497991974583`*^9, 3.739649837505913*^9, 3.739649910463409*^9, 
   3.7396501100965796`*^9, 3.739650528261338*^9, 3.7396505665064073`*^9, {
   3.73965094554208*^9, 3.739650966999874*^9}, 3.7396510683976245`*^9, 
   3.739651114206602*^9, 3.739651152633627*^9, 3.7396512569643173`*^9, 
   3.7396512877080126`*^9, {3.7396514138612003`*^9, 3.7396514361347084`*^9}, 
   3.7396514762759285`*^9, 3.7396518054591923`*^9, 3.7396518656190944`*^9, 
   3.739652216751227*^9, 3.7396525638855352`*^9, 3.7396526219339733`*^9, 
   3.73965477229838*^9, 3.739655992273533*^9, 3.739656032979317*^9, 
   3.7396560640016203`*^9, 3.739657565817342*^9, 3.739657604353163*^9, 
   3.7396577999963436`*^9, 3.739658384118066*^9, 3.7396591620494623`*^9, 
   3.73965939924504*^9, 3.7396599904671345`*^9, 3.739660730571804*^9, {
   3.739661457540019*^9, 3.7396615136759977`*^9}, 3.739661559157057*^9, 
   3.7396615960839934`*^9, 3.739662678432618*^9, 3.739731334877206*^9, 
   3.7397325946779957`*^9, 3.7397326517244315`*^9, 3.7397337932281523`*^9, 
   3.7397340462058587`*^9, 3.739734192789262*^9, 3.739734332416068*^9, 
   3.739735566405017*^9, 3.739758902564228*^9, 3.73978721500951*^9, 
   3.7397891646466703`*^9, 3.739793130157936*^9, 3.739793178758696*^9, 
   3.7397932207483363`*^9, 3.7397934436694703`*^9, 3.7397934997007627`*^9, 
   3.739808188934022*^9, {3.7398091834782753`*^9, 3.7398092342641115`*^9}, 
   3.7398093328133717`*^9, 3.739826010458652*^9, 3.739826987229086*^9, 
   3.739827537442088*^9, 3.739830468595497*^9, 3.7398310256350627`*^9, {
   3.73983127605439*^9, 3.7398313245765514`*^9}, 3.7398313814574423`*^9, 
   3.7398317378971405`*^9, 3.7398327409609737`*^9, 3.739836058580251*^9, 
   3.7398367343883843`*^9, 3.739836794755167*^9, 3.7398368292628784`*^9, 
   3.739839323952955*^9, 3.7398393655398626`*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"08ce1ea9-0cc9-4012-95cb-b34ecfafb3c1"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
mCMELkYOxPCD+XHmXlnWVpvm2jrmOuehPCfHjTWDZntrIKt1hTh3nGNGPx7D
f0oc31svwvHx63AenOPueIvs/hJ54JFlfnNsbLxrqv3p9Go4Q0YtPjjuT7Wh
pjA6nCmB4TXN8abkhycyRbC7rNdRVmv+mNdT7q/bVqVkIkmxSITS2RQlMxEK
JbwUTQXwGgGKw4sHkjbyxtcwJoDj5RT4naRmmfOIE9iPYRuXOvtYkn13nKLJ
CAXA5VDch/t91K35wYIguBAED3zYd0Mu+D83ZTN2isWt1Mo5aKtgo2p4jhrR
OfjICN1uKD/5tub4sA9/MuDDB2vqmYHmPEKVN+KQPMMP1h04xi77n4l/ttAX
Wyv05TYYvr0G8W0luQ9s/xpe/Wvw+XnU9+q2nvbl+ZZTYj9P1xXLnwnH3dLn
5dlQLgt/fx7PHnX1vGfbRTvpOdrOXKX7dZeuDQr1+pUbfW7vmjz5TeF4rMdx
8/pBw+t5DntylVP+U+B4Qfclz9HvFzJ0ZBWMtmbpvCMjdTezem1mQxdxHXrS
XQa7k3SIOQ5PftyVpQv8vB+i/l5r2p+h0/D3nAM5w2se+xSLn/91S+LF+2sJ
8biU+8H6qfw52PyDczzY1/4c32vtn4NwvM9wc49Dd7QO31ohX7IrHA+M5XjX
xPHBtZTD0Co+M68pGpce42WK5aq9vHHmeJI5nq/2198c12fcWEO5kJf10vPZ
JCXjYQqE3RSMucFhJ/njDvLFLeRPrIkfbzLHwe8avHilFMSxXioXvbgdwX4Q
XjuK20FKpG3g+SrlcxbarPvBhjC4EIICkJsapRUwYI1KuSUqZBfBEAfdrDup
lV6mUmCWtnj+Lg/+V4J0o849t9XaD+90/PSQc/DGxlLcwj3Wx6ZYihFD4VzB
h20H3W846HbNRg+aKp4tjL3OArO3lumTzgJ93Jqnj9vX6NP1Rbnvq51V+vqG
jb65Yd9TiuHDzLeJ5D2E50P+3BQ/Z46/03biszl7tf4fbvRjLMM55v15Tx/d
rSxTxXOSdnMLch3D69gZawr1WD7kyZnjt5oRcHyervNc8wDHx3vy7pAnf7kc
L6sccjD8F9M5+sdFta7yOWeWplwZ6ffNHlixXK/n5gXDnSU6bE9LP0Pm+Ju4
77Jmt3luc9SbVvU6liWpvZz1D66fNqs5y/1PzoDhR+1OetPpF6bP+YzYyPPm
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
k3tVzIr+jkO+H/GEHT00b3SmPcvVvXA6s61RM1rOxvGb1ha4bPbCNe4XV7K+
P47jd2SdP8eTKqvp/RG9JxIMT8rPl76m4q/k+xD7y3O80hlnS5W+cYXjLd1g
D+TA7k+Dq6UdqwPcoXbe7+OW5QnlsGiPMlWOy48ViLRiZbmCWM1UlG8YzUCY
izzxFEQ1FYsnuYjjoWAQkvFY5XzDdKxCv2GY9/4IL4V47mI9no7lvXHBcdk3
TjOczT4+45ySfSp5jrvU803ee6/R4oovPt+JOjdthtmO/H422ntGzFru0nNe
SjtyvDP8iHneHdczx4jj+wXZVuUZfjBODLfBXLcFxtqtMNJmgaGcCQazJujL
mJDPZiwL6m0L3yofD+RE9WVpV50NBtocMNLphKVBJxxOOeCYOD6NHJ+2ws6k
Dp4M3hAc77sq9DjWrGQ5eyzkuXRdheXOW7BHGeZjyOXh+yJ7a4QyzB/KTEUd
++e7Q49Qc2MRv5HlL3oeylxEA6z36mEogdc2zgozQKbFgAzXQRQ5TlmRYayQ
zwwtfguWTXA84EBd7gSf3wkevGWOcxaOhuNu6h91i8xhnx8CLUHoohnfRJDv
z704/KzeOJ1z/qBLFXoqJb5Kgmd2mOFNCsONqh6/RBlXeEt9g1dsPvXMs7RS
7KHfLshjOW1PeJy9lfNgOF03yLena0rtmTke5ZlMOrela8FHM/wUnvfZOB7V
+CqZAs1Nf0PqyxcMV3R66Wvec+XPPIUm7y3Q5B/PcdTizR1gcsXA4k2CM5Dl
cgUzqM8zfCsqDR4sbzNVim99LSnwtyRFNSfx31BCVhxaQnEI0U5O6jcMx/A9
cBQrBtEw7U+OQjxCt2HUYn5IREPSGz+pbzyfUSs47mGO9yHHe1BnDyDHE5Fm
VYubmeP47598Ffw37w94YKhVMHxKzm/OVeg1pD7ngr33PZSjTTOKZnVPsuC4
gefq++I6ZHgjdEXqoT2qQz2uY44fjAiOl/gpkuFKv/f2qA0e4/caRL3dmyJ2
m/n+EBVpb7WQ1Vg9yOyerA2vXXbkt6jhdjsy2QVrw27YnXDD8YwTCzk+Y2GO
H04ZYW2kDuZQk88hx+f6rmHh/V6hz8kzn6Nsxf4a/P3ui9kf1OE7Iw95vpTy
cPcHH6nZL6KHpUnkl9NO6J57yPF7as7tYoce2vFvQufAqWY9JLAo45eyfqPI
8EjABCHU5KzHgzbOdyeO+/wO3s/kIU2O5fJR33hek3PfCv53tTg9+P8t+S0B
/P+qhftXrHj9Hl//TP0qtUne5fYfdTRXqHBcc74pM2hrmHkt8KPJVsBx4Y+L
bCvi+E8mO/cf3nYo/ng1jqak/s6erMPPleMp/vmo74Z+VvJ4ahxKDvnpOH4b
OVlro3mf9Pkw/Lw5jtcZwe+c5vGcrGwRv3MVi2aDHno6oV72rghNPshlomoW
ZW4eUMvC1V+F4z2qHnc2t4MBr4UWTwLZ3YrMRo43Z8BdUMhxYniL4Dfd+kPI
8RDyOyQYTruURSHHw3Ge4ySGhyPIcWR3FG+jxO8ocjxKt2EIh4IQCwWY4XmO
F+Zitcn9bYUcp9kfP89u0tkmnXX1420Lvp7BpdkVwRz38r9/t88DXUmRkTrd
frrzTWXvPfVBK7uSn6ueiuAV6c7htF54KlgDyUaYaaO5H22PoZbhZpXhXOM2
eIEcn+y0MbsHUo0wnGlkP/xJv0PUQL7m8eOZHidqZyfqaryV9QQ1+PNxFxxM
u+HlrBuOZlywj5r8aMYqeW5nTf4UWb44dAtm+4WvIjT5VXztm7A2VAebI/XI
bx3vrHg+dBdeDN/l+VLS4XuDDajLjbIHR84IDck5p9778KL7Lmz11cMzvLaN
ZXTQ2oIcb2lCjjdxFjvNwMabTRBtNrM/Hg5a8T2ZlXdzCI7bwU/7l2jPHnnk
XpfkeLEm9wqOY1FPkstHDPeD3hGA0Wefl+NiHr/IU9Fw/JYjjrxzse7+hvOs
FIbTDk0r95oQx3+1uuXc5un09dl3HZ8Hx0XPDM1M/sF55w7OEDgLx29ZyKdP
frwn/gn1uNi7mT2hMlU/fx9Z/tAtfHKdj/Z19oKRWE59KkqvSrAPzFgmWXTf
wjvcTterQnrc6kmCK9TOngrtTfbI8lKFcuCjiuTAH2nlCkSzXLQzgvYpi53K
tIczxRWOCU8lEk9BVPFSEgmuBO1PxoqjFg83+9X5n3Icb+e9i1pvXJxx0u4A
9lVaRb8hzf94g1qOC1/cxhwXuyIoY5zmf7TeuKrFNZ7KisZTeSoZTn10ihbn
3TgDRnUf8UQW9XjkEfTG6jkXa7PfUNRjmPdTjrR94bIvcHfMDkv9qMl7bTCd
vQez2TvIUwvsTrrU2pt0w96UG3awXkxQeWBrEotv6XEPHM16kOGi9pHn21Oo
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
oh0Zjnp4Dvk932WFhW6RYbiEtcw7IUycXbjYeh9W2u7D044HsN75ADY678Hz
rnuwibXRWQeLyPhJZNRAivoyGqGdMg7D5APr2BPnQh0+SAxHnb81YuPdmbs0
tznphJ1RI2pci5yRd8t+brpvg/XxR7A4XAfzw7WwMnoPOWtj9r4k/Yz3N2cN
sI06+mjBiTz2wStiMtabxQAXeeNvngTxfjNWUD4WVH10Yjn5McI7FzxXzz8V
js/YRP8hzf7jtYY8nqMpsUdO3RM3YeZZIOb5sBEe5x7h+5Z6Pudd7NLBQqcO
5tpETedImzfyfGehR145b6W5yCP3+hWOO+VcruS490vjeEKwvDYJ/99D1J3E
Z70JfrWgjrb5OVv8B5mdcsPRLPombC1wEbl+ocnEmePfcnaWLNrZifyn/CzO
EsTnU0bLNUsCas6YHU75tnS+eptzysvltYg+jp9MNvx53Xy2WkszmurztX0p
gqPE9Dp7KYOvWbJ4TcrAdat8HvfapPg8kc4Wef+xyQ60u03M5Z/E8Xweyllm
Mc+jPkaP39PUx3C82k7OUo53g92XRI6HOG+8Wq9KZY6nRa5KCceLeg4LOJ6Q
O5WjkI0HUTt7UZNHTsHxFg3HA9x3SHq8P2GDrqQbutM+6Mt6kd9umO4QWnwO
6zHrcdLiVuQ4amWpxZnj3QZYyj2EtQ7S4fWow5FPWJs9j2CrFzV5D7K9lzxx
PSx0NMFIphE1uQ41uLgdyqIGz5pgGBk+i9cJyjFk/nEWuJPrYMyAH1ukFndL
D5vmeJywPlUPT8bqYGG0DlanHsHhgh1eLaJWXnTD7oINns/psZCdC6iZlzzw
ZhlZvdwMr5eR31whrIisMLxZogpxvV5qkdx2ybNSH/e3vFrwa1ju5Swt4eV4
NDNCTjEfREW7ncdNPLt5MGaGF8NmvK41wiK+f1noMsBYtonzHslzGsf7oxlx
veM5fZ4JKvRWtHkrWo+84KyzmOPlPPIvguNJzlj5l5ok/Nf9MDLYxnM91EtI
ex4o/4rmNelc7RrnddOOZNTjRi9c0FvU/chq6Y3MfsrOErs2RSbsDdSvNWec
4amVWdl31Jzycr2ICfjV7JL75JQ83JTm84Ucr6vA8d9NWfjbgwz8ZMjCTbvg
+g1bmudVaefFN8hxmn+ia0ut5Hhxtpb2Z7vN+ylK97OdH6+rzQFR3iHtFfo4
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
yn1N8KJXcHynHMdHDCVnnKJv3FLZG59xiuxX0uOUb0islnvXKCeLsgaJ44f4
vEP8+AhrH792D2uHZuXxGrE1ZUeOo6aeJz+b5n1i8BJZ/pa98jS8wds33KeS
Rp6n4dWzFGw/icHhUhheP43D4XIMHyc/Jgk7q25YRo4vz1HZYWES38sMhjQc
z/sqAz3I8e5SjvedmeO6qhwvnM+v3Hvo82tyD8ty3PdlcJxZnoR/p12d9R7u
H6e97MRxOse8wHkqRnmOWOhLkx6/ZY/y+ajIShS6XPjk1LfigIs6G/yosxf5
Mh/jnZT/XC33RqZVT4V63i+b3XwGSkylbBSRP35ahivVqjK9rpjpH8TxvJdC
56Sl3orYxUk6/84pGP4lcNx6ao5rPZUTOE7zP6GM1ONtp+J4uf0RPJefjDPL
6YyT/fFYM+/kzKWjkuPRk2eAynI8UKDHSznurMBxpedQy3FDAcf3VY5re1UE
w7UcP1Y57hC70XgHPX48aVZnf8QMp1/2q4hMFepXOUTmHxGnidfI9KPHXjiY
88ALZPgheenI7UN8/vFKBN5vIq9fZOD9izaudy9ystrgzYt2ON5oh82lDByu
xuHNsyQcryXhzfMMvH2ehr01L6w+1sPKnAWeTAdgciQMIwMhGOpDlvdTtRSw
vITj5TzyqvNAQo8LljeqHD+p9zBSwnE7+Es4rsmv9X55HP831ORfN/h5hpPO
9oiD1AvOc+hNJmZ76fliSjI0zpwnH+VHk52/hnx1ykb8ut4K3zfYRCb5R3Cc
5jQrXwsSPMN4mzOtsoKhzrDIe6G5JPy6G9bmD+R4aV/haXoJK3Fc8WToGkg/
c2lfOV2H4nIGNF3E69OdR2rZW77aZE4WctzdWuV5hfXncryNOe4Pp3ge/+wc
T5fhuNjLSXo8x3skWpDjsdPNcuaKZzkD3HM43u5njk9U4PiT7iKOF/Qckq/S
xLt/lL0RzPBijlfpVVE4Tpm1xxNGkSNIxVrcU34On/T1SgyOaG/DEz/PAL0k
tq9G4NVyM+wjz6nnkNj9ivJnUV/Di1Z4v9UGsNOF1SOrG16+6ILdjW44eN4D
++sd8Go9yzr8EDm+vZKG/bUM7Kz4YW3BCoszHpgei8DQUBSGBsJYyPCBUo4P
aDxy6ic/ieOVelYUjndGBcuLew8Vjhf0Hv7TcjwtPo8c/6YhBD+b3JxdeEd6
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
XCkj6jIy/nKTg88mlb71WsfHcZzyDq+bm7n340c6Y0VeUmYV6XLSvnW8/zIj
c61OZvjZOE7zmSHOx7rFs6khkQdjC0kdbmHG08/FOh3/JpdNbs4VK5jFJ/4i
d2+78BrnikqdXTrjI6qVuU1zqL9aXPK64eA+9Pv0dR/Qr6Jw/KGnQ2ry7rwm
b/5y8lU+luM9yPHOmBN6Un5xxtkaRI4HkeM+6I1bUZN7YTjrhbG203F8sdt2
IsfFXrcm/PwNfN517jlUcmsPZd7hwajoV6GMQ+pV2UV9fTBG14B61uQvZ2yw
Rx+P6mBzuBFWBu7B3owJdqbNsD6pg+3HZjhe9nHWIe3RfL0WRo4nJcfTkuM5
6a0oHnlhD/m7ozF4i/UOtfnL/TE42B2DpWdjMPlkBOaXh2BmoR/GZnuQ4VqO
t5bheFHmodp3eFIG+Yf1HX4Kjn/Z/eOFveRc+Lp/wbrYFOXe5Tsyr4o0OXFC
7Jio3INYK/0Vmk9UeslFX7me5/Zpn+dl5Axpdjqju0T+yyMDXDF4UJeXzuOf
dR6TOU7XH0uI/fAr0q++gRz9w+Lj75vneGm/yl2XdnbndMV9h5LjddwXHuXH
tLlZ9HuJHkMv/13p/Qj1rdA5qMgFK+wRvyv1eA1r62RRL6HCY+UxkQdPM0Tk
aX0ndT/t6qPZo3vOD+f4A0+RJg9oNfk/H8e1+4AEx8PIAQ8ywQO9GWQJ1kAW
b5M26MJ/+yPI79G2oMzJOonjTjELVG7HcoEep4yVBvya3+HFwB2e59wv4jjp
cco+3Bl6AIcTBtgZrofDSWK7yK4ljm+NNsDq4D1Y6r8Lj/tuw84M6vQnbjjE
ol4VMdNJOVkJeLeWhLdPieNJDccVj7wt75HTTOee6Ft5dzAKbw9G4B0y/Whn
BHa2RuDJ2ghyfBhmF0mL98DobDeMIsdHp9pVb/x0HG8+O8crzuWfD8fLzuUz
xz913uF5cjyvy2lf0FePwsidEFylPgyH2Of2h817AsfzRWdw1G94QclCVOeD
hI9ATKOzP57nb2iC7x4a4He9R80Rr/0IjpNPc80U4DNNyqaqccThjkNkel2j
nW8qx0v9cWUOs9Z5epYTs29b8r5Kfh9EYc4tnQPTe5W7rjhrcnpvQNe7Xzmn
t6XAA78r/e67XK1FHNfyVnCcn4u8/93s4WuEcjZAPYn38We6j3+Ls55zKhwn
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
s9uiv9ItZw7uleNKvqUx1h9fNJTYwbyPZ6/4eAYi7VCi69xHvgjzm/S3yLDk
1DNOc95w+OMuzODvfAp1Ne0KnfKK2xlfCQuvvb6KKL+x5rBmvPgcD+pyfN4c
PmcOv24cx/VnntQbROVRawBe9s4HzHSlBNcFy6NDHG9DIt9kjieyFYjE8xBP
VyFO2jxVhGSmjJqcqgTpLBbeZjJF1ORY2SLkswWsPGryPJTyOawsavIsVApZ
1OQZ1ORYxTTUsRrFFNRzUeiUY+yrbNRTkI848G8+hizAxypRzqxsVZAllTBs
ozbfroXhPPdz0szahNgjgUU9nTeRPR/3RWblziDCHKdeIOL4PcnxL+ick/Mq
xPM1ZLgDvj3thsdnXOyNPzlrZ1+Fcoffn/dybz7lx7+/qGTIxY7OhxdX4bPt
GfgcrwXfnXfwfren14PcB/QUGf0UGa3Ujzdi8OPNOPz4cQJ+vJWEp7dT8BT1
+E+fpOGnT3NYefj5bhH1OBZy++f7ZXh2vwrPPq+hJq+jJm9ioQZ/0MJq887l
nx404Bk/3oKv77Xg2o0OXLjUFDMOdTNVrOccjjjjHOJ4ZKgHaEvtyTdyXOkB
2tiV4y7meEVyvCg5rvTkZ9JBleNxE8eVHqAAMvx/J8drPJec5pP/ZZX2/fjZ
5xb7zCb3x5UdzjS3lfYxvyUZvY89cvFa3A9EM0lQl7/N56EO7pkhtp7wJDmb
TZ4KcZz4J+aP6zwTZPdMoIjswvJXuado2i+y6ArfSYsf96d5nzH13Xykm+n1
ttPFPsbezznrwlfH32EUxxctOV5nf56uae/zDDGvyu1jwRTMRgqwz+PnXdLa
3ELdPHGe+1I25FSI47MByopX5WMNHefpvLNnWctWhb/TMnnkJo6vKhzH0ucQ
XbpyU6XFOai+mO3pPrOcNHksb+R4qtCSeZU6VgMyxR5ki21I8zlnB/KyCuUO
FLFK5TZXudKEClYVq1ZpQK3agHq1Do1qDZq1GrRqVWjjbbtehQ7tdaOzzloa
uqzH88zxegZZ0SzDdisvezqRN+0cnMM638nCuU4aK8U9nYLjpMdFhlzZ60Z6
nDIrBo5v6jnuZX/80Y5T7uh0SD1ul3kVp9DjlFtRejppbu0lD5YDHl9ch89P
z+HrLMFXm0vwhGZmUU/nTbnfTe7ofMZ5lSz8/ElO2+2GrP4nsvqfvGuZzjtr
8K8v6mr+UD3vfNjRZiDSmee3m6bakjWA777swY2bXeR4S2W5qsWVPUCKFh/j
je/ozji3R2RVtnQ9QJsWM7I2yhrHexYcr8s9y6M4LnqAzByPvhwcl/lDnk2+
UIS/rkU4C076cTY8yZxCPccbnJ1+1yV2TRC/aI4UcUto9hpeH8gnzrF3/gaz
3g3v4n3aBzdNGUKajxIqcsaFdgLpOT4XrMIRWxIOrCeQ+0XkfglO+grcW0M6
nphHvTQ0A5bmMs5wb2pBzkx38fsA8jVmeVb4HvwUfE06h6RrzIyvqHJ83P61
BXm2SdcS+t7vOcVZK11HeNZhKMPXL9LqNA/GnA8kNtO/JfX8iDNJjeMLQZph
XtM9ZsqCq5nw3thawt/HkuNxkT9Ual1qciqapUVM17jeN7KdPZg++NJCk0dy
eo53uTivQhzX5VWyBo63keNt5DgxvMVVrtRkXqUhOV4f4jiznGesVDiv0irF
oVNJCz1exfulCLKiiBynubV55HiOzzrPYZ3vZHh27fm22LWs6XGtF0hwXGTI
LTmOpXFczMr69rTcB8S+ilPMVkGGPznn5hw55cepHl90wsPzS3Bv+xR82j0J
j86swpPLTvjxmg91+Lj9bjSHnFhu5Pg/UXf/6/MK58gFy5HjX7WQ5W2RJ1fz
K3J+1jcDwXSuAfwL69mjDfjqXhdu3mzDpcs6HT6kxU15w0m98a7RG9/aZbYK
MxyrJznelRxvDXHcIzieseJ4aIjj4ZeF43PKDK0q/H4pC39e9SFvJuV4XXfW
2eBstOKDE79If4osel3mGdvs2dAckjdkPvENm5OvG3TuxmecoQpM+TLMNy23
QjOqSnDMkYKjzhycIu8ggJymuemhPBzzJ7gnn7U5Z1KIvx3W3pR9pGsLnXmS
JibOj8+cmDle43NI0vp743gPr09x9nTedXg5W38A/z0oq0L7juhMmGavCM1t
znk3OOtzMpgf0uOLeC2ks076Pkuca+zI+6baJXO4KDm+oud4fJjjypkn6XLq
27dLplOehcqZFLMSFca7JMuFJt9QNbmaWWGO1yCVq0EGuZ4tdFiT0x4gUU1k
eRMKWMVSg0vkVpDlWFWqShV5XoV6pYIsr0CzWuZq1Uqoy2n2eBHa5RT06nnk
eA4aWT/063Hu69yW+yRONzNwppWGs1g0K+t8OwkXJMcvW3F8I2IxY0Vw3NAL
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
2uwVw/7OFudWRmUP66UclDNRaJSyyPAKc7zHWpzmZ8UhlJmHUskJg0YaOZLj
HDnrceJ4Jahy/Fw7goz3wnnUjVeQRXqOX0Mu3dhQ+oFC8EnPC7daNtbj95Hh
Wl+nW+hx2depzlqhOStnHfBgYx6+5UzKGnKc5h9Kjl9UtDjtldCx/FpYanJi
eJzr6c0oPKW9neyVp5HnMXh2U+7xVOdnZYf88p/vpuG72xn45HIOLp5BLm9R
D2YeC/mNXD67jYWsPrsjvBWN31YMN/spcpfySC0+Yr7hSE/FPtJT2dMZ5xDH
Y5aZw5eV4/8XOS7OO6vct//ruRL8bqHE2fK/rabgA1eczwvpTFHkxJvce047
JJS9y6TP6dxxhvfHV3RVZZ0+yV5lbZ5KVXgr5txKZJjlpLOJ2TTzkM5mOcdI
DHeK2VWkxXkeocvLfvx7nCX08Xwvvo5wLrCp5g7ndHmVBe69F0ynLAzNpqXX
oDkqdC3Qc3xR3Y25ASfx3+pkMC089Unzhnvg+Gh294aKfJVTzgwcX43DyfUk
anShz9eGzjdN81Um4XiSamDBcMFx9lUSguOO5DYyfIv3UIhdQmLObUru9EwX
uzzjlrhOXotV9rBRLeDfcgwK+LfarhYM+5Ypw9KpJSGZX4V6xS/7gXJq9vA0
cnxb5XgaziBnmpUl2KitweVeUPR1So5f7lB+RevPp9zKx20b3GWOj59hK2at
SJafo579NXiwucQzyTWO63cE6TW5meVy5oqSXVFmk38cQZaH4Weaiaifv6Ky
PAuP76Tgkytp1N/CFxHslhqc7m/h7Y6iwXMaw7dHMJz9FOPZplmLbw1p8VG9
P3vwVMZ44+POOIcyh3Etq+J5GTlOeyaQ43TW+avZKvyXLMqy/AY//9pCGf6y
UoSTAX3PfotvSQMTN/9mt7Hefdfl5n79D91h5GuIi3p+poJFnQZv6vruTTpc
rYbIknuM88nNffg0s/aQ3P1Mc7wpf/KWQ9sPJMoj5oL7ojwjlryV991ezpd/
5ImgPk+Ks0lmd1NyvMvXo/34eyzwDrwK58bpdWgmFv2uh+R8Wr23IvyUHj+f
Pn/QF5fZ8QkZ/kIcH2a4KLzWBPF65cfrFe0I8uT5PcdqrKVjt8Zx3i0RG6HR
4xrH6b7CeO4HUm8lx2mmOXO8Lzie2kZNviPOPLMD7g3ivXCy9HNvSZeX5Qxy
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
+6KvDKv4fo33Nasc32GOc6WVOq1y3JvZYc88jpqccoj5fBHCfh9UK2XDjiDi
uZY9LOs4XkSWFLXMCnG8EuZ+IP3sw/PU19lOmGaRKxwnbe6HC20bsn6de4Fu
dRzw2WbIsFdiUm/l+3PEcg88IZ5vLyHj11RN/j35KyZN/uRKCB4jy7+9FBpi
+VOsJ8jwT84gS5GpA8rC4899egPZi78DcZwZPEgJj3xM7ej1t8pv/fwr5UzT
6lxTYbjFXEPT+WbfYn+bwnFlp7Iy33C4h9O8N2LcjEPTGWfM2MdJ3vjLzfFh
z1y9nSkyxxV9Tgx/bbYovHNmfIl9Fpp/S32g1GdPfgTlEulMk3TwB+SjeNO8
g2ifwyo33uC8+JQrzflx8tRptguxVZyNDu9XVso8j5a+lnSwMmdFPV/V8V7P
8VOS42+Z9DjfYr3n1s48T4UL7Jkf9ad5X8SCumezrXoqdPZJOl7MXgxypkY/
83AvHH9xhj/vrHGRWVkbM1PFbsiO67IqXEqffg/W8L+tI9Edy3G3juNU/uw2
RPIDziGmMiXweb1QQl1unr8iWE6aXOnPL8Kgod8NpNPjBo6nR86wvbYh9gOd
aa1BpzqFHzt5/uGtrlPluLW34rHwVqQmZ45ThtwFP2B9s7mAtw6DT67lyQXL
v7mI2v+MSZdLr/z+uTCc7Ym8HzGWmUvsVSuhsZkraVEJa36PYzjPFtd74nqG
m/LiI/ZFiFnj2h7OntTi+h1uek/Fuhd/dG58nDf+n8nxCjObzj/ZV+F9cPI8
dK4Mv50XHgwzHrX5X1do52eVvXHas0y+M92SPhZnm1FkfQnedzRgn1P07WuZ
wwZnDWd8eTW3Ql4IZRcp6zKa48pMQoXRbeb1VLDEHH3T4WDPnDx65ZxTY7/U
48Gc6OeXHH9LnnOSFudrgVPM36KfZ5o8Frw2zYQrpty4xmmeRx7Ms8dzgvKO
UYtdm7tyvPGcPripRu5vG2b4mj6nYsiNi9LPVBH58Q2ZY5Fc57mHCsfpbPM0
Xge2YDnUQo53DJ6KxnF8LL09xHEPavJgbouziMlcHQLBMOSL1aFdcMRy8ld6
dbGvkzjeqsWR9368nxEsR45vsh43ziI/304yxy/yDFuxd/kK6XFk+dmWAxl+
Cr9+Dm72A8jxAPvjn/YDht3LhtzKtvRWdsy5FbvU5MIrpxz51zTnlv0Vjzpv
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
Zc64c3ctbuWpJHfzVOKWnsorjitV13T5XMXkudS43/P/nCrCn2cS8MGCH/bN
B+CD+SBq7hAcWI6i/o7DcUcaZvB9spiFJfe6BUvId3zeUhDex+fTc4T/0pNc
bxp2gLLXsgvHlTlalDnk7Dd54pEa9+2fCpXZKznBu96k70L9pu4Mc1zMaIzx
DFs+J+U5Kt2hXW2LyHHaPU0ZdGP+sM2ei/DFu3DYRz1BAT7zXI72hQ/O/Baz
VlbU6v6bOT54To5vahw3zDfcAntM2dO5w+VI7agMd0mvRXgqGse9Bo7ja9C/
ib8AvuyGgeP0uVCOZiZWIJrLyBwieeVl3QyWHHTKYh6i3ls5S5mVdo5nZhlm
reh6goQmD8HNHvXpR+FGyw1XG+twretAlvtZk98zaHKP6q3oNbkly2We/Nud
VXjUn4MnZ2xi14Rk+ZenvfhzuGGr4mKvYgs5uUVnijIjYmC5gedWGn1Mmdmt
6+8Zmn1lxfC6keGDir7nR+vd3E2L62diWZ9v7uKp6Dhu9FSSBk/FQRz/8sf/
cI7reV436XTiOGn1Grxja8gsSleXR1FK68Wfk+edtJPzpDMDb560wZ9Ru+9b
8MA0sv6UD3Ut9RaRJlfZrGTHd+c43ZJWpqwJeR00y4UyjeSriByL2NdJenye
cpKuFN7vcV5xLlpWsylixviwHl/kHUANQ058eE9Eh89MeWYY9YHiNWPJNCdr
ZQ96nBn+b+a4LTm8A0j1VUwct3HuUOO4XcdxLXO4I3xx5viOieP4/Dj+P4Pv
4chP0Wtx8lyCWTo3LeHvGYBUMQ+VclXbB0c9/NUcNCs5Zvqmosll/vBsOwXn
lN3LnaRhbtY1dW5WiD1yyh/e2gjAhcoS7NRn4M7AO0KTa3PJH1n5KzpN/v1Z
ocmpV/9b7vEUuzy/PueBqx3Jx4oDtqou9sUFQyVPLXluZvkey8BvXa5wN4bL
jKHmp4i+zQ2150fsitBrcTHXcFiLc9Zw5IzaoE6Li96fIU/FYk6tgeNh5Pjn
37/i+KiSHKf64zLNH2yb2N3WMVy/BwiZTHnDQBVOuAtw1BGDd5ad8MaMDf56
ZBX2zXjE3uVIV1YdZiIlmIvU1Jm25r3JWo68zrNeqC+f+uoP+kR//izPSezg
a7Q4nyJ8lTrvIGKmh5savw0Z9aZu57LwWpbUnW5aBlEp5XxzkVle4vzOMcou
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
voF1sxdCXR6C21hGTa73V7zI+gU40zyCz5+BL7ec8NWmC+71nbCNnGxlbdBC
hrfzYu+wxnK7juU23sXQN/DcWp+zRjf4LtY1zG4Tv/W9PUpJfhvPNDUfRfFS
rM41d/dTxmnxCft+dHt/rDyVVxx/Do7L3Ap55H9ZIU0uWE5amPad0exBwXGR
afk9cpo4/htmN72eps8VjtN5p5XWnqQUbgsvpSJ8E3XmVQNO+rIw7Smo+ZPn
4bhWPZjx5uHwShjePGGDw6tRnVf+S3PcmuWWGZUxHLfU4hNw3I4cX44LT9yQ
U0lr+5R5f0RE8cflLs6MtlN5iOOZLTnfUGjxQHbA55lq8V6gDfBSziVaYV8l
kG3ga1TxZ0ni6xchmh9ANNviUjyVRB6vH4EkhBNFSBU7yPIm5IotyGNR/34e
i2az1HiWeRE2+cwzBZc7MfbJz9c8cAaZeh4Zd7HmgCsNF1xvu+Hjnhc1uV/r
15f+CvGcdPmnWzY41zkOlxon4G5vFe62l+BaeQY28quC41TSkxAst+l0uZbL
FrnE3XhuZPr4Mn+dor/1r6959maGW51pmvvuhxg+1k+x2hOhzMMSPfh6Le6f
UIvbUIu/4vjzchz5Oyc88teRxUd9srczXMf3vkXWxcq55wzy/Y9Leo7Xhzj+
GnJ8n3Mvetya46Iob1jXcbwKU3LGynxIavToMMsn5ThdC4jXdO75zpQd3p9x
wmygKno998TxSc8xJ5m1omN4fEJPZQTHDVo8JXzw0RzHj2l2Lf4+yu4f3h2B
DHdzDXOc/HIx33Bn6HwziB9THz55495YFXzxGkQoq5LfwMdob1AUX6Mo9njm
UIsj3yN0BpruMc+DsQIEoznkOPV59rjo7JMqWxLFvZ+1KvSUM892GjmehAvN
AJyruOBS1YUM98DVplvHcS/c6QeQ48htnk+ONcDHug640VqE09WjcKF6Aj7t
rsDdzhJcr85BP7cKTWQ4Fe04Eyy378rykfpczbjsocpW7FZ2sRmrV9J+Jvr5
6Odsy533yo42/UxxM8N381PMZ5ujffHRWcNxnsoqasdXHN8jx4nJ0l95nXv0
LTIrSn8+cvzPK4LjRl9cvs6C8Mf/vqbPjL8Ix1uS402V47zbmTMtZZ41+yIc
17zwNudmPpjzwiHU5vQYsfxl4rhxVq0Vx/Hr8Pd0pzaNO9ykHh+ajaUyfNsw
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
i19x3InjbZGPI88vznFzxkK1hrcCWRPH7yDXb2+n4YavxD0Tv9roct3hd54u
vs/FOn1iuVa3MvtafaXukPZb5n6Hznu7OXN8f2aOGxqyh17D19lilBjel2s8
x7zuczmDr8nCvivHqW6c2OzNIocCBeRKy8WPz8DxkoXjRdpblHrCUL33mD34
eoay6mN4FDqCH/wjzlNu+o6Z4TcVhl+I41L3yZcHkeVSD4KC6cTwhztj/CxA
LB+iJ98Xvnxb8tzKccdsfN+hblzJVGLmTGXZkqlYvfimZIYvVQN/ssqq1Opw
guw+7lfgdNDAr2nPuDqyvMpMP0W2v0eO0x5yu8jxYjEBlSKxXLDSmeeS6TUz
09UsfRZZH6Ol5N/mWpQ4Px/Bb9WDm7PwaX14ZhLDHWrFz+ppqHJcrVHRGH7F
cYPjX6xTRt3m24vlKl2LOiJf8daQ23FLvhLhOc9rm3s8z/kV15D30KP3uAbx
z1t9zldm9eQbFo6z0h3uLztNv8PNc/pxI1+hmkR83glkQLqrr9PX6skpRxe1
h+4cF3OeI1jYqaLKfH9tvtNxT7eZOE45yhEsJw+Rc4fIswPuN/g8Mubs4xbV
pHjFrZMXPy/H75k4LrJ3qmP5cecIHmyTxlzP8jBEHB9Ljg/1fOVJeDqOz1k5
PlM2rjHc4Ljm/TzJJviSDfAk6lCoNpDZdRj3aszuY/x61GvCqI8/HwidDEpw
sl+AvUYKuZeEUgHZWBKc1HxvQ0rNW3Sua+x14Po0Un+/ZXl8PQOvJKb24Frf
KxPDSyrDczaGW/unuOUpO5Y85SwvvpkSuTido/UrjptYbkj9+Ywcp/Wdco2n
sZdnB77abMPNQN5SuxKCH5Dt33oaeq7yhWT5l7KenPrZnm/Oc2iZ68T3KPWu
nYLjG5Py8Sk9+WYaeRBrynoTtVfWIa8JEjXjozOylSNeWzjnz+Pf7U3oUz67
H6ffmY8ewD3/AfzoH3Ku8UOA/PcYbug+/ERqdo7fOYvjLMFw5jhrzF6cOc4s
F/2xuHY85Mxxp1qVOaVWZZZMZdWSqahe3MNqCqYkalCuEcebcIQcP+jl0YsX
md1j/NnJoMl7gI6R40eDAnRagn/5PHrakuFtNa9LIn6KuUU7b1uW/GU6xV3Y
fRa/VQ9uZ3jB5sOda1Omz8Rd9vqRc5vTePHL4bgDy/+AHHfn+2xenHqtkATL
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
2udqkgefzHB7bYo5T6mfkYnb+xlO8uJ0Lq84fskcN7FczHle95TxPS736+T9
l0NmjofC8CyWhZUMnqPsHrxO0h6fHcOLm1hucPya3DtoOTXJjx9yv8P1tLav
2+GEnHzGHrY2jouveS0n8lbbJ8iZ42NFdo4TszdTHVQXtP08vbIGkdb7P1lL
wOJOhWtWzuL4QmwfHuB43vIMpRe/4vj5OV5njseRVYM96bcHZ/vxU16zX4NK
HTmWEhz32zi+y73VthLC91NdC/lyrnFJl/H7EtcuhmWGrtWb25U1e24Hdtv8
t5sHV+YyzQw3r/FxzlIqDgx32afNpSetzYtbGE7n8Pfi+B+J5efiuDrnuSb2
eLvpy8L36hynwvF74Sjvr7COfnk9g8p24VmU+h1aOW6e86Rs5bpnAM/w/buU
Mq8RUntkrSAPF2MVriPn/7ukfMW1ZiXTAU+mK7ju6sknZS5j9uLr8RZn4qKn
1tjw5OkOvAmWYQHlzx+eMc95hB5mHx4ix29sXXH8ohwnHxlMVZirtXpVznPa
83FNtJ7zoEf9bMtcw7LXFnOd1KPFmeMtPO8N8KCXId5tI8u3kfvE/oBUMF0V
GbqsN88rdd75ojXvPoPdDh5c47e1HsXNg9vnNO31hZPrxJ0zcY3h5jU/KsP3
9Lqj34vjfxSWn5/jxnrOrzhfqSM/isiCpMjL9dpD6q+S4v0VxHp76lNLPQ4H
yP4BUM8Vre+KW+0KrQ/6cWcAC0m19lDWj+M1YT5RhRehLCxF67BC64IoY5kp
XxHrNOmaYPXmZo6PWJvI8c3MnszInTw5PV6fP3ts5rqirtDqyel6Q94Mma1y
3IN/34PXpZVIg9d3evF+03D8vq+HHD/gdT8iG7/i+Lk5jhzdSVF9YBkOupLj
AzvDKW/p7tahih68v1fgtfv73TpyUPTaMuUqySZsIr83UMRxYpiP15DWRW0L
5TAo6plL+4XSc6C1Q8RY6zyoVm9i5baZ3TlLfuJeT+jkwadiuKsPPyMTd2D4
esLdiy9dcfw34LjoW0v5CvlyylioFpFrxnnfzig8jRbYi69lB8xxzVc/QDZr
NYZuNYhaTTl5d7VXub4OKNuGN8kKc3whVILVeB1fD/h+4T4r03BczJNSb62J
vjx/IHJ41FKsjsyo4t/egy3HnJw4jq9BfF2vZps8f2nz5NTHHK8HW6k93q9T
5ziOzya9puO78NKbw9d550yOLydoDWdP1o1fcfzCHM/UmOPhTAlazSr67Spn
K1aOE99rtTqkilXotPMwRo6P0JtTRk61h76UZBh67y18TW7ia3MDtR5v8vOh
67hRy9LiPYkoP9+IU7+uOs+H0tpQ4q6V13Z25x2yb43dCr/dPLipplBheLZs
ylFmZviEPX6sDF9zYPjnwPE/AsvPzXEtW9F6rMi6cqpHvO6lvDwBt4Ip3rvz
SbQs+K1LsHgO+UNzmTekLzdlLBtmltP/PwzZOU49VojlxNWlaA2/3+P1lhvZ
3lSeXOvRQrWLtJePO8f38RrRZD0PZOAxfu6YixfxetG1rd0XmUoPOY73R3mc
OE73y/SY48R5w4/j8VHegvyeD5RgOdLgDHwix5NDwXH246Mrjs/M8aaN49up
MrM8X6pwvnJq4bjmz2nNZ65cg/2O6EVO6z+LVVF76ENfzQxLSI4nmsxoWieg
5QhiXRI+L/oan+dGEp9vfI/vR7+/kxZrh9KcbRtr5q2axG6d3wVnflvrwg0P
7sbwmp3hTrUpZ2biuzaGr1rylCVW93fn+OfO8gtxXJ3zXDXy8mubLWRJCb71
VlgPwxXOP3hfZYXjq+jLaR6T1uLb+L1uXitEHL/l78Or+ABe8R7NQ5mtENN7
6JEbyLM9zsYpXzkrW2HRWn/0P6t4f6rxWwhXkecdJWsZGZkL9VbE6wT1x30U
SMBdbxge7SRgNd0y7xOk7Q1EvW1ztDapI/eBs2TnOA7Eak9yD9R9lnk/oST5
tC682a7AAkpw/ESu7Rzb6se3slRz2P93x/Gz1nNO5viuM8dprpNya1qXmaJe
KRXIlyvM8Xc2jle5xnyvTev3K+jHc6gylGs1zrmpl7ngeJ1zFeG3d8GXaUMA
P8t5yTvg643ZTc8Vn/N6soe31Mdzl3MYqm0hfmprh0w1JgWjl6I19zaz2ylD
cfbgEZf5TDeGB0w+vO7I8EmZuGOeEjd78cVPxfEJPVb+aBz/u4ty3IHlX0pf
TnsE0frN28EaLCPvND+u1p28jO3je3ofvtlCTz6B41r/ldvIfOpxOxdX1wHR
Od9Fpg64XmWFPpumds/k+Aben9ZNUt0IcfyVL8dM530+KfuhHIWuE3hLtYak
9XQbn2+Se4HdD0Tx2lHnzEXluJGvUC4+tM91Ugae7nB+4k13zWv2KTtHn05e
fSlch9eBMmzh3zc8+bGN40H8/edhuQboghx37D0+Bcdn6a/y8BOsy7f2yXJf
l2/td2hZl8+evMH59HZS1JFki1W9lvydUq9COpVzncT5g34GVYByldZzVsHr
wHEP/t2dfBvCKD96DRJ9JluVOcJaktZCIMcTXc7WttDDEyu1GhY1v9ZEjLbn
Jua9Hqb24EpduFuWYl9vb/Xh9nnNrZQ7w81evGPz4p+U4zOw/Pdn9WSOXwrL
13tKxtKR/bOQ6Rt78I23Bc9ikuOZgakWnNb50PwleXLTfOeGuYeWJsrKr+Ht
3eCA5yWpRmUVvbioVRnKn9H7oXUGxw+QyX1YClXRz8prQaSKqnEPRdpvjTIN
ep1Rf3D6DEj7PND85dNYBrkVRi7FYRnfo5SFOPW4da4pH3JvQw/t64mfUXy5
fTCv0x9xnywfjRV6sjl/EX15mX1boKj5cqMXIq0DomxlPjbk/lg39b4ql8nx
t5+E44+m5Phl9Dtcm7inm+h3qHpy9uWpMucriXwFem2jVlyrNRQir15Blld4
z6BeJwulqlgL5E3JXIUYLnMV4vh2to08JKYLbSgelPjtydDro8c/o3Vh9BjE
T/Nco8FYrf+WU/2gwW6F33mHHNy2tkepK+SalPMw3Lw3xNl5SkcfB5XhVxz/
jTmu7Nmp5yzrYh/m2wGaj+zDasbw4+vKLa3B/7s1leNKPfm6ZQ50rc/+fSk5
4F6HxHHTuqDcAF8XTVl/eOBST44cT3a4xyBnJ+y7e9J3N2EFffkSenXKXYRn
3xNZOXrsuWQRHkWT8DJRgDV6ndL7blqOUwaPXtyLnOb5TSVT0TlOt/Qc8bX9
ersCz7ZysLBTEuuPcPyEFz9lBZHr9P1CYgi3cExu0lznGRy3svwiHD9P/3F9
f07dk8/OcX0/oKjbHstT7M3p1itL5zhlK8S1MlSrVYXdcr0+9ycv8j4Tw24G
Wu0I7LXTUKhQ3WGV50+1PRI28Xq/GauzJ/fiZ8UtysljTViL0ZxLW8kS8NqO
1/kAegb6ejna5ufKfbZUhioS/bfKE7231cdb+e2ao1wyw619xd3zFIPhlJd9
Uo5PyfLfn9Vnc/zyWK7wfN3Qn7e6cH+nB3OJAefiVpbPJ/b1vipu9eTq9+TJ
X0a6fP7JS3PvQ4XlxF+xp4SbH9/nPTb5s6tpLVCfa7o3+HPfLq8TXcP3HGUt
2rznMn7upnr4tZz4f9qPyG3vICvHybtv8tymyMx9Dv2zuM8hZe54jVoMNeC5
twQvvDl44cng54cK+HNDvYZF66+ymjqAOzRnzByfXD9u9+TTcNxpP6DL4rh9
H4mz9gNSOT5pX7fpMvKWznEzy2vM8h3y5Lkq8rrB6zZPOUcpcp3hETKcfHhz
Nwy11jZ09nJcr+LnTKVh1NpRrQpynOc66XWHn/dW8fMWf+6L4We+2J7gNooy
NT++3pbxWN5ExPMXdYp2VnrkPkacocv9KtzYrfWZNTPcyu8pGH7GnOZZDJ9U
Y6gxXOd4rMvn9ZNzfAqW//6sno7jl8ty7XvNl3fhG08P3/fI35hRe6hxfBG9
9TdbPe6FKFg+sHN8w/j6Ol4X3tC8EPU5zFjW6XPPlT2hTIe1aa1DRM9D/a7I
g5vryInn++jPKbcZiFu+j1HjQjXhWs0hMZ/qySft5+lVRY+Dz4v29pzM8RG/
n5fDTfTkTZgPluHFVgbmfFleI7QcbuD1pc29tILFEa8FfRAcyn61k/urXAbH
f5iC4277uk3m+HT7urlxfLretS77LKdVltOaS1HHHUyWYCddgW6b+N1Edldh
v5tCZkdhgAzfbYeh1AhAo7UD/Q7Vnde4BlxnmlY7HmtwzSGt/1pDhlNdCs1n
LrP2+Dmvcq5CPgKvSVH8PBYVHFtlltv7ApK0XoqcoefcvfcsHvzTMNzNi7sw
PN6V5/SK478LxzVtSElPTiy/ttnjbHslbeb4corWBXXhq4093of5C+uafYtP
fxDswBrXfQ9sDBfqI8fx/Zqh17rcM0jJVyg/p709mdnq+vysdX2QU035vuyv
ciAYn3XOVRw5TuuG+H26y2t+XDkus5U18mqRXV4XtLhdQYYX4dlmCl6iN38d
KMBrf54/n3twDB8Fu3Cd+tZekOO3PhuOT7HP8kwc37Nx3LpHp92Ti5ycfHml
JvZdHvfL0EJ2lxs+aLdjUEd+F+v0dRy5XkMvXOM5Tp1pyYaoC+e1nE2Z3ck+
UHHy4i3OT5bwudMcJ1+/4+TFieM9Ps5FZnzb0b/Sz+gzBdXZEJudvLe6nkfl
t6nnrOM+PpfMcKe193FnjmsMf/NbcfwMlv/+rJ6e45fK8g0Ly2n+E2+/9dBe
PwN9bwi6XUkPkBcdXkt0bbPjynH26mt9mMfX/EZW1pNY+2bp/bNo384uM3uN
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
LF+uCa2wftJ5vloXLDd4/oFZzjwnxui80XguWOTV+USsQm61hATHkOW7JPFe
F7yTDGAmSEbsCZZrPI9LrhDLmakmngt+6YySPNeU0zkumK79TGe2/J20lMY1
7e8kOuJv03NI4XNpoJjj+DxLqLDkGT1/OhaNY3yMeLxhef0S1zLBcW18vKx3
PHYkbTw3WcZ4r7M+8v/RmDLL8XkYvBXPT2jEz996bdKPsTNU2K0d56F+nAnl
cfgctIUMdguF9euW+bi1Y6fz/PfI8XvI3svVyFkZZ7nx/fPS2CQr1y+krPlr
jeWvzvDkxO8HM0qw/BgWFC9+HpZ/So7bWH4BjvtQ88zwD5yhEMtflAyeC/3E
0nj+qkz6Wef5HPJ7TrJ8vmLoNXJbFfO8SvqFeS6Y/jOLeV4TEjz/iUU8X6kT
yz+yDJ4LpmwQY3TeaDyXPGq+k3zSeI7+syUUkCwPSpZv6+995ACzUOMiao94
PmLFJMs1nicUzgoeCY9Jt2mdyYJhxOxiB1mOynXM/GZu0y3nMkOF3UL8NynP
2RO5Tor5PYIWawwVjWcoOgaDYei/6VYynK9jTcFxvxwbD0uMl8ZwbTw3WB/0
8V5jiXNB40yPF9o9UphqiMYxxiwXY2Bcn5TPFqbjxGPsiLHl45TjrY19FI/V
+ndCOrudj5vOL53rv1758XN58kvz4y6+/CFnIEewKFnu5McfSy4/yc7mx4nn
z5Dby475yu/A8k/I8S3UHDF8Jj/u7Mmn8+NmT74kPbmTH19x9eMfLX78g4sf
f6f4cXdPvmP15G2LJ2+PFYYbntzIWQ5MvjKjePN0R/XmQ/ThQ+S58TPVmxoZ
itmjOvnTJPlx6cWJ41XFl9o8qXbN0jguWe63evGmkxe3+nEx/mvyHNDv0eOr
f0/1wfSc6HlnTMd44OzDLceo+/A9zYePTD48MsGH78i/rx37319x/Fws/204
Ljz5GxeOP5WefF6y/PEMGcsjyfLXF+D4ZbD8t+L4C85WPgqdk+PzF+C4yvIV
a7Yi/bhTtmLluFu2MonjVpar2cpZ+YoTy9Mde9aiZsdZU4bszDeTV3XIGOg2
Z+I4el+Zp4QtPN3RGX6iHz/PF8i5g8kcNxhu5fha7SNs1t/z2AZbxtjyZx55
naCxpTGk538xho9nZ/iucf2aluOUl9y16J7r/USOcteqjLOcMha3DOb315hl
zVfU760ZzNTKmqXlK8TnBVmjonKc5kLn5M/nJdeJ0T9OqfvIbcrKV35HT/6p
Oe6V2fhT1DNk+HOZq7xScpUXyO4XMlthyVzFrF9YcxVVv8K8Is5XqqRfOFvR
tID8XpD5ymLNyFeWZLbCqlO+8pElMhb5GZ8+87O0DEDjzzv+3L/FfBLZgRfZ
QvK1hPwa2+j9ruUPLPx83hYKcT4gP8cjUyJS4rO+9vn/kOcd40oOoirJGYKb
7PeP6zIePyql/f2QzBgKMlOp4XPNymxByxQCrBM+TpJ23F6SZDixlsaIpI+Z
HMd1JVOhsV5lifHnc1ETovtuycehx9BEP6e/Q8+Fxi9+xjGK4xRjqx1neE/N
aQzttLVjPVIyFO24xXn16zqF/zaDH3fKwp3v928xHzdn5Zeaj1uzcpuO9IxF
rSFXc/OVrKhfmTUzp6x83pqT/4Ysd+O495I4TnXkr5Rc5YXFj7vl43OmfFzJ
yCuq3PLxX/V83PDmRka+rGTkK2dl5I2LZeQBmZEHlTlPLSO35eRtc04udKjk
5VZ+u8vqua08jyuPa2OckhOT0vg8m/icK6ioNR/WfbjgGbO8KTi+TYyV2Tiz
nD/D4OtDjuGkbHy19pE/K63IeqIN9OXGPKhxXzof9HdpXCkX0Y/TNidqz8Np
XsKeu8tzo+fhR/rxbu8eK/mR8fmD/v5fp5znfIJ6iXql6Fla1BneTxs1h49R
z5HZT1HPUC+kXpEyQs9RLzLG9y9Rc/LrZ/L/5y4o7bEv+jhumkfmkp5L0dcv
Uc9Qc/L7cylr1xzfClarHLdqWWYwr6eUdt/lC3L8wiz/hBwnraNWUWvI8BXU
XFEw/DVqGbWO7CZtSK0hxxeR3aRV1CbrF9ZWRdWv4LHIWxXyIbs1+Vk/Q4BU
EwqyfoJtTcjxHeQCKSQVRlaEkTMRqSgyQ1MMmUSKk5BVCVSSdQopEr6306wT
yJCQ41nkACnHOoJ8W6ggfW+RhGwpIWNIZdYhqyJVZR1AtWOodob0+8pawooi
7fG1v1lsaxLPKce1KoLjdVRBHkOGhMeVlkqxTiFJwuOn8UjxeND44Fg138kx
ew8JVEQqgGMcpHFGhVjiHOwgx7eV86N+H5Si80j3p8elv53H50djVpXjZD5O
MZ76ce7J8ZbHSdLOBz1OTko7Z1l5vOox0/lNSf1f5PhfpxDdz/rv/6H+Qeq/
o/4H6n+h/gX1N9Q/y/v9q+X3/sXhZ9q/v8nH/aP8+5sU/aPj+qff8blc/Zvu
3z+iKE/8n+D+Wvs/qP8N4pxe/fu3+++PxptJ//4/ASuLCw==
    "], {{0, 224}, {370, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{370, 224},
  ImageSizeRaw->{370, 224},
  PlotRange->{{0, 370}, {0, 224}}]], "Output",
 CellChangeTimes->{
  3.7382696881196823`*^9, 3.7382714277253304`*^9, 3.7382733085369964`*^9, 
   3.7382733624290853`*^9, 3.7382743882928*^9, 3.7382744199193907`*^9, 
   3.7382746425698285`*^9, 3.7382746730658245`*^9, 3.738274760799757*^9, 
   3.738276955367224*^9, {3.7382770079026318`*^9, 3.7382770510789237`*^9}, 
   3.7382773454544506`*^9, {3.73828085016535*^9, 3.7382808887177544`*^9}, {
   3.7382809685072703`*^9, 3.738280978598689*^9}, 3.7382811066783757`*^9, 
   3.7382823414250774`*^9, 3.7382824031964226`*^9, 3.7382824349625826`*^9, {
   3.738282487455262*^9, 3.7382825278767834`*^9}, 3.738283240334221*^9, 
   3.738283379259574*^9, 3.738319294002658*^9, 3.738319658814333*^9, 
   3.7383215072981997`*^9, 3.7383225259802723`*^9, 3.7383237356321344`*^9, 
   3.738324045470065*^9, 3.7383241017409554`*^9, {3.738324416074692*^9, 
   3.738324435191289*^9}, 3.738324792580998*^9, 3.7383248715502872`*^9, 
   3.7383249800401897`*^9, 3.7383251196130457`*^9, {3.7383252375901675`*^9, 
   3.7383252828262157`*^9}, {3.738325362330534*^9, 3.7383253868472695`*^9}, 
   3.738325432028458*^9, 3.7383254646600275`*^9, 3.738325771620741*^9, 
   3.7383260029483824`*^9, {3.738326125028567*^9, 3.7383261391589966`*^9}, 
   3.7383261885232754`*^9, 3.7383384138631616`*^9, 3.738338993878039*^9, 
   3.7383390528474193`*^9, 3.7383392444418325`*^9, 3.7383396419760337`*^9, 
   3.7383398760673103`*^9, 3.7383399807199783`*^9, 3.738445231190018*^9, 
   3.7384453468724833`*^9, 3.73844543082023*^9, {3.7384523716753035`*^9, 
   3.738452400604801*^9}, 3.738452456435934*^9, 3.7386017222380075`*^9, 
   3.738601839436195*^9, 3.7386060199677114`*^9, 3.7386061007903967`*^9, 
   3.7386101704144874`*^9, 3.738610718381367*^9, 3.739387345759731*^9, 
   3.7393875305787*^9, 3.739387578466239*^9, 3.7393876558238907`*^9, 
   3.7395734412117057`*^9, 3.739573540667841*^9, 3.7395750608246593`*^9, 
   3.739579491675605*^9, 3.739579541438014*^9, 3.7395804803627014`*^9, 
   3.7395806043668613`*^9, 3.739580729234044*^9, 3.739628965704094*^9, 
   3.7396291459698*^9, 3.7396291836270857`*^9, 3.7396319397975883`*^9, 
   3.7396336710753064`*^9, 3.739649725904478*^9, 3.739649761863612*^9, 
   3.7396497991974583`*^9, 3.739649837505913*^9, 3.739649910463409*^9, 
   3.7396501100965796`*^9, 3.739650528261338*^9, 3.7396505665064073`*^9, {
   3.73965094554208*^9, 3.739650966999874*^9}, 3.7396510683976245`*^9, 
   3.739651114206602*^9, 3.739651152633627*^9, 3.7396512569643173`*^9, 
   3.7396512877080126`*^9, {3.7396514138612003`*^9, 3.7396514361347084`*^9}, 
   3.7396514762759285`*^9, 3.7396518054591923`*^9, 3.7396518656190944`*^9, 
   3.739652216751227*^9, 3.7396525638855352`*^9, 3.7396526219339733`*^9, 
   3.73965477229838*^9, 3.739655992273533*^9, 3.739656032979317*^9, 
   3.7396560640016203`*^9, 3.739657565817342*^9, 3.739657604353163*^9, 
   3.7396577999963436`*^9, 3.739658384118066*^9, 3.7396591620494623`*^9, 
   3.73965939924504*^9, 3.7396599904671345`*^9, 3.739660730571804*^9, {
   3.739661457540019*^9, 3.7396615136759977`*^9}, 3.739661559157057*^9, 
   3.7396615960839934`*^9, 3.739662678432618*^9, 3.739731334877206*^9, 
   3.7397325946779957`*^9, 3.7397326517244315`*^9, 3.7397337932281523`*^9, 
   3.7397340462058587`*^9, 3.739734192789262*^9, 3.739734332416068*^9, 
   3.739735566405017*^9, 3.739758902564228*^9, 3.73978721500951*^9, 
   3.7397891646466703`*^9, 3.739793130157936*^9, 3.739793178758696*^9, 
   3.7397932207483363`*^9, 3.7397934436694703`*^9, 3.7397934997007627`*^9, 
   3.739808188934022*^9, {3.7398091834782753`*^9, 3.7398092342641115`*^9}, 
   3.7398093328133717`*^9, 3.739826010458652*^9, 3.739826987229086*^9, 
   3.739827537442088*^9, 3.739830468595497*^9, 3.7398310256350627`*^9, {
   3.73983127605439*^9, 3.7398313245765514`*^9}, 3.7398313814574423`*^9, 
   3.7398317378971405`*^9, 3.7398327409609737`*^9, 3.739836058580251*^9, 
   3.7398367343883843`*^9, 3.739836794755167*^9, 3.7398368292628784`*^9, 
   3.739839323952955*^9, 3.739839365629698*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"03f882ae-eccf-4577-8e3e-453512d63b42"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1264, 637},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 7, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 273, 4, 32, "Input",ExpressionUUID->"8b009a75-4f42-4b58-9fd1-29151d27f6d6"],
Cell[CellGroupData[{
Cell[856, 28, 160, 3, 73, "Section",ExpressionUUID->"63e62628-8f7a-49f9-8ecd-2c5c9084c5a4"],
Cell[CellGroupData[{
Cell[1041, 35, 2836, 56, 165, "Input",ExpressionUUID->"7dae066c-eba1-4014-94d5-cfec5b336276"],
Cell[3880, 93, 9120, 230, 169, "Output",ExpressionUUID->"54a344a1-a7e3-4fc6-ab1f-f3f0a5e7769b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13049, 329, 172, 3, 73, "Section",ExpressionUUID->"ff7e7ea5-d703-4420-bcf0-aa9cd69fa2c9"],
Cell[CellGroupData[{
Cell[13246, 336, 8385, 193, 539, "Input",ExpressionUUID->"48acc9db-3436-4fba-858e-064f80b40bba"],
Cell[21634, 531, 12115, 273, 191, "Output",ExpressionUUID->"ed4633a2-c509-49af-a73d-22dffe9ba003"],
Cell[33752, 806, 3618, 55, 46, "Output",ExpressionUUID->"ad2cc768-d55d-48c7-9c7a-4f5284668f44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37407, 866, 4087, 103, 253, "Input",ExpressionUUID->"afecccb9-6f19-4e37-a52f-4965d4984e7d"],
Cell[41497, 971, 7632, 131, 191, "Output",ExpressionUUID->"c2f4c1c9-16dd-42a1-ae04-c8a5a753a602"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49178, 1108, 156, 3, 73, "Section",ExpressionUUID->"ba1846d0-d353-4ab1-9798-31ba3459dd24"],
Cell[CellGroupData[{
Cell[49359, 1115, 9389, 196, 539, "Input",ExpressionUUID->"827d1768-512a-49aa-8378-65609b83bcca"],
Cell[58751, 1313, 3737, 52, 36, "Output",ExpressionUUID->"785b5f97-676f-4337-bf1b-35a1bf07b306"],
Cell[62491, 1367, 3729, 52, 36, "Output",ExpressionUUID->"16b0366a-3054-4fa0-8cef-fac87aa47cec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66269, 1425, 157, 3, 73, "Section",ExpressionUUID->"3a68c625-782c-4e94-814c-50c88329a671"],
Cell[66429, 1430, 2481, 60, 209, "Input",ExpressionUUID->"22d4a9e0-1e9d-43b0-bc91-c2ee1b8e9da0"],
Cell[CellGroupData[{
Cell[68935, 1494, 11691, 252, 561, "Input",ExpressionUUID->"4785fc69-edc9-494b-8d94-00d6fa0a3061"],
Cell[80629, 1748, 142669, 2341, 635, 83764, 1378, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"7e7f115f-f20c-49d0-8254-2cceace93767"],
Cell[223301, 4091, 366116, 5913, 635, 226372, 3625, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"86671b17-e435-4c7b-83e1-3ea966162484"],
Cell[589420, 10006, 87106, 1434, 635, "Output",ExpressionUUID->"1e79bfa4-3e29-43a1-b494-ba0550f0477d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[676563, 11445, 481, 13, 32, "Input",ExpressionUUID->"25fdd327-e00d-4aa1-999f-6b7c89675d6d"],
Cell[677047, 11460, 19901, 461, 468, "Output",ExpressionUUID->"c82034f9-62ed-4be7-9e36-b766b93dcedd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696985, 11926, 1860, 39, 99, "Input",ExpressionUUID->"534ee1a0-7c24-4626-a208-3f886321a5f2"],
Cell[698848, 11967, 157366, 2579, 494, 86635, 1431, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"be0bb69d-229c-4e0b-9a3c-28c7e7da109a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[856263, 14552, 154, 3, 73, "Section",ExpressionUUID->"01ffa067-d1f6-45a5-8fbe-df15c2b1991e"],
Cell[CellGroupData[{
Cell[856442, 14559, 17980, 392, 1441, "Input",ExpressionUUID->"aad73962-9efc-479b-ad14-8bebc2f1032b"],
Cell[874425, 14953, 1162, 20, 23, "Message",ExpressionUUID->"838f5d80-3369-44e1-a45a-be00f1b28bae"],
Cell[875590, 14975, 752, 15, 23, "Message",ExpressionUUID->"6e41cf05-0523-4ad6-a78b-8b0fd75f451e"],
Cell[876345, 14992, 816, 16, 23, "Message",ExpressionUUID->"ea498e70-6c22-46be-8934-aa7830e997ad"],
Cell[877164, 15010, 601, 13, 23, "Message",ExpressionUUID->"bf8ba014-5940-401b-995f-8fb330c030da"],
Cell[877768, 15025, 1763, 30, 62, "Message",ExpressionUUID->"a014d804-2960-436b-a356-af6c3d09458f"],
Cell[879534, 15057, 1954, 33, 62, "Message",ExpressionUUID->"eac051d8-a504-490b-a597-3ee00e4ac41d"],
Cell[881491, 15092, 2003, 34, 62, "Message",ExpressionUUID->"29f5eef3-dd1b-4356-998b-48dd39e37a45"],
Cell[883497, 15128, 1908, 32, 62, "Message",ExpressionUUID->"dfccf131-6c45-42f0-814d-2e15e084c6d4"],
Cell[885408, 15162, 1996, 33, 62, "Message",ExpressionUUID->"e1fcf366-3a47-4517-8625-b2e1c7f17217"],
Cell[887407, 15197, 1673, 28, 62, "Message",ExpressionUUID->"defc2f25-fd9e-47e5-954b-996e12fbb645"],
Cell[889083, 15227, 1787, 30, 62, "Message",ExpressionUUID->"a7d2f49f-b663-4257-b288-8dc0a049c74e"],
Cell[890873, 15259, 6816, 102, 101, "Message",ExpressionUUID->"71f0129d-8d1e-4b9e-98a2-1d026246d184"],
Cell[897692, 15363, 4042, 61, 81, "Message",ExpressionUUID->"1976ffa7-1efe-41d2-b041-5ebefb81d328"],
Cell[901737, 15426, 3581, 54, 106, "Message",ExpressionUUID->"7ecd7038-900d-4e85-a509-99e3277a656a"],
Cell[905321, 15482, 3414, 51, 81, "Message",ExpressionUUID->"81182f0a-f887-479a-a508-c23960eaeb12"],
Cell[908738, 15535, 2406, 37, 62, "Message",ExpressionUUID->"b632d742-d196-4317-ae97-6a002612173f"],
Cell[911147, 15574, 4168, 63, 81, "Message",ExpressionUUID->"a7ab4dd5-090a-40ce-8fd8-e65b307236e9"],
Cell[915318, 15639, 4240, 63, 100, "Message",ExpressionUUID->"409f8e96-9c72-4e70-ad93-225b04b7ca99"],
Cell[919561, 15704, 671, 13, 23, "Message",ExpressionUUID->"78cd9809-2b81-4195-934d-104d585a3969"],
Cell[920235, 15719, 671, 13, 23, "Message",ExpressionUUID->"813ae20b-5f41-4768-be5e-c5fe1fc6dc04"],
Cell[920909, 15734, 2624, 40, 109, "Message",ExpressionUUID->"0d48cc80-7d9f-4b99-ac1d-d11daeadc227"],
Cell[923536, 15776, 1671, 28, 62, "Message",ExpressionUUID->"ff6e6e65-3c47-44c9-9897-7e275c7ed1c2"],
Cell[925210, 15806, 640, 13, 23, "Message",ExpressionUUID->"a9eb3920-51fc-42c2-83ba-2ae86d3ec3c2"],
Cell[925853, 15821, 982, 18, 23, "Message",ExpressionUUID->"b8d8e0a5-b81d-40ef-bfe7-fa1aca236f11"],
Cell[926838, 15841, 754, 15, 23, "Message",ExpressionUUID->"d173d46e-b2a0-4e31-a9a0-0043c8d9eea2"],
Cell[927595, 15858, 813, 16, 23, "Message",ExpressionUUID->"a2e93bd5-d58d-4a46-8a53-0f48fa86e6d2"],
Cell[928411, 15876, 601, 13, 23, "Message",ExpressionUUID->"800d7294-b0c4-4a48-97b1-c4a886685845"],
Cell[929015, 15891, 649, 13, 23, "Message",ExpressionUUID->"8e7214a5-7259-4f34-8790-5207512cf839"],
Cell[929667, 15906, 1763, 30, 62, "Message",ExpressionUUID->"a84105c4-0677-4c1f-931c-77eb0cca536b"],
Cell[931433, 15938, 1956, 33, 62, "Message",ExpressionUUID->"9a55e3b4-b343-4435-b436-afa500604138"],
Cell[933392, 15973, 2004, 34, 62, "Message",ExpressionUUID->"09161b08-067c-49d8-a514-8bde76968577"],
Cell[935399, 16009, 1996, 33, 62, "Message",ExpressionUUID->"a75593fa-1158-4c4c-be1f-04d1c9cb5e1d"],
Cell[937398, 16044, 6818, 102, 101, "Message",ExpressionUUID->"16acc6dc-2d48-44a4-9eac-f10e9af74a21"],
Cell[944219, 16148, 640, 13, 23, "Message",ExpressionUUID->"b0fa786b-fb83-4e1e-8b57-ff3baaa5b1e0"],
Cell[944862, 16163, 4042, 61, 81, "Message",ExpressionUUID->"16748c4f-aa46-48ac-8b60-b58c457e446e"],
Cell[948907, 16226, 651, 13, 23, "Message",ExpressionUUID->"f5e602f9-c180-410a-b192-40f66959e14f"],
Cell[949561, 16241, 3583, 54, 106, "Message",ExpressionUUID->"c31c9a21-ccc7-4d61-a17f-c95b2e32c8e0"],
Cell[953147, 16297, 642, 13, 23, "Message",ExpressionUUID->"594f70dc-5565-499f-923c-711e6be570f8"],
Cell[953792, 16312, 4168, 63, 81, "Message",ExpressionUUID->"7511c42e-9eae-4c2f-8c42-fb15e5a62042"],
Cell[957963, 16377, 669, 13, 23, "Message",ExpressionUUID->"6022b793-1626-45f9-baa2-4430b48cb149"],
Cell[958635, 16392, 656, 13, 23, "Message",ExpressionUUID->"aa41efec-9ab4-4f52-a03f-0f5089a816df"],
Cell[959294, 16407, 2626, 40, 109, "Message",ExpressionUUID->"cb2ceaa5-45a6-4e2e-9854-cd821add9d49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[961957, 16452, 2857, 66, 253, "Input",ExpressionUUID->"329dfcd3-d409-4772-b22e-33eeb276f5fb"],
Cell[964817, 16520, 2904, 54, 594, "Output",ExpressionUUID->"d2ef1eb2-57be-4db3-b0c3-f3dd11d56bef"],
Cell[967724, 16576, 13819, 322, 294, "Output",ExpressionUUID->"6c608f32-bfc9-4e96-a6c4-baf25c68aa37"],
Cell[981546, 16900, 221185, 4620, 4122, "Output",ExpressionUUID->"fe65da2a-45a2-4c41-9a87-34a9e4b2822a"],
Cell[1202734, 21522, 73665, 1538, 1438, "Output",ExpressionUUID->"99a6477e-12a5-42d0-b2ea-429b8d225602"],
Cell[1276402, 23062, 75140, 1564, 1526, "Output",ExpressionUUID->"202c0183-8701-4629-aef3-7f8689dda074"],
Cell[1351545, 24628, 1303, 30, 116, "Output",ExpressionUUID->"4569bb07-0748-4069-a642-5f47088552cf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1352897, 24664, 159, 3, 73, "Section",ExpressionUUID->"9b713752-be07-4f11-ad8b-52a35d8adfa0"],
Cell[CellGroupData[{
Cell[1353081, 24671, 8180, 202, 605, "Input",ExpressionUUID->"f02bc85c-df4a-44f4-9856-6ea77e4dee97"],
Cell[1361264, 24875, 78372, 1287, 265, "Output",ExpressionUUID->"08ce1ea9-0cc9-4012-95cb-b34ecfafb3c1"],
Cell[1439639, 26164, 124088, 2029, 265, "Output",ExpressionUUID->"03f882ae-eccf-4577-8e3e-453512d63b42"]
}, Open  ]]
}, Open  ]]
}
]
*)

